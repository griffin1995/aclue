{
    "info": {
        "_postman_id": "aclue-comprehensive-api-tests",
        "name": "Aclue API Comprehensive Test Collection",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "description": "Comprehensive API testing suite for Aclue backend"
    },
    "auth": {
        "type": "bearer",
        "bearer": [
            {
                "key": "token",
                "value": "{{auth_token}}",
                "type": "string"
            }
        ]
    },
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "exec": [
                    "// Set base URL",
                    "pm.globals.set('baseUrl', 'https://aclue-backend-production.up.railway.app');"
                ]
            }
        }
    ],
    "variable": [
        {
            "key": "auth_token",
            "value": "",
            "type": "string"
        },
        {
            "key": "user_email",
            "value": "john.doe@example.com",
            "type": "string"
        },
        {
            "key": "user_password",
            "value": "password123",
            "type": "string"
        }
    ],
    "item": [
        {
            "name": "Authentication Tests",
            "item": [
                {
                    "name": "Login - Get JWT Token",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response has access token', function () {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.expect(responseJson).to.have.property('access_token');",
                                    "    pm.expect(responseJson).to.have.property('refresh_token');",
                                    "    ",
                                    "    // Store token for subsequent requests",
                                    "    pm.collectionVariables.set('auth_token', responseJson.access_token);",
                                    "});",
                                    "",
                                    "pm.test('Response time is acceptable', function () {",
                                    "    pm.expect(pm.response.responseTime).to.be.below(5000);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"email\": \"{{user_email}}\",\n    \"password\": \"{{user_password}}\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/auth/login",
                            "host": ["{{baseUrl}}"],
                            "path": ["api", "v1", "auth", "login"]
                        }
                    }
                },
                {
                    "name": "Get Current User Profile",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response contains user data', function () {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.expect(responseJson).to.have.property('id');",
                                    "    pm.expect(responseJson).to.have.property('email');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/auth/me",
                            "host": ["{{baseUrl}}"],
                            "path": ["api", "v1", "auth", "me"]
                        }
                    }
                },
                {
                    "name": "Test Invalid Login",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Status code is 401', function () {",
                                    "    pm.response.to.have.status(401);",
                                    "});",
                                    "",
                                    "pm.test('Error message is present', function () {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.expect(responseJson).to.have.property('detail');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"email\": \"invalid@example.com\",\n    \"password\": \"wrongpassword\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/auth/login",
                            "host": ["{{baseUrl}}"],
                            "path": ["api", "v1", "auth", "login"]
                        }
                    }
                }
            ]
        },
        {
            "name": "Products API Tests",
            "item": [
                {
                    "name": "Get Products List",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response is an array', function () {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.expect(responseJson).to.be.an('array');",
                                    "});",
                                    "",
                                    "pm.test('Products have required fields', function () {",
                                    "    const responseJson = pm.response.json();",
                                    "    if (responseJson.length > 0) {",
                                    "        const product = responseJson[0];",
                                    "        pm.expect(product).to.have.property('id');",
                                    "        pm.expect(product).to.have.property('title');",
                                    "        pm.expect(product).to.have.property('price');",
                                    "    }",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/products/?limit=10",
                            "host": ["{{baseUrl}}"],
                            "path": ["api", "v1", "products", ""],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "10"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "Get Trending Products",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response is an array', function () {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.expect(responseJson).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/products/trending/?limit=5",
                            "host": ["{{baseUrl}}"],
                            "path": ["api", "v1", "products", "trending", ""],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "5"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "Search Products",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response is an array', function () {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.expect(responseJson).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/products/?q=headphones&limit=10",
                            "host": ["{{baseUrl}}"],
                            "path": ["api", "v1", "products", ""],
                            "query": [
                                {
                                    "key": "q",
                                    "value": "headphones"
                                },
                                {
                                    "key": "limit",
                                    "value": "10"
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Recommendations API Tests",
            "item": [
                {
                    "name": "Get Recommendations (Authenticated)",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response is an array', function () {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.expect(responseJson).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/recommendations/?limit=5",
                            "host": ["{{baseUrl}}"],
                            "path": ["api", "v1", "recommendations", ""],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "5"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "Get Recommendations (Unauthenticated)",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Status code is 401', function () {",
                                    "    pm.response.to.have.status(401);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/recommendations/",
                            "host": ["{{baseUrl}}"],
                            "path": ["api", "v1", "recommendations", ""]
                        }
                    }
                }
            ]
        },
        {
            "name": "Swipes API Tests",
            "item": [
                {
                    "name": "Start Swipe Session",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response contains session ID', function () {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.expect(responseJson).to.have.property('session_id');",
                                    "    pm.collectionVariables.set('session_id', responseJson.session_id);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/swipes/sessions",
                            "host": ["{{baseUrl}}"],
                            "path": ["api", "v1", "swipes", "sessions"]
                        }
                    }
                },
                {
                    "name": "Record Swipe",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response contains swipe ID', function () {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.expect(responseJson).to.have.property('id');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"product_id\": \"test-product-123\",\n    \"direction\": \"like\",\n    \"session_id\": \"{{session_id}}\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/swipes/",
                            "host": ["{{baseUrl}}"],
                            "path": ["api", "v1", "swipes", ""]
                        }
                    }
                }
            ]
        },
        {
            "name": "Health Check Tests",
            "item": [
                {
                    "name": "Health Check",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response time is acceptable', function () {",
                                    "    pm.expect(pm.response.responseTime).to.be.below(3000);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/health",
                            "host": ["{{baseUrl}}"],
                            "path": ["health"]
                        }
                    }
                },
                {
                    "name": "Root Endpoint",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/",
                            "host": ["{{baseUrl}}"],
                            "path": [""]
                        }
                    }
                }
            ]
        },
        {
            "name": "Error Handling Tests",
            "item": [
                {
                    "name": "Test 404 Not Found",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Status code is 404', function () {",
                                    "    pm.response.to.have.status(404);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/nonexistent-endpoint",
                            "host": ["{{baseUrl}}"],
                            "path": ["api", "v1", "nonexistent-endpoint"]
                        }
                    }
                },
                {
                    "name": "Test Malformed JSON",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Status code is 422 or 400', function () {",
                                    "    pm.expect(pm.response.code).to.be.oneOf([400, 422]);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{ invalid json"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/auth/login",
                            "host": ["{{baseUrl}}"],
                            "path": ["api", "v1", "auth", "login"]
                        }
                    }
                }
            ]
        }
    ]
}