{"version":3,"sources":["/home/jack/Documents/aclue-preprod/web/.stryker-tmp/sandbox-oWQoZs/src/context/AuthContext.tsx"],"sourcesContent":["/**\n * aclue Authentication Context\n * \n * Centralised authentication state management for the entire application.\n * Provides secure user session handling, JWT token management, and\n * authentication flows for login, registration, and logout.\n * \n * Key Features:\n *   - Automatic token refresh and session persistence\n *   - Protected route authentication guards\n *   - Real-time user state synchronisation\n *   - PostHog analytics integration for user events\n *   - Comprehensive error handling and user feedback\n * \n * State Management:\n *   - Uses useReducer for predictable state updates\n *   - Persists user data to localStorage for session continuity\n *   - Handles loading states during authentication operations\n * \n * Usage:\n *   // In _app.tsx\n *   <AuthProvider>\n *     <Component {...pageProps} />\n *   </AuthProvider>\n * \n *   // In components\n *   const { user, login, logout, isAuthenticated } = useAuth();\n */\n// @ts-nocheck\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nimport React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\nimport { useRouter } from 'next/router';\nimport { api, tokenManager } from '@/lib/api';\nimport { appConfig } from '@/config';\nimport { User, LoginRequest, RegisterRequest } from '@/types';\nimport toast from 'react-hot-toast';\n\n// ==============================================================================\n// TYPE DEFINITIONS\n// ==============================================================================\n\n/**\n * Authentication state interface defining the current auth status.\n * \n * Tracks user session, loading states, and error conditions to\n * provide comprehensive authentication state to the application.\n */\ninterface AuthState {\n  user: User | null; // Current authenticated user (null if not logged in)\n  isAuthenticated: boolean; // Authentication status (true if user logged in)\n  isLoading: boolean; // Loading state during auth operations\n  isInitialized: boolean; // Whether auth state has been initialized from storage\n  isLoggingOut: boolean; // Logout in progress flag\n  error: string | null; // Current error message (null if no error)\n}\n\n/**\n * Authentication context interface providing auth methods and state.\n * \n * Extends AuthState with methods for authentication operations.\n * All methods are async and handle loading states automatically.\n */\ninterface AuthContextType extends AuthState {\n  login: (credentials: LoginRequest) => Promise<void>; // Authenticate user with email/password\n  register: (userData: RegisterRequest) => Promise<void>; // Create new user account\n  logout: () => Promise<void>; // End user session and clear tokens\n  refreshToken: () => Promise<void>; // Refresh expired access token\n  clearError: () => void; // Clear current error state\n  updateUser: (userData: Partial<User>) => void; // Update user profile data\n}\n\n/**\n * Authentication action types for state management.\n * \n * Defines all possible state changes that can occur during\n * authentication flows. Used with useReducer for predictable\n * state updates.\n */\ntype AuthAction = {\n  type: 'SET_LOADING';\n  payload: boolean;\n} // Update loading state\n| {\n  type: 'SET_USER';\n  payload: User | null;\n} // Set authenticated user\n| {\n  type: 'SET_ERROR';\n  payload: string | null;\n} // Set error message\n| {\n  type: 'SET_INITIALIZED';\n  payload: boolean;\n} // Mark auth as initialized\n| {\n  type: 'SET_LOGGING_OUT';\n  payload: boolean;\n} // Set logout in progress\n| {\n  type: 'LOGOUT';\n} // Clear user and reset state\n| {\n  type: 'UPDATE_USER';\n  payload: Partial<User>;\n}; // Update user profile data\n\n/**\n * Initial authentication state on application load.\n * \n * Sets default values for all auth state properties.\n * isLoading starts as true to prevent flash of unauthenticated content.\n */\nconst initialState: AuthState = stryMutAct_9fa48(\"8698\") ? {} : (stryCov_9fa48(\"8698\"), {\n  user: null,\n  // No user authenticated initially\n  isAuthenticated: stryMutAct_9fa48(\"8699\") ? true : (stryCov_9fa48(\"8699\"), false),\n  // Not authenticated until proven otherwise\n  isLoading: stryMutAct_9fa48(\"8700\") ? false : (stryCov_9fa48(\"8700\"), true),\n  // Loading while checking stored tokens\n  isInitialized: stryMutAct_9fa48(\"8701\") ? true : (stryCov_9fa48(\"8701\"), false),\n  // Not initialized until storage check complete\n  isLoggingOut: stryMutAct_9fa48(\"8702\") ? true : (stryCov_9fa48(\"8702\"), false),\n  // No logout in progress\n  error: null // No error initially\n});\n\n// ==============================================================================\n// STATE REDUCER\n// ==============================================================================\n\n/**\n * Authentication state reducer for predictable state management.\n * \n * Handles all authentication state changes through well-defined actions.\n * Ensures immutable state updates and consistent state transitions.\n * \n * Parameters:\n *   state: Current authentication state\n *   action: Action to perform with optional payload\n * \n * Returns:\n *   AuthState: New state after applying action\n */\nconst authReducer = (state: AuthState, action: AuthAction): AuthState => {\n  if (stryMutAct_9fa48(\"8703\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"8703\");\n    switch (action.type) {\n      case stryMutAct_9fa48(\"8705\") ? \"\" : (stryCov_9fa48(\"8705\"), 'SET_LOADING'):\n        if (stryMutAct_9fa48(\"8704\")) {} else {\n          stryCov_9fa48(\"8704\");\n          return stryMutAct_9fa48(\"8706\") ? {} : (stryCov_9fa48(\"8706\"), {\n            ...state,\n            isLoading: action.payload\n          });\n        }\n      case stryMutAct_9fa48(\"8708\") ? \"\" : (stryCov_9fa48(\"8708\"), 'SET_USER'):\n        if (stryMutAct_9fa48(\"8707\")) {} else {\n          stryCov_9fa48(\"8707\");\n          return stryMutAct_9fa48(\"8709\") ? {} : (stryCov_9fa48(\"8709\"), {\n            ...state,\n            user: action.payload,\n            // Set user data\n            isAuthenticated: stryMutAct_9fa48(\"8710\") ? !action.payload : (stryCov_9fa48(\"8710\"), !(stryMutAct_9fa48(\"8711\") ? action.payload : (stryCov_9fa48(\"8711\"), !action.payload))),\n            // Authenticated if user exists\n            isLoading: stryMutAct_9fa48(\"8712\") ? true : (stryCov_9fa48(\"8712\"), false),\n            // No longer loading\n            error: null // Clear any errors\n          });\n        }\n      case stryMutAct_9fa48(\"8714\") ? \"\" : (stryCov_9fa48(\"8714\"), 'SET_ERROR'):\n        if (stryMutAct_9fa48(\"8713\")) {} else {\n          stryCov_9fa48(\"8713\");\n          return stryMutAct_9fa48(\"8715\") ? {} : (stryCov_9fa48(\"8715\"), {\n            ...state,\n            error: action.payload,\n            // Set error message\n            isLoading: stryMutAct_9fa48(\"8716\") ? true : (stryCov_9fa48(\"8716\"), false) // Stop loading on error\n          });\n        }\n      case stryMutAct_9fa48(\"8718\") ? \"\" : (stryCov_9fa48(\"8718\"), 'SET_INITIALIZED'):\n        if (stryMutAct_9fa48(\"8717\")) {} else {\n          stryCov_9fa48(\"8717\");\n          return stryMutAct_9fa48(\"8719\") ? {} : (stryCov_9fa48(\"8719\"), {\n            ...state,\n            isInitialized: action.payload,\n            // Mark as initialized\n            isLoading: stryMutAct_9fa48(\"8720\") ? action.payload : (stryCov_9fa48(\"8720\"), !action.payload) // Stop loading when initialized\n          });\n        }\n      case stryMutAct_9fa48(\"8722\") ? \"\" : (stryCov_9fa48(\"8722\"), 'SET_LOGGING_OUT'):\n        if (stryMutAct_9fa48(\"8721\")) {} else {\n          stryCov_9fa48(\"8721\");\n          return stryMutAct_9fa48(\"8723\") ? {} : (stryCov_9fa48(\"8723\"), {\n            ...state,\n            isLoggingOut: action.payload // Set logout in progress flag\n          });\n        }\n      case stryMutAct_9fa48(\"8725\") ? \"\" : (stryCov_9fa48(\"8725\"), 'LOGOUT'):\n        if (stryMutAct_9fa48(\"8724\")) {} else {\n          stryCov_9fa48(\"8724\");\n          return stryMutAct_9fa48(\"8726\") ? {} : (stryCov_9fa48(\"8726\"), {\n            ...initialState,\n            // Reset to initial state\n            isInitialized: stryMutAct_9fa48(\"8727\") ? false : (stryCov_9fa48(\"8727\"), true),\n            // Keep initialized flag\n            isLoading: stryMutAct_9fa48(\"8728\") ? true : (stryCov_9fa48(\"8728\"), false),\n            // Not loading after logout\n            isLoggingOut: stryMutAct_9fa48(\"8729\") ? true : (stryCov_9fa48(\"8729\"), false) // Logout complete\n          });\n        }\n      case stryMutAct_9fa48(\"8731\") ? \"\" : (stryCov_9fa48(\"8731\"), 'UPDATE_USER'):\n        if (stryMutAct_9fa48(\"8730\")) {} else {\n          stryCov_9fa48(\"8730\");\n          return stryMutAct_9fa48(\"8732\") ? {} : (stryCov_9fa48(\"8732\"), {\n            ...state,\n            user: state.user ? stryMutAct_9fa48(\"8733\") ? {} : (stryCov_9fa48(\"8733\"), {\n              ...state.user,\n              ...action.payload\n            }) : null // Merge user updates\n          });\n        }\n      default:\n        if (stryMutAct_9fa48(\"8734\")) {} else {\n          stryCov_9fa48(\"8734\");\n          return state;\n        }\n      // No change for unknown actions\n    }\n  }\n};\n\n// ==============================================================================\n// CONTEXT CREATION\n// ==============================================================================\n\n/**\n * Authentication context for sharing auth state across the application.\n * \n * Created with undefined default to force proper provider usage.\n * Components must be wrapped in AuthProvider to access context.\n */\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// ==============================================================================\n// PROVIDER COMPONENT\n// ==============================================================================\n\n/**\n * Props for AuthProvider component.\n */\ninterface AuthProviderProps {\n  children: ReactNode; // Child components that need access to auth context\n}\n\n/**\n * Authentication Provider component.\n * \n * Provides authentication state and methods to all child components.\n * Handles session initialization, token refresh, and user state persistence.\n * \n * Initialization Flow:\n *   1. Check for stored tokens in localStorage\n *   2. Validate tokens with backend\n *   3. Restore user session or clear invalid tokens\n *   4. Mark authentication as initialized\n * \n * Props:\n *   children: React components that need auth context\n */\nexport const AuthProvider: React.FC<AuthProviderProps> = ({\n  children\n}) => {\n  if (stryMutAct_9fa48(\"8735\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"8735\");\n    const [state, dispatch] = useReducer(authReducer, initialState);\n    const router = useRouter();\n\n    // ===========================================================================\n    // AUTHENTICATION INITIALIZATION\n    // ===========================================================================\n\n    /**\n     * Initialize authentication state on component mount.\n     * \n     * Runs once when the app loads to:\n     *   - Check for stored authentication tokens\n     *   - Restore user session from localStorage\n     *   - Verify tokens with backend\n     *   - Handle token refresh if needed\n     *   - Clear invalid sessions\n     */\n    useEffect(() => {\n      if (stryMutAct_9fa48(\"8736\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"8736\");\n        const initializeAuth = async () => {\n          if (stryMutAct_9fa48(\"8737\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"8737\");\n            try {\n              if (stryMutAct_9fa48(\"8738\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"8738\");\n                dispatch(stryMutAct_9fa48(\"8739\") ? {} : (stryCov_9fa48(\"8739\"), {\n                  type: stryMutAct_9fa48(\"8740\") ? \"\" : (stryCov_9fa48(\"8740\"), 'SET_LOADING'),\n                  payload: stryMutAct_9fa48(\"8741\") ? false : (stryCov_9fa48(\"8741\"), true)\n                }));\n\n                // Check for stored access token\n                const token = tokenManager.getAccessToken();\n                if (stryMutAct_9fa48(\"8744\") ? false : stryMutAct_9fa48(\"8743\") ? true : stryMutAct_9fa48(\"8742\") ? token : (stryCov_9fa48(\"8742\", \"8743\", \"8744\"), !token)) {\n                  if (stryMutAct_9fa48(\"8745\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"8745\");\n                    // No token found - user not logged in\n                    dispatch(stryMutAct_9fa48(\"8746\") ? {} : (stryCov_9fa48(\"8746\"), {\n                      type: stryMutAct_9fa48(\"8747\") ? \"\" : (stryCov_9fa48(\"8747\"), 'SET_INITIALIZED'),\n                      payload: stryMutAct_9fa48(\"8748\") ? false : (stryCov_9fa48(\"8748\"), true)\n                    }));\n                    return;\n                  }\n                }\n\n                // Restore user data from localStorage for immediate UI update\n                const storedUser = localStorage.getItem(appConfig.storage.user);\n                if (stryMutAct_9fa48(\"8750\") ? false : stryMutAct_9fa48(\"8749\") ? true : (stryCov_9fa48(\"8749\", \"8750\"), storedUser)) {\n                  if (stryMutAct_9fa48(\"8751\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"8751\");\n                    try {\n                      if (stryMutAct_9fa48(\"8752\")) {\n                        {}\n                      } else {\n                        stryCov_9fa48(\"8752\");\n                        const user = JSON.parse(storedUser) as User;\n                        dispatch(stryMutAct_9fa48(\"8753\") ? {} : (stryCov_9fa48(\"8753\"), {\n                          type: stryMutAct_9fa48(\"8754\") ? \"\" : (stryCov_9fa48(\"8754\"), 'SET_USER'),\n                          payload: user\n                        }));\n                      }\n                    } catch (parseError) {\n                      if (stryMutAct_9fa48(\"8755\")) {\n                        {}\n                      } else {\n                        stryCov_9fa48(\"8755\");\n                        console.warn(stryMutAct_9fa48(\"8756\") ? \"\" : (stryCov_9fa48(\"8756\"), 'Invalid stored user data, clearing localStorage:'), parseError);\n                        // Clear corrupted data\n                        localStorage.removeItem(appConfig.storage.user);\n                      }\n                    }\n                  }\n                }\n\n                // Verify token with backend and get fresh user data\n                try {\n                  if (stryMutAct_9fa48(\"8757\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"8757\");\n                    const response = await api.auth.getCurrentUser();\n                    // Handle different response formats - sometimes data is wrapped, sometimes direct\n                    const userData = stryMutAct_9fa48(\"8760\") ? response.data && response : stryMutAct_9fa48(\"8759\") ? false : stryMutAct_9fa48(\"8758\") ? true : (stryCov_9fa48(\"8758\", \"8759\", \"8760\"), response.data || response);\n                    dispatch(stryMutAct_9fa48(\"8761\") ? {} : (stryCov_9fa48(\"8761\"), {\n                      type: stryMutAct_9fa48(\"8762\") ? \"\" : (stryCov_9fa48(\"8762\"), 'SET_USER'),\n                      payload: userData\n                    }));\n\n                    // Update stored user data with fresh backend data\n                    localStorage.setItem(appConfig.storage.user, JSON.stringify(userData));\n                  }\n                } catch (error: any) {\n                  if (stryMutAct_9fa48(\"8763\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"8763\");\n                    console.error(stryMutAct_9fa48(\"8764\") ? \"\" : (stryCov_9fa48(\"8764\"), 'Token verification failed:'), error);\n\n                    // Only try to refresh if we have a refresh token\n                    const refreshToken = tokenManager.getRefreshToken();\n                    if (stryMutAct_9fa48(\"8766\") ? false : stryMutAct_9fa48(\"8765\") ? true : (stryCov_9fa48(\"8765\", \"8766\"), refreshToken)) {\n                      if (stryMutAct_9fa48(\"8767\")) {\n                        {}\n                      } else {\n                        stryCov_9fa48(\"8767\");\n                        try {\n                          if (stryMutAct_9fa48(\"8768\")) {\n                            {}\n                          } else {\n                            stryCov_9fa48(\"8768\");\n                            await refreshTokenInternal();\n                          }\n                        } catch (refreshError) {\n                          if (stryMutAct_9fa48(\"8769\")) {\n                            {}\n                          } else {\n                            stryCov_9fa48(\"8769\");\n                            console.error(stryMutAct_9fa48(\"8770\") ? \"\" : (stryCov_9fa48(\"8770\"), 'Token refresh failed:'), refreshError);\n                            await logoutInternal();\n                          }\n                        }\n                      }\n                    } else {\n                      if (stryMutAct_9fa48(\"8771\")) {\n                        {}\n                      } else {\n                        stryCov_9fa48(\"8771\");\n                        console.warn(stryMutAct_9fa48(\"8772\") ? \"\" : (stryCov_9fa48(\"8772\"), 'No refresh token available, clearing session'));\n                        await logoutInternal();\n                      }\n                    }\n                  }\n                }\n              }\n            } catch (error) {\n              if (stryMutAct_9fa48(\"8773\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"8773\");\n                console.error(stryMutAct_9fa48(\"8774\") ? \"\" : (stryCov_9fa48(\"8774\"), 'Auth initialization failed:'), error);\n                await logoutInternal();\n              }\n            } finally {\n              if (stryMutAct_9fa48(\"8775\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"8775\");\n                dispatch(stryMutAct_9fa48(\"8776\") ? {} : (stryCov_9fa48(\"8776\"), {\n                  type: stryMutAct_9fa48(\"8777\") ? \"\" : (stryCov_9fa48(\"8777\"), 'SET_INITIALIZED'),\n                  payload: stryMutAct_9fa48(\"8778\") ? false : (stryCov_9fa48(\"8778\"), true)\n                }));\n              }\n            }\n          }\n        };\n        initializeAuth();\n      }\n    }, stryMutAct_9fa48(\"8779\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"8779\"), []));\n\n    // ===========================================================================\n    // INTERNAL HELPER FUNCTIONS\n    // ===========================================================================\n\n    /**\n     * Internal logout function for cleanup without API calls.\n     * \n     * Used during error recovery and session cleanup.\n     * Clears all stored data and resets auth state.\n     */\n    const logoutInternal = async () => {\n      if (stryMutAct_9fa48(\"8780\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"8780\");\n        try {\n          if (stryMutAct_9fa48(\"8781\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"8781\");\n            // Clear tokens from memory and localStorage\n            tokenManager.clearTokens();\n\n            // Clear all stored authentication data\n            Object.values(appConfig.storage).forEach(key => {\n              if (stryMutAct_9fa48(\"8782\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"8782\");\n                localStorage.removeItem(key);\n              }\n            });\n\n            // Reset auth state\n            dispatch(stryMutAct_9fa48(\"8783\") ? {} : (stryCov_9fa48(\"8783\"), {\n              type: stryMutAct_9fa48(\"8784\") ? \"\" : (stryCov_9fa48(\"8784\"), 'LOGOUT')\n            }));\n          }\n        } catch (error) {\n          if (stryMutAct_9fa48(\"8785\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"8785\");\n            console.error(stryMutAct_9fa48(\"8786\") ? \"\" : (stryCov_9fa48(\"8786\"), 'Logout error:'), error);\n          }\n        }\n      }\n    };\n\n    /**\n     * Internal token refresh function for session renewal.\n     * \n     * Uses stored refresh token to obtain new access token.\n     * Updates stored tokens with new values.\n     */\n    const refreshTokenInternal = async () => {\n      if (stryMutAct_9fa48(\"8787\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"8787\");\n        const refreshToken = tokenManager.getRefreshToken();\n        if (stryMutAct_9fa48(\"8790\") ? false : stryMutAct_9fa48(\"8789\") ? true : stryMutAct_9fa48(\"8788\") ? refreshToken : (stryCov_9fa48(\"8788\", \"8789\", \"8790\"), !refreshToken)) {\n          if (stryMutAct_9fa48(\"8791\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"8791\");\n            throw new Error(stryMutAct_9fa48(\"8792\") ? \"\" : (stryCov_9fa48(\"8792\"), 'No refresh token available'));\n          }\n        }\n\n        // Call refresh endpoint\n        const response = await api.auth.refresh(stryMutAct_9fa48(\"8793\") ? {} : (stryCov_9fa48(\"8793\"), {\n          refresh_token: refreshToken\n        }));\n        const {\n          access_token,\n          refresh_token: newRefreshToken\n        } = response.data;\n\n        // Store new tokens\n        tokenManager.setTokens(access_token, newRefreshToken);\n      }\n    };\n\n    // Login function\n    const login = async (credentials: LoginRequest) => {\n      if (stryMutAct_9fa48(\"8794\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"8794\");\n        try {\n          if (stryMutAct_9fa48(\"8795\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"8795\");\n            dispatch(stryMutAct_9fa48(\"8796\") ? {} : (stryCov_9fa48(\"8796\"), {\n              type: stryMutAct_9fa48(\"8797\") ? \"\" : (stryCov_9fa48(\"8797\"), 'SET_LOADING'),\n              payload: stryMutAct_9fa48(\"8798\") ? false : (stryCov_9fa48(\"8798\"), true)\n            }));\n            dispatch(stryMutAct_9fa48(\"8799\") ? {} : (stryCov_9fa48(\"8799\"), {\n              type: stryMutAct_9fa48(\"8800\") ? \"\" : (stryCov_9fa48(\"8800\"), 'SET_ERROR'),\n              payload: null\n            }));\n            const response = await api.auth.login(credentials);\n            const {\n              access_token,\n              refresh_token,\n              user\n            } = response.data;\n\n            // Store tokens\n            tokenManager.setTokens(access_token, refresh_token);\n\n            // Store user data\n            localStorage.setItem(appConfig.storage.user, JSON.stringify(user));\n\n            // Update state\n            dispatch(stryMutAct_9fa48(\"8801\") ? {} : (stryCov_9fa48(\"8801\"), {\n              type: stryMutAct_9fa48(\"8802\") ? \"\" : (stryCov_9fa48(\"8802\"), 'SET_USER'),\n              payload: user\n            }));\n\n            // Track login event with PostHog\n            try {\n              if (stryMutAct_9fa48(\"8803\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"8803\");\n                const {\n                  trackEvent,\n                  identifyUser\n                } = await import(stryMutAct_9fa48(\"8804\") ? \"\" : (stryCov_9fa48(\"8804\"), '@/lib/analytics'));\n\n                // Identify the user\n                identifyUser(user.id, stryMutAct_9fa48(\"8805\") ? {} : (stryCov_9fa48(\"8805\"), {\n                  email: user.email,\n                  first_name: user.first_name,\n                  last_name: user.last_name,\n                  subscription_tier: user.subscription_tier\n                }));\n\n                // Track login event\n                trackEvent(stryMutAct_9fa48(\"8806\") ? \"\" : (stryCov_9fa48(\"8806\"), 'user_login'), stryMutAct_9fa48(\"8807\") ? {} : (stryCov_9fa48(\"8807\"), {\n                  method: stryMutAct_9fa48(\"8808\") ? \"\" : (stryCov_9fa48(\"8808\"), 'email'),\n                  user_id: user.id,\n                  timestamp: new Date().toISOString()\n                }));\n              }\n            } catch (trackingError) {\n              if (stryMutAct_9fa48(\"8809\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"8809\");\n                console.warn(stryMutAct_9fa48(\"8810\") ? \"\" : (stryCov_9fa48(\"8810\"), 'Failed to track login event:'), trackingError);\n              }\n            }\n            toast.success(appConfig.success.login);\n          }\n        } catch (error: any) {\n          if (stryMutAct_9fa48(\"8811\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"8811\");\n            console.error(stryMutAct_9fa48(\"8812\") ? \"\" : (stryCov_9fa48(\"8812\"), 'Login error:'), error);\n            const errorMessage = stryMutAct_9fa48(\"8815\") ? error.message && appConfig.errors.unknown : stryMutAct_9fa48(\"8814\") ? false : stryMutAct_9fa48(\"8813\") ? true : (stryCov_9fa48(\"8813\", \"8814\", \"8815\"), error.message || appConfig.errors.unknown);\n            dispatch(stryMutAct_9fa48(\"8816\") ? {} : (stryCov_9fa48(\"8816\"), {\n              type: stryMutAct_9fa48(\"8817\") ? \"\" : (stryCov_9fa48(\"8817\"), 'SET_ERROR'),\n              payload: errorMessage\n            }));\n            toast.error(errorMessage);\n            throw error;\n          }\n        }\n      }\n    };\n\n    // Register function\n    const register = async (userData: RegisterRequest) => {\n      if (stryMutAct_9fa48(\"8818\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"8818\");\n        try {\n          if (stryMutAct_9fa48(\"8819\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"8819\");\n            dispatch(stryMutAct_9fa48(\"8820\") ? {} : (stryCov_9fa48(\"8820\"), {\n              type: stryMutAct_9fa48(\"8821\") ? \"\" : (stryCov_9fa48(\"8821\"), 'SET_LOADING'),\n              payload: stryMutAct_9fa48(\"8822\") ? false : (stryCov_9fa48(\"8822\"), true)\n            }));\n            dispatch(stryMutAct_9fa48(\"8823\") ? {} : (stryCov_9fa48(\"8823\"), {\n              type: stryMutAct_9fa48(\"8824\") ? \"\" : (stryCov_9fa48(\"8824\"), 'SET_ERROR'),\n              payload: null\n            }));\n            const response = await api.auth.register(userData);\n            const {\n              access_token,\n              refresh_token,\n              user\n            } = response.data;\n\n            // Store tokens\n            tokenManager.setTokens(access_token, refresh_token);\n\n            // Store user data\n            localStorage.setItem(appConfig.storage.user, JSON.stringify(user));\n\n            // Update state\n            dispatch(stryMutAct_9fa48(\"8825\") ? {} : (stryCov_9fa48(\"8825\"), {\n              type: stryMutAct_9fa48(\"8826\") ? \"\" : (stryCov_9fa48(\"8826\"), 'SET_USER'),\n              payload: user\n            }));\n\n            // Track registration event with PostHog\n            try {\n              if (stryMutAct_9fa48(\"8827\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"8827\");\n                const {\n                  trackEvent,\n                  identifyUser\n                } = await import(stryMutAct_9fa48(\"8828\") ? \"\" : (stryCov_9fa48(\"8828\"), '@/lib/analytics'));\n\n                // Identify the user\n                identifyUser(user.id, stryMutAct_9fa48(\"8829\") ? {} : (stryCov_9fa48(\"8829\"), {\n                  email: user.email,\n                  first_name: user.first_name,\n                  last_name: user.last_name,\n                  created_at: user.created_at,\n                  subscription_tier: user.subscription_tier\n                }));\n\n                // Track registration event\n                trackEvent(stryMutAct_9fa48(\"8830\") ? \"\" : (stryCov_9fa48(\"8830\"), 'user_register'), stryMutAct_9fa48(\"8831\") ? {} : (stryCov_9fa48(\"8831\"), {\n                  method: stryMutAct_9fa48(\"8832\") ? \"\" : (stryCov_9fa48(\"8832\"), 'email'),\n                  marketing_consent: userData.marketing_consent,\n                  user_id: user.id,\n                  source: stryMutAct_9fa48(\"8833\") ? \"\" : (stryCov_9fa48(\"8833\"), 'web'),\n                  timestamp: new Date().toISOString()\n                }));\n              }\n            } catch (trackingError) {\n              if (stryMutAct_9fa48(\"8834\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"8834\");\n                console.warn(stryMutAct_9fa48(\"8835\") ? \"\" : (stryCov_9fa48(\"8835\"), 'Failed to track registration event:'), trackingError);\n              }\n            }\n            toast.success(appConfig.success.register);\n          }\n        } catch (error: any) {\n          if (stryMutAct_9fa48(\"8836\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"8836\");\n            console.error(stryMutAct_9fa48(\"8837\") ? \"\" : (stryCov_9fa48(\"8837\"), 'Registration error:'), error);\n            const errorMessage = stryMutAct_9fa48(\"8840\") ? error.message && appConfig.errors.unknown : stryMutAct_9fa48(\"8839\") ? false : stryMutAct_9fa48(\"8838\") ? true : (stryCov_9fa48(\"8838\", \"8839\", \"8840\"), error.message || appConfig.errors.unknown);\n            dispatch(stryMutAct_9fa48(\"8841\") ? {} : (stryCov_9fa48(\"8841\"), {\n              type: stryMutAct_9fa48(\"8842\") ? \"\" : (stryCov_9fa48(\"8842\"), 'SET_ERROR'),\n              payload: errorMessage\n            }));\n            toast.error(errorMessage);\n            throw error;\n          }\n        }\n      }\n    };\n\n    // Logout function\n    const logout = async () => {\n      if (stryMutAct_9fa48(\"8843\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"8843\");\n        try {\n          if (stryMutAct_9fa48(\"8844\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"8844\");\n            dispatch(stryMutAct_9fa48(\"8845\") ? {} : (stryCov_9fa48(\"8845\"), {\n              type: stryMutAct_9fa48(\"8846\") ? \"\" : (stryCov_9fa48(\"8846\"), 'SET_LOGGING_OUT'),\n              payload: stryMutAct_9fa48(\"8847\") ? false : (stryCov_9fa48(\"8847\"), true)\n            }));\n            dispatch(stryMutAct_9fa48(\"8848\") ? {} : (stryCov_9fa48(\"8848\"), {\n              type: stryMutAct_9fa48(\"8849\") ? \"\" : (stryCov_9fa48(\"8849\"), 'SET_LOADING'),\n              payload: stryMutAct_9fa48(\"8850\") ? false : (stryCov_9fa48(\"8850\"), true)\n            }));\n\n            // Call logout API\n            try {\n              if (stryMutAct_9fa48(\"8851\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"8851\");\n                await api.auth.logout();\n              }\n            } catch (error) {\n              if (stryMutAct_9fa48(\"8852\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"8852\");\n                console.warn(stryMutAct_9fa48(\"8853\") ? \"\" : (stryCov_9fa48(\"8853\"), 'Logout API call failed:'), error);\n              }\n            }\n\n            // Track logout event with PostHog\n            if (stryMutAct_9fa48(\"8855\") ? false : stryMutAct_9fa48(\"8854\") ? true : (stryCov_9fa48(\"8854\", \"8855\"), state.user)) {\n              if (stryMutAct_9fa48(\"8856\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"8856\");\n                try {\n                  if (stryMutAct_9fa48(\"8857\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"8857\");\n                    const {\n                      trackEvent,\n                      analytics\n                    } = await import(stryMutAct_9fa48(\"8858\") ? \"\" : (stryCov_9fa48(\"8858\"), '@/lib/analytics'));\n                    trackEvent(stryMutAct_9fa48(\"8859\") ? \"\" : (stryCov_9fa48(\"8859\"), 'user_logout'), stryMutAct_9fa48(\"8860\") ? {} : (stryCov_9fa48(\"8860\"), {\n                      user_id: state.user.id,\n                      timestamp: new Date().toISOString()\n                    }));\n\n                    // Reset PostHog user session\n                    analytics.reset();\n                  }\n                } catch (trackingError) {\n                  if (stryMutAct_9fa48(\"8861\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"8861\");\n                    console.warn(stryMutAct_9fa48(\"8862\") ? \"\" : (stryCov_9fa48(\"8862\"), 'Failed to track logout event:'), trackingError);\n                  }\n                }\n              }\n            }\n            await logoutInternal();\n            console.log(stryMutAct_9fa48(\"8863\") ? \"\" : (stryCov_9fa48(\"8863\"), '🚪 Logout completed, redirecting to homepage...'));\n            toast.success(appConfig.success.logout);\n\n            // Small delay to ensure state update completes before redirect\n            setTimeout(() => {\n              if (stryMutAct_9fa48(\"8864\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"8864\");\n                console.log(stryMutAct_9fa48(\"8865\") ? \"\" : (stryCov_9fa48(\"8865\"), '🚪 Executing redirect to homepage'));\n                router.replace(stryMutAct_9fa48(\"8866\") ? \"\" : (stryCov_9fa48(\"8866\"), '/'));\n              }\n            }, 100);\n          }\n        } catch (error: any) {\n          if (stryMutAct_9fa48(\"8867\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"8867\");\n            console.error(stryMutAct_9fa48(\"8868\") ? \"\" : (stryCov_9fa48(\"8868\"), 'Logout error:'), error);\n            // Force logout even if API call fails\n            await logoutInternal();\n            setTimeout(() => {\n              if (stryMutAct_9fa48(\"8869\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"8869\");\n                router.replace(stryMutAct_9fa48(\"8870\") ? \"\" : (stryCov_9fa48(\"8870\"), '/'));\n              }\n            }, 100);\n          }\n        }\n      }\n    };\n\n    // Refresh token function\n    const refreshToken = async () => {\n      if (stryMutAct_9fa48(\"8871\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"8871\");\n        try {\n          if (stryMutAct_9fa48(\"8872\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"8872\");\n            await refreshTokenInternal();\n          }\n        } catch (error: any) {\n          if (stryMutAct_9fa48(\"8873\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"8873\");\n            console.error(stryMutAct_9fa48(\"8874\") ? \"\" : (stryCov_9fa48(\"8874\"), 'Token refresh failed:'), error);\n            await logoutInternal();\n            throw error;\n          }\n        }\n      }\n    };\n\n    // Clear error function\n    const clearError = () => {\n      if (stryMutAct_9fa48(\"8875\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"8875\");\n        dispatch(stryMutAct_9fa48(\"8876\") ? {} : (stryCov_9fa48(\"8876\"), {\n          type: stryMutAct_9fa48(\"8877\") ? \"\" : (stryCov_9fa48(\"8877\"), 'SET_ERROR'),\n          payload: null\n        }));\n      }\n    };\n\n    // Update user function\n    const updateUser = (userData: Partial<User>) => {\n      if (stryMutAct_9fa48(\"8878\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"8878\");\n        if (stryMutAct_9fa48(\"8880\") ? false : stryMutAct_9fa48(\"8879\") ? true : (stryCov_9fa48(\"8879\", \"8880\"), state.user)) {\n          if (stryMutAct_9fa48(\"8881\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"8881\");\n            const updatedUser = stryMutAct_9fa48(\"8882\") ? {} : (stryCov_9fa48(\"8882\"), {\n              ...state.user,\n              ...userData\n            });\n            localStorage.setItem(appConfig.storage.user, JSON.stringify(updatedUser));\n            dispatch(stryMutAct_9fa48(\"8883\") ? {} : (stryCov_9fa48(\"8883\"), {\n              type: stryMutAct_9fa48(\"8884\") ? \"\" : (stryCov_9fa48(\"8884\"), 'UPDATE_USER'),\n              payload: userData\n            }));\n          }\n        }\n      }\n    };\n    const value: AuthContextType = stryMutAct_9fa48(\"8885\") ? {} : (stryCov_9fa48(\"8885\"), {\n      ...state,\n      login,\n      register,\n      logout,\n      refreshToken,\n      clearError,\n      updateUser\n    });\n    return <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>;\n  }\n};\n\n// Hook to use auth context\nexport const useAuth = (): AuthContextType => {\n  if (stryMutAct_9fa48(\"8886\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"8886\");\n    const context = useContext(AuthContext);\n    if (stryMutAct_9fa48(\"8889\") ? context !== undefined : stryMutAct_9fa48(\"8888\") ? false : stryMutAct_9fa48(\"8887\") ? true : (stryCov_9fa48(\"8887\", \"8888\", \"8889\"), context === undefined)) {\n      if (stryMutAct_9fa48(\"8890\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"8890\");\n        throw new Error(stryMutAct_9fa48(\"8891\") ? \"\" : (stryCov_9fa48(\"8891\"), 'useAuth must be used within an AuthProvider'));\n      }\n    }\n    return context;\n  }\n};\n\n// Hook for protected routes\nexport const useRequireAuth = (redirectTo: string = stryMutAct_9fa48(\"8892\") ? \"\" : (stryCov_9fa48(\"8892\"), '/auth/login')) => {\n  if (stryMutAct_9fa48(\"8893\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"8893\");\n    const {\n      isAuthenticated,\n      isInitialized\n    } = useAuth();\n    const router = useRouter();\n    useEffect(() => {\n      if (stryMutAct_9fa48(\"8894\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"8894\");\n        if (stryMutAct_9fa48(\"8897\") ? isInitialized || !isAuthenticated : stryMutAct_9fa48(\"8896\") ? false : stryMutAct_9fa48(\"8895\") ? true : (stryCov_9fa48(\"8895\", \"8896\", \"8897\"), isInitialized && (stryMutAct_9fa48(\"8898\") ? isAuthenticated : (stryCov_9fa48(\"8898\"), !isAuthenticated)))) {\n          if (stryMutAct_9fa48(\"8899\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"8899\");\n            const currentPath = router.asPath;\n            const redirectUrl = stryMutAct_9fa48(\"8900\") ? `` : (stryCov_9fa48(\"8900\"), `${redirectTo}?redirect=${encodeURIComponent(currentPath)}`);\n            router.replace(redirectUrl);\n          }\n        }\n      }\n    }, stryMutAct_9fa48(\"8901\") ? [] : (stryCov_9fa48(\"8901\"), [isAuthenticated, isInitialized, router, redirectTo]));\n    return stryMutAct_9fa48(\"8902\") ? {} : (stryCov_9fa48(\"8902\"), {\n      isAuthenticated,\n      isInitialized\n    });\n  }\n};\nexport default AuthContext;"],"names":["AuthProvider","useAuth","useRequireAuth","stryNS_9fa48","g","globalThis","Math","Function","ns","__stryker__","activeMutant","undefined","process","env","__STRYKER_ACTIVE_MUTANT__","retrieveNS","stryCov_9fa48","cov","mutantCoverage","static","perTest","cover","c","currentTestId","a","arguments","i","length","apply","stryMutAct_9fa48","id","isActive","hitCount","hitLimit","Error","initialState","user","isAuthenticated","isLoading","isInitialized","isLoggingOut","error","authReducer","state","action","type","payload","AuthContext","createContext","children","dispatch","useReducer","router","useRouter","useEffect","initializeAuth","token","tokenManager","getAccessToken","storedUser","localStorage","getItem","appConfig","storage","JSON","parse","parseError","console","warn","removeItem","response","api","auth","getCurrentUser","userData","data","setItem","stringify","refreshToken","getRefreshToken","refreshTokenInternal","refreshError","logoutInternal","clearTokens","Object","values","forEach","key","refresh","refresh_token","access_token","newRefreshToken","setTokens","login","credentials","trackEvent","identifyUser","email","first_name","last_name","subscription_tier","method","user_id","timestamp","Date","toISOString","trackingError","toast","success","errorMessage","message","errors","unknown","register","created_at","marketing_consent","source","logout","analytics","reset","log","setTimeout","replace","clearError","updateUser","updatedUser","value","Provider","context","useContext","redirectTo","currentPath","asPath","redirectUrl","encodeURIComponent"],"mappings":"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"}