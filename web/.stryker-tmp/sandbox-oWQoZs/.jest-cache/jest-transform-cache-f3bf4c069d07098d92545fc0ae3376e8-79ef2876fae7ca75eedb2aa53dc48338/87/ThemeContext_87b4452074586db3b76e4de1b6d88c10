94d184ab58ca5da5e572d7d167339b14
// @ts-nocheck
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    ThemeProvider: function() {
        return ThemeProvider;
    },
    useTheme: function() {
        return useTheme;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _useDarkMode = require("../hooks/useDarkMode");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function stryNS_9fa48() {
    var g = typeof globalThis === "object" && globalThis && globalThis.Math === Math && globalThis || new Function("return this")();
    var ns = g.__stryker__ || (g.__stryker__ = {});
    if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {
        ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;
    }
    function retrieveNS() {
        return ns;
    }
    stryNS_9fa48 = retrieveNS;
    return retrieveNS();
}
stryNS_9fa48();
function stryCov_9fa48() {
    var ns = stryNS_9fa48();
    var cov = ns.mutantCoverage || (ns.mutantCoverage = {
        static: {},
        perTest: {}
    });
    function cover() {
        var c = cov.static;
        if (ns.currentTestId) {
            c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};
        }
        var a = arguments;
        for(var i = 0; i < a.length; i++){
            c[a[i]] = (c[a[i]] || 0) + 1;
        }
    }
    stryCov_9fa48 = cover;
    cover.apply(null, arguments);
}
function stryMutAct_9fa48(id) {
    var ns = stryNS_9fa48();
    function isActive(id) {
        if (ns.activeMutant === id) {
            if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {
                throw new Error("Stryker: Hit count limit reached (" + ns.hitCount + ")");
            }
            return true;
        }
        return false;
    }
    stryMutAct_9fa48 = isActive;
    return isActive(id);
}
const ThemeContext = /*#__PURE__*/ (0, _react.createContext)(undefined);
function ThemeProvider({ children }) {
    if (stryMutAct_9fa48("8903")) {
        {}
    } else {
        stryCov_9fa48("8903");
        const darkMode = (0, _useDarkMode.useDarkMode)();
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(ThemeContext.Provider, {
            value: darkMode,
            children: children
        });
    }
}
function useTheme() {
    if (stryMutAct_9fa48("8904")) {
        {}
    } else {
        stryCov_9fa48("8904");
        const context = (0, _react.useContext)(ThemeContext);
        if (stryMutAct_9fa48("8907") ? context !== undefined : stryMutAct_9fa48("8906") ? false : stryMutAct_9fa48("8905") ? true : (stryCov_9fa48("8905", "8906", "8907"), context === undefined)) {
            if (stryMutAct_9fa48("8908")) {
                {}
            } else {
                stryCov_9fa48("8908");
                throw new Error(stryMutAct_9fa48("8909") ? "" : (stryCov_9fa48("8909"), "useTheme must be used within a ThemeProvider"));
            }
        }
        return context;
    }
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2phY2svRG9jdW1lbnRzL2FjbHVlLXByZXByb2Qvd2ViLy5zdHJ5a2VyLXRtcC9zYW5kYm94LW9XUW9acy9zcmMvY29udGV4dC9UaGVtZUNvbnRleHQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5mdW5jdGlvbiBzdHJ5TlNfOWZhNDgoKSB7XG4gIHZhciBnID0gdHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnICYmIGdsb2JhbFRoaXMgJiYgZ2xvYmFsVGhpcy5NYXRoID09PSBNYXRoICYmIGdsb2JhbFRoaXMgfHwgbmV3IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcbiAgdmFyIG5zID0gZy5fX3N0cnlrZXJfXyB8fCAoZy5fX3N0cnlrZXJfXyA9IHt9KTtcbiAgaWYgKG5zLmFjdGl2ZU11dGFudCA9PT0gdW5kZWZpbmVkICYmIGcucHJvY2VzcyAmJiBnLnByb2Nlc3MuZW52ICYmIGcucHJvY2Vzcy5lbnYuX19TVFJZS0VSX0FDVElWRV9NVVRBTlRfXykge1xuICAgIG5zLmFjdGl2ZU11dGFudCA9IGcucHJvY2Vzcy5lbnYuX19TVFJZS0VSX0FDVElWRV9NVVRBTlRfXztcbiAgfVxuICBmdW5jdGlvbiByZXRyaWV2ZU5TKCkge1xuICAgIHJldHVybiBucztcbiAgfVxuICBzdHJ5TlNfOWZhNDggPSByZXRyaWV2ZU5TO1xuICByZXR1cm4gcmV0cmlldmVOUygpO1xufVxuc3RyeU5TXzlmYTQ4KCk7XG5mdW5jdGlvbiBzdHJ5Q292XzlmYTQ4KCkge1xuICB2YXIgbnMgPSBzdHJ5TlNfOWZhNDgoKTtcbiAgdmFyIGNvdiA9IG5zLm11dGFudENvdmVyYWdlIHx8IChucy5tdXRhbnRDb3ZlcmFnZSA9IHtcbiAgICBzdGF0aWM6IHt9LFxuICAgIHBlclRlc3Q6IHt9XG4gIH0pO1xuICBmdW5jdGlvbiBjb3ZlcigpIHtcbiAgICB2YXIgYyA9IGNvdi5zdGF0aWM7XG4gICAgaWYgKG5zLmN1cnJlbnRUZXN0SWQpIHtcbiAgICAgIGMgPSBjb3YucGVyVGVzdFtucy5jdXJyZW50VGVzdElkXSA9IGNvdi5wZXJUZXN0W25zLmN1cnJlbnRUZXN0SWRdIHx8IHt9O1xuICAgIH1cbiAgICB2YXIgYSA9IGFyZ3VtZW50cztcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGEubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNbYVtpXV0gPSAoY1thW2ldXSB8fCAwKSArIDE7XG4gICAgfVxuICB9XG4gIHN0cnlDb3ZfOWZhNDggPSBjb3ZlcjtcbiAgY292ZXIuYXBwbHkobnVsbCwgYXJndW1lbnRzKTtcbn1cbmZ1bmN0aW9uIHN0cnlNdXRBY3RfOWZhNDgoaWQpIHtcbiAgdmFyIG5zID0gc3RyeU5TXzlmYTQ4KCk7XG4gIGZ1bmN0aW9uIGlzQWN0aXZlKGlkKSB7XG4gICAgaWYgKG5zLmFjdGl2ZU11dGFudCA9PT0gaWQpIHtcbiAgICAgIGlmIChucy5oaXRDb3VudCAhPT0gdm9pZCAwICYmICsrbnMuaGl0Q291bnQgPiBucy5oaXRMaW1pdCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1N0cnlrZXI6IEhpdCBjb3VudCBsaW1pdCByZWFjaGVkICgnICsgbnMuaGl0Q291bnQgKyAnKScpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHJ5TXV0QWN0XzlmYTQ4ID0gaXNBY3RpdmU7XG4gIHJldHVybiBpc0FjdGl2ZShpZCk7XG59XG5pbXBvcnQgUmVhY3QsIHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlRGFya01vZGUsIFRoZW1lIH0gZnJvbSAnQC9ob29rcy91c2VEYXJrTW9kZSc7XG5pbnRlcmZhY2UgVGhlbWVDb250ZXh0VHlwZSB7XG4gIHRoZW1lOiBUaGVtZTtcbiAgaXNEYXJrOiBib29sZWFuO1xuICBzZXRUaGVtZTogKHRoZW1lOiBUaGVtZSkgPT4gdm9pZDtcbiAgdG9nZ2xlVGhlbWU6ICgpID0+IHZvaWQ7XG59XG5jb25zdCBUaGVtZUNvbnRleHQgPSBjcmVhdGVDb250ZXh0PFRoZW1lQ29udGV4dFR5cGUgfCB1bmRlZmluZWQ+KHVuZGVmaW5lZCk7XG5pbnRlcmZhY2UgVGhlbWVQcm92aWRlclByb3BzIHtcbiAgY2hpbGRyZW46IFJlYWN0Tm9kZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBUaGVtZVByb3ZpZGVyKHtcbiAgY2hpbGRyZW5cbn06IFRoZW1lUHJvdmlkZXJQcm9wcykge1xuICBpZiAoc3RyeU11dEFjdF85ZmE0OChcIjg5MDNcIikpIHtcbiAgICB7fVxuICB9IGVsc2Uge1xuICAgIHN0cnlDb3ZfOWZhNDgoXCI4OTAzXCIpO1xuICAgIGNvbnN0IGRhcmtNb2RlID0gdXNlRGFya01vZGUoKTtcbiAgICByZXR1cm4gPFRoZW1lQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17ZGFya01vZGV9PlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvVGhlbWVDb250ZXh0LlByb3ZpZGVyPjtcbiAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHVzZVRoZW1lKCkge1xuICBpZiAoc3RyeU11dEFjdF85ZmE0OChcIjg5MDRcIikpIHtcbiAgICB7fVxuICB9IGVsc2Uge1xuICAgIHN0cnlDb3ZfOWZhNDgoXCI4OTA0XCIpO1xuICAgIGNvbnN0IGNvbnRleHQgPSB1c2VDb250ZXh0KFRoZW1lQ29udGV4dCk7XG4gICAgaWYgKHN0cnlNdXRBY3RfOWZhNDgoXCI4OTA3XCIpID8gY29udGV4dCAhPT0gdW5kZWZpbmVkIDogc3RyeU11dEFjdF85ZmE0OChcIjg5MDZcIikgPyBmYWxzZSA6IHN0cnlNdXRBY3RfOWZhNDgoXCI4OTA1XCIpID8gdHJ1ZSA6IChzdHJ5Q292XzlmYTQ4KFwiODkwNVwiLCBcIjg5MDZcIiwgXCI4OTA3XCIpLCBjb250ZXh0ID09PSB1bmRlZmluZWQpKSB7XG4gICAgICBpZiAoc3RyeU11dEFjdF85ZmE0OChcIjg5MDhcIikpIHtcbiAgICAgICAge31cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN0cnlDb3ZfOWZhNDgoXCI4OTA4XCIpO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3Ioc3RyeU11dEFjdF85ZmE0OChcIjg5MDlcIikgPyBcIlwiIDogKHN0cnlDb3ZfOWZhNDgoXCI4OTA5XCIpLCAndXNlVGhlbWUgbXVzdCBiZSB1c2VkIHdpdGhpbiBhIFRoZW1lUHJvdmlkZXInKSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBjb250ZXh0O1xuICB9XG59Il0sIm5hbWVzIjpbIlRoZW1lUHJvdmlkZXIiLCJ1c2VUaGVtZSIsInN0cnlOU185ZmE0OCIsImciLCJnbG9iYWxUaGlzIiwiTWF0aCIsIkZ1bmN0aW9uIiwibnMiLCJfX3N0cnlrZXJfXyIsImFjdGl2ZU11dGFudCIsInVuZGVmaW5lZCIsInByb2Nlc3MiLCJlbnYiLCJfX1NUUllLRVJfQUNUSVZFX01VVEFOVF9fIiwicmV0cmlldmVOUyIsInN0cnlDb3ZfOWZhNDgiLCJjb3YiLCJtdXRhbnRDb3ZlcmFnZSIsInN0YXRpYyIsInBlclRlc3QiLCJjb3ZlciIsImMiLCJjdXJyZW50VGVzdElkIiwiYSIsImFyZ3VtZW50cyIsImkiLCJsZW5ndGgiLCJhcHBseSIsInN0cnlNdXRBY3RfOWZhNDgiLCJpZCIsImlzQWN0aXZlIiwiaGl0Q291bnQiLCJoaXRMaW1pdCIsIkVycm9yIiwiVGhlbWVDb250ZXh0IiwiY3JlYXRlQ29udGV4dCIsImNoaWxkcmVuIiwiZGFya01vZGUiLCJ1c2VEYXJrTW9kZSIsIlByb3ZpZGVyIiwidmFsdWUiLCJjb250ZXh0IiwidXNlQ29udGV4dCJdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYzs7Ozs7Ozs7Ozs7O0lBMkRFQSxhQUFhO2VBQWJBOztJQWFBQyxRQUFRO2VBQVJBOzs7OytEQXpCNEM7NkJBQ3pCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEvQ25DLFNBQVNDO0lBQ1AsSUFBSUMsSUFBSSxPQUFPQyxlQUFlLFlBQVlBLGNBQWNBLFdBQVdDLElB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