{"version":3,"sources":["/home/jack/Documents/aclue-preprod/web/.stryker-tmp/sandbox-oWQoZs/src/lib/api.ts"],"sourcesContent":["/**\n * aclue API Client\n * \n * Centralised HTTP client for all backend API communication.\n * Provides type-safe methods for authentication, data fetching,\n * and real-time interactions with the aclue backend.\n * \n * Key Features:\n *   - Automatic JWT token management with refresh\n *   - Request/response interceptors for auth and error handling\n *   - Type-safe API methods with full TypeScript support\n *   - Automatic retry logic for failed requests\n *   - Comprehensive error handling and user feedback\n * \n * Architecture:\n *   - TokenManager: Secure storage and management of JWT tokens\n *   - ApiClient: Main HTTP client with interceptors and methods\n *   - Convenience exports: Simplified API for common operations\n * \n * Usage:\n *   import { api } from '@/lib/api';\n *   const user = await api.getCurrentUser();\n *   const products = await api.getProducts({ category: 'electronics' });\n */\n// @ts-nocheck\n\n\n// ==============================================================================\n// IMPORTS AND DEPENDENCIES\n// ==============================================================================\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nimport axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse } from 'axios';\nimport { config, endpoints, appConfig } from '@/config';\nimport { ApiResponse, PaginatedResponse, ApiError, AuthResponse, LoginRequest, RegisterRequest, RefreshTokenRequest, User, Product, Category, SearchQuery, SearchResult, SwipeSession, SwipeRequest, SwipeInteraction, Recommendation, RecommendationRequest, RecommendationResponse, GiftLink, CreateGiftLinkRequest, GiftLinkInteraction, AnalyticsEvent } from '@/types';\n\n// ==============================================================================\n// TOKEN MANAGEMENT\n// ==============================================================================\n// Singleton class for secure JWT token storage and management\n\n/**\n * Secure JWT token manager with localStorage persistence.\n * \n * Manages access and refresh tokens for API authentication:\n *   - Singleton pattern ensures consistent token state\n *   - Automatic localStorage synchronisation\n *   - Secure token cleanup on logout\n *   - Server-side rendering safe (checks for window)\n * \n * Token Lifecycle:\n *   1. Tokens received from authentication endpoints\n *   2. Stored in localStorage and memory\n *   3. Access token used for API requests\n *   4. Refresh token used to renew expired access tokens\n *   5. Cleared on logout or authentication errors\n */\nclass TokenManager {\n  private static instance: TokenManager; // Singleton instance\n  private accessToken: string | null = null; // In-memory access token cache\n  private refreshToken: string | null = null; // In-memory refresh token cache\n\n  /**\n   * Get singleton TokenManager instance.\n   * \n   * Creates new instance on first call and initialises tokens\n   * from localStorage if available.\n   * \n   * Returns:\n   *   TokenManager: Singleton instance\n   */\n  static getInstance(): TokenManager {\n    if (stryMutAct_9fa48(\"10605\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10605\");\n      if (stryMutAct_9fa48(\"10608\") ? false : stryMutAct_9fa48(\"10607\") ? true : stryMutAct_9fa48(\"10606\") ? TokenManager.instance : (stryCov_9fa48(\"10606\", \"10607\", \"10608\"), !TokenManager.instance)) {\n        if (stryMutAct_9fa48(\"10609\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"10609\");\n          TokenManager.instance = new TokenManager();\n          // Initialize tokens from localStorage on first creation\n          TokenManager.instance.initializeFromStorage();\n        }\n      }\n      return TokenManager.instance;\n    }\n  }\n\n  /**\n   * Initialise tokens from localStorage on browser load.\n   * \n   * Safely checks for browser environment and loads previously\n   * stored tokens into memory cache.\n   * \n   * Note: Only runs in browser environment (SSR safe)\n   */\n  private initializeFromStorage(): void {\n    if (stryMutAct_9fa48(\"10610\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10610\");\n      if (stryMutAct_9fa48(\"10613\") ? typeof window === 'undefined' : stryMutAct_9fa48(\"10612\") ? false : stryMutAct_9fa48(\"10611\") ? true : (stryCov_9fa48(\"10611\", \"10612\", \"10613\"), typeof window !== (stryMutAct_9fa48(\"10614\") ? \"\" : (stryCov_9fa48(\"10614\"), 'undefined')))) {\n        if (stryMutAct_9fa48(\"10615\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"10615\");\n          this.accessToken = localStorage.getItem(appConfig.storage.authToken);\n          this.refreshToken = localStorage.getItem(appConfig.storage.refreshToken);\n        }\n      }\n    }\n  }\n\n  /**\n   * Store new JWT tokens in memory and localStorage.\n   * \n   * Updates both in-memory cache and persistent storage\n   * for session continuity across browser reloads.\n   * \n   * Parameters:\n   *   accessToken: JWT access token for API requests\n   *   refreshToken: JWT refresh token for session renewal\n   */\n  setTokens(accessToken: string, refreshToken: string): void {\n    if (stryMutAct_9fa48(\"10616\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10616\");\n      this.accessToken = accessToken;\n      this.refreshToken = refreshToken;\n\n      // Persist to localStorage for session continuity\n      if (stryMutAct_9fa48(\"10619\") ? typeof window === 'undefined' : stryMutAct_9fa48(\"10618\") ? false : stryMutAct_9fa48(\"10617\") ? true : (stryCov_9fa48(\"10617\", \"10618\", \"10619\"), typeof window !== (stryMutAct_9fa48(\"10620\") ? \"\" : (stryCov_9fa48(\"10620\"), 'undefined')))) {\n        if (stryMutAct_9fa48(\"10621\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"10621\");\n          localStorage.setItem(appConfig.storage.authToken, accessToken);\n          localStorage.setItem(appConfig.storage.refreshToken, refreshToken);\n        }\n      }\n    }\n  }\n\n  /**\n   * Retrieve current access token for API requests.\n   *\n   * Checks memory cache first, then falls back to localStorage.\n   * Returns null if no token is available.\n   *\n   * Returns:\n   *   string | null: Current access token or null if not available\n   */\n  getAccessToken(): string | null {\n    if (stryMutAct_9fa48(\"10622\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10622\");\n      // Return cached token if available\n      if (stryMutAct_9fa48(\"10624\") ? false : stryMutAct_9fa48(\"10623\") ? true : (stryCov_9fa48(\"10623\", \"10624\"), this.accessToken)) return this.accessToken;\n\n      // Fallback to localStorage (handles page reloads)\n      if (stryMutAct_9fa48(\"10627\") ? typeof window === 'undefined' : stryMutAct_9fa48(\"10626\") ? false : stryMutAct_9fa48(\"10625\") ? true : (stryCov_9fa48(\"10625\", \"10626\", \"10627\"), typeof window !== (stryMutAct_9fa48(\"10628\") ? \"\" : (stryCov_9fa48(\"10628\"), 'undefined')))) {\n        if (stryMutAct_9fa48(\"10629\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"10629\");\n          const token = localStorage.getItem(appConfig.storage.authToken);\n          return stryMutAct_9fa48(\"10632\") ? token && null : stryMutAct_9fa48(\"10631\") ? false : stryMutAct_9fa48(\"10630\") ? true : (stryCov_9fa48(\"10630\", \"10631\", \"10632\"), token || null); // Ensure we return null instead of undefined\n        }\n      }\n      return null;\n    }\n  }\n\n  /**\n   * Retrieve current refresh token for session renewal.\n   *\n   * Checks memory cache first, then falls back to localStorage.\n   * Returns null if no token is available.\n   *\n   * Returns:\n   *   string | null: Current refresh token or null if not available\n   */\n  getRefreshToken(): string | null {\n    if (stryMutAct_9fa48(\"10633\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10633\");\n      // Return cached token if available\n      if (stryMutAct_9fa48(\"10635\") ? false : stryMutAct_9fa48(\"10634\") ? true : (stryCov_9fa48(\"10634\", \"10635\"), this.refreshToken)) return this.refreshToken;\n\n      // Fallback to localStorage (handles page reloads)\n      if (stryMutAct_9fa48(\"10638\") ? typeof window === 'undefined' : stryMutAct_9fa48(\"10637\") ? false : stryMutAct_9fa48(\"10636\") ? true : (stryCov_9fa48(\"10636\", \"10637\", \"10638\"), typeof window !== (stryMutAct_9fa48(\"10639\") ? \"\" : (stryCov_9fa48(\"10639\"), 'undefined')))) {\n        if (stryMutAct_9fa48(\"10640\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"10640\");\n          const token = localStorage.getItem(appConfig.storage.refreshToken);\n          return stryMutAct_9fa48(\"10643\") ? token && null : stryMutAct_9fa48(\"10642\") ? false : stryMutAct_9fa48(\"10641\") ? true : (stryCov_9fa48(\"10641\", \"10642\", \"10643\"), token || null); // Ensure we return null instead of undefined\n        }\n      }\n      return null;\n    }\n  }\n\n  /**\n   * Clear all stored tokens and user data.\n   * \n   * Removes tokens from both memory and localStorage.\n   * Called during logout or authentication errors.\n   * \n   * Security:\n   *   - Clears all authentication-related data\n   *   - Prevents token reuse after logout\n   *   - Ensures clean state for new authentication\n   */\n  clearTokens(): void {\n    if (stryMutAct_9fa48(\"10644\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10644\");\n      // Clear memory cache\n      this.accessToken = null;\n      this.refreshToken = null;\n\n      // Clear persistent storage\n      if (stryMutAct_9fa48(\"10647\") ? typeof window === 'undefined' : stryMutAct_9fa48(\"10646\") ? false : stryMutAct_9fa48(\"10645\") ? true : (stryCov_9fa48(\"10645\", \"10646\", \"10647\"), typeof window !== (stryMutAct_9fa48(\"10648\") ? \"\" : (stryCov_9fa48(\"10648\"), 'undefined')))) {\n        if (stryMutAct_9fa48(\"10649\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"10649\");\n          localStorage.removeItem(appConfig.storage.authToken);\n          localStorage.removeItem(appConfig.storage.refreshToken);\n          localStorage.removeItem(appConfig.storage.user);\n        }\n      }\n    }\n  }\n}\n\n// ==============================================================================\n// API CLIENT\n// ==============================================================================\n// Main HTTP client with authentication and error handling\n\n/**\n * Comprehensive HTTP client for aclue API communication.\n * \n * Features:\n *   - Automatic JWT token attachment to requests\n *   - Token refresh on 401 errors with request retry\n *   - Consistent error handling and user feedback\n *   - Request/response interceptors for common patterns\n *   - Type-safe methods for all API endpoints\n * \n * Request Flow:\n *   1. Add Authorization header with current access token\n *   2. Send request to backend API\n *   3. Handle successful response or error\n *   4. On 401 error: refresh token and retry original request\n *   5. On refresh failure: clear tokens and redirect to login\n */\nclass ApiClient {\n  private client: AxiosInstance; // Axios HTTP client instance\n  private tokenManager: TokenManager; // Token storage and management\n  private isRefreshing = stryMutAct_9fa48(\"10650\") ? true : (stryCov_9fa48(\"10650\"), false); // Flag to prevent concurrent refresh attempts\n  private failedQueue: Array<{\n    // Queue for requests waiting on token refresh\n    resolve: (value: any) => void;\n    reject: (error: any) => void;\n  }> = stryMutAct_9fa48(\"10651\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"10651\"), []);\n\n  /**\n   * Initialise API client with configuration and interceptors.\n   * \n   * Sets up:\n   *   - Base URL from configuration\n   *   - Request/response timeouts\n   *   - Default headers\n   *   - Authentication and error interceptors\n   */\n  constructor() {\n    if (stryMutAct_9fa48(\"10652\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10652\");\n      this.tokenManager = TokenManager.getInstance();\n\n      // Create axios instance with base configuration\n      this.client = axios.create(stryMutAct_9fa48(\"10653\") ? {} : (stryCov_9fa48(\"10653\"), {\n        baseURL: config.apiUrl,\n        // Backend API base URL\n        timeout: 30000,\n        // 30 second timeout for requests\n        headers: stryMutAct_9fa48(\"10654\") ? {} : (stryCov_9fa48(\"10654\"), {\n          'Content-Type': stryMutAct_9fa48(\"10655\") ? \"\" : (stryCov_9fa48(\"10655\"), 'application/json'),\n          // JSON request body format\n          'Accept': stryMutAct_9fa48(\"10656\") ? \"\" : (stryCov_9fa48(\"10656\"), 'application/json') // Expected response format\n        })\n      }));\n\n      // Set up request/response interceptors\n      this.setupInterceptors();\n    }\n  }\n\n  /**\n   * Set up request and response interceptors for authentication and error handling.\n   * \n   * Request Interceptor:\n   *   - Automatically adds Authorization header with current access token\n   *   - Ensures all API requests are authenticated\n   * \n   * Response Interceptor:\n   *   - Handles 401 errors with automatic token refresh\n   *   - Queues failed requests during refresh process\n   *   - Retries original requests after successful refresh\n   *   - Redirects to login on refresh failure\n   */\n  private setupInterceptors(): void {\n    if (stryMutAct_9fa48(\"10657\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10657\");\n      // ===========================================================================\n      // REQUEST INTERCEPTOR: Add authentication token to all requests\n      // ===========================================================================\n      this.client.interceptors.request.use(config => {\n        if (stryMutAct_9fa48(\"10658\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"10658\");\n          const token = this.tokenManager.getAccessToken();\n          if (stryMutAct_9fa48(\"10661\") ? token || config.headers : stryMutAct_9fa48(\"10660\") ? false : stryMutAct_9fa48(\"10659\") ? true : (stryCov_9fa48(\"10659\", \"10660\", \"10661\"), token && config.headers)) {\n            if (stryMutAct_9fa48(\"10662\")) {\n              {}\n            } else {\n              stryCov_9fa48(\"10662\");\n              // Add Bearer token to Authorization header\n              config.headers.Authorization = stryMutAct_9fa48(\"10663\") ? `` : (stryCov_9fa48(\"10663\"), `Bearer ${token}`);\n            }\n          }\n          return config;\n        }\n      }, stryMutAct_9fa48(\"10664\") ? () => undefined : (stryCov_9fa48(\"10664\"), error => Promise.reject(error)));\n\n      // ===========================================================================\n      // RESPONSE INTERCEPTOR: Handle authentication errors and token refresh\n      // ===========================================================================\n      this.client.interceptors.response.use(stryMutAct_9fa48(\"10665\") ? () => undefined : (stryCov_9fa48(\"10665\"), response => response),\n      // Pass through successful responses\n      async error => {\n        if (stryMutAct_9fa48(\"10666\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"10666\");\n          const originalRequest = error.config;\n\n          // Handle 401 Unauthorized errors with automatic token refresh\n          if (stryMutAct_9fa48(\"10669\") ? error.response?.status === 401 || !originalRequest._retry : stryMutAct_9fa48(\"10668\") ? false : stryMutAct_9fa48(\"10667\") ? true : (stryCov_9fa48(\"10667\", \"10668\", \"10669\"), (stryMutAct_9fa48(\"10671\") ? error.response?.status !== 401 : stryMutAct_9fa48(\"10670\") ? true : (stryCov_9fa48(\"10670\", \"10671\"), (stryMutAct_9fa48(\"10672\") ? error.response.status : (stryCov_9fa48(\"10672\"), error.response?.status)) === 401)) && (stryMutAct_9fa48(\"10673\") ? originalRequest._retry : (stryCov_9fa48(\"10673\"), !originalRequest._retry)))) {\n            if (stryMutAct_9fa48(\"10674\")) {\n              {}\n            } else {\n              stryCov_9fa48(\"10674\");\n              // If already refreshing, queue this request\n              if (stryMutAct_9fa48(\"10676\") ? false : stryMutAct_9fa48(\"10675\") ? true : (stryCov_9fa48(\"10675\", \"10676\"), this.isRefreshing)) {\n                if (stryMutAct_9fa48(\"10677\")) {\n                  {}\n                } else {\n                  stryCov_9fa48(\"10677\");\n                  return new Promise((resolve, reject) => {\n                    if (stryMutAct_9fa48(\"10678\")) {\n                      {}\n                    } else {\n                      stryCov_9fa48(\"10678\");\n                      this.failedQueue.push(stryMutAct_9fa48(\"10679\") ? {} : (stryCov_9fa48(\"10679\"), {\n                        resolve,\n                        reject\n                      }));\n                    }\n                  }).then(token => {\n                    if (stryMutAct_9fa48(\"10680\")) {\n                      {}\n                    } else {\n                      stryCov_9fa48(\"10680\");\n                      // Retry with new token\n                      originalRequest.headers.Authorization = stryMutAct_9fa48(\"10681\") ? `` : (stryCov_9fa48(\"10681\"), `Bearer ${token}`);\n                      return this.client(originalRequest);\n                    }\n                  }).catch(err => {\n                    if (stryMutAct_9fa48(\"10682\")) {\n                      {}\n                    } else {\n                      stryCov_9fa48(\"10682\");\n                      return Promise.reject(err);\n                    }\n                  });\n                }\n              }\n\n              // Mark request as retry to prevent infinite loops\n              originalRequest._retry = stryMutAct_9fa48(\"10683\") ? false : (stryCov_9fa48(\"10683\"), true);\n              this.isRefreshing = stryMutAct_9fa48(\"10684\") ? false : (stryCov_9fa48(\"10684\"), true);\n              try {\n                if (stryMutAct_9fa48(\"10685\")) {\n                  {}\n                } else {\n                  stryCov_9fa48(\"10685\");\n                  // Attempt to refresh the access token\n                  const refreshToken = this.tokenManager.getRefreshToken();\n                  if (stryMutAct_9fa48(\"10688\") ? false : stryMutAct_9fa48(\"10687\") ? true : stryMutAct_9fa48(\"10686\") ? refreshToken : (stryCov_9fa48(\"10686\", \"10687\", \"10688\"), !refreshToken)) {\n                    if (stryMutAct_9fa48(\"10689\")) {\n                      {}\n                    } else {\n                      stryCov_9fa48(\"10689\");\n                      throw new Error(stryMutAct_9fa48(\"10690\") ? \"\" : (stryCov_9fa48(\"10690\"), 'No refresh token available'));\n                    }\n                  }\n\n                  // Call refresh endpoint\n                  const response = await this.refreshAccessToken(stryMutAct_9fa48(\"10691\") ? {} : (stryCov_9fa48(\"10691\"), {\n                    refresh_token: refreshToken\n                  }));\n                  const {\n                    access_token,\n                    refresh_token: newRefreshToken\n                  } = response.data;\n\n                  // Store new tokens\n                  this.tokenManager.setTokens(access_token, newRefreshToken);\n\n                  // Process queued requests with new token\n                  this.processQueue(access_token, null);\n\n                  // Retry original request with new token\n                  originalRequest.headers.Authorization = stryMutAct_9fa48(\"10692\") ? `` : (stryCov_9fa48(\"10692\"), `Bearer ${access_token}`);\n                  return this.client(originalRequest);\n                }\n              } catch (refreshError) {\n                if (stryMutAct_9fa48(\"10693\")) {\n                  {}\n                } else {\n                  stryCov_9fa48(\"10693\");\n                  // Refresh failed - clear tokens and redirect to login\n                  this.processQueue(null, refreshError);\n                  this.tokenManager.clearTokens();\n\n                  // Redirect to login if we're in the browser\n                  if (stryMutAct_9fa48(\"10696\") ? typeof window === 'undefined' : stryMutAct_9fa48(\"10695\") ? false : stryMutAct_9fa48(\"10694\") ? true : (stryCov_9fa48(\"10694\", \"10695\", \"10696\"), typeof window !== (stryMutAct_9fa48(\"10697\") ? \"\" : (stryCov_9fa48(\"10697\"), 'undefined')))) {\n                    if (stryMutAct_9fa48(\"10698\")) {\n                      {}\n                    } else {\n                      stryCov_9fa48(\"10698\");\n                      window.location.href = stryMutAct_9fa48(\"10699\") ? \"\" : (stryCov_9fa48(\"10699\"), '/auth/login');\n                    }\n                  }\n                  return Promise.reject(refreshError);\n                }\n              } finally {\n                if (stryMutAct_9fa48(\"10700\")) {\n                  {}\n                } else {\n                  stryCov_9fa48(\"10700\");\n                  this.isRefreshing = stryMutAct_9fa48(\"10701\") ? true : (stryCov_9fa48(\"10701\"), false);\n                }\n              }\n            }\n          }\n\n          // Handle other errors with consistent error formatting\n          return Promise.reject(this.handleError(error));\n        }\n      });\n    }\n  }\n\n  /**\n   * Process queued requests after token refresh attempt.\n   * \n   * During token refresh, multiple requests may fail with 401 errors.\n   * These requests are queued and processed once refresh completes.\n   * \n   * Parameters:\n   *   token: New access token (null if refresh failed)\n   *   error: Refresh error (null if refresh succeeded)\n   */\n  private processQueue(token: string | null, error: any): void {\n    if (stryMutAct_9fa48(\"10702\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10702\");\n      this.failedQueue.forEach(({\n        resolve,\n        reject\n      }) => {\n        if (stryMutAct_9fa48(\"10703\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"10703\");\n          if (stryMutAct_9fa48(\"10705\") ? false : stryMutAct_9fa48(\"10704\") ? true : (stryCov_9fa48(\"10704\", \"10705\"), error)) {\n            if (stryMutAct_9fa48(\"10706\")) {\n              {}\n            } else {\n              stryCov_9fa48(\"10706\");\n              // Refresh failed - reject all queued requests\n              reject(error);\n            }\n          } else {\n            if (stryMutAct_9fa48(\"10707\")) {\n              {}\n            } else {\n              stryCov_9fa48(\"10707\");\n              // Refresh succeeded - resolve with new token\n              resolve(token);\n            }\n          }\n        }\n      });\n\n      // Clear the queue\n      this.failedQueue = stryMutAct_9fa48(\"10708\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"10708\"), []);\n    }\n  }\n\n  /**\n   * Convert axios errors to standardised ApiError format.\n   * \n   * Provides consistent error handling across all API methods\n   * with user-friendly messages and debugging information.\n   * \n   * Error Types:\n   *   - Response errors: Server returned error status (400, 500, etc.)\n   *   - Network errors: Request failed to reach server\n   *   - Request errors: Invalid request configuration\n   * \n   * Parameters:\n   *   error: Axios error object\n   * \n   * Returns:\n   *   ApiError: Standardised error with message, code, and details\n   */\n  private handleError(error: any): ApiError {\n    if (stryMutAct_9fa48(\"10709\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10709\");\n      const apiError: ApiError = stryMutAct_9fa48(\"10710\") ? {} : (stryCov_9fa48(\"10710\"), {\n        message: appConfig.errors.unknown,\n        code: stryMutAct_9fa48(\"10711\") ? \"\" : (stryCov_9fa48(\"10711\"), 'UNKNOWN_ERROR'),\n        status: 500,\n        timestamp: new Date().toISOString()\n      });\n      if (stryMutAct_9fa48(\"10713\") ? false : stryMutAct_9fa48(\"10712\") ? true : (stryCov_9fa48(\"10712\", \"10713\"), error.response)) {\n        if (stryMutAct_9fa48(\"10714\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"10714\");\n          // Server responded with error status (4xx, 5xx)\n          apiError.status = error.response.status;\n          apiError.message = stryMutAct_9fa48(\"10717\") ? error.response.data?.message && this.getErrorMessageByStatus(error.response.status) : stryMutAct_9fa48(\"10716\") ? false : stryMutAct_9fa48(\"10715\") ? true : (stryCov_9fa48(\"10715\", \"10716\", \"10717\"), (stryMutAct_9fa48(\"10718\") ? error.response.data.message : (stryCov_9fa48(\"10718\"), error.response.data?.message)) || this.getErrorMessageByStatus(error.response.status));\n          apiError.code = stryMutAct_9fa48(\"10721\") ? error.response.data?.code && `HTTP_${error.response.status}` : stryMutAct_9fa48(\"10720\") ? false : stryMutAct_9fa48(\"10719\") ? true : (stryCov_9fa48(\"10719\", \"10720\", \"10721\"), (stryMutAct_9fa48(\"10722\") ? error.response.data.code : (stryCov_9fa48(\"10722\"), error.response.data?.code)) || (stryMutAct_9fa48(\"10723\") ? `` : (stryCov_9fa48(\"10723\"), `HTTP_${error.response.status}`)));\n          apiError.details = stryMutAct_9fa48(\"10724\") ? error.response.data.details : (stryCov_9fa48(\"10724\"), error.response.data?.details);\n        }\n      } else if (stryMutAct_9fa48(\"10726\") ? false : stryMutAct_9fa48(\"10725\") ? true : (stryCov_9fa48(\"10725\", \"10726\"), error.request)) {\n        if (stryMutAct_9fa48(\"10727\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"10727\");\n          // Network error - request made but no response received\n          apiError.message = appConfig.errors.network;\n          apiError.code = stryMutAct_9fa48(\"10728\") ? \"\" : (stryCov_9fa48(\"10728\"), 'NETWORK_ERROR');\n          apiError.status = 0;\n        }\n      } else {\n        if (stryMutAct_9fa48(\"10729\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"10729\");\n          // Request setup error - something wrong with request configuration\n          apiError.message = stryMutAct_9fa48(\"10732\") ? error.message && appConfig.errors.unknown : stryMutAct_9fa48(\"10731\") ? false : stryMutAct_9fa48(\"10730\") ? true : (stryCov_9fa48(\"10730\", \"10731\", \"10732\"), error.message || appConfig.errors.unknown);\n          apiError.code = stryMutAct_9fa48(\"10733\") ? \"\" : (stryCov_9fa48(\"10733\"), 'REQUEST_ERROR');\n        }\n      }\n      return apiError;\n    }\n  }\n\n  /**\n   * Get user-friendly error message for HTTP status codes.\n   * \n   * Maps common HTTP status codes to localised error messages\n   * from application configuration.\n   * \n   * Parameters:\n   *   status: HTTP status code\n   * \n   * Returns:\n   *   string: User-friendly error message\n   */\n  private getErrorMessageByStatus(status: number): string {\n    if (stryMutAct_9fa48(\"10734\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10734\");\n      switch (status) {\n        case 400:\n          if (stryMutAct_9fa48(\"10735\")) {} else {\n            stryCov_9fa48(\"10735\");\n            return appConfig.errors.validation;\n          }\n        // \"Please check your input and try again\"\n        case 401:\n          if (stryMutAct_9fa48(\"10736\")) {} else {\n            stryCov_9fa48(\"10736\");\n            return appConfig.errors.unauthorized;\n          }\n        // \"Please log in to continue\"\n        case 403:\n          if (stryMutAct_9fa48(\"10737\")) {} else {\n            stryCov_9fa48(\"10737\");\n            return appConfig.errors.forbidden;\n          }\n        // \"You don't have permission to do this\"\n        case 404:\n          if (stryMutAct_9fa48(\"10738\")) {} else {\n            stryCov_9fa48(\"10738\");\n            return appConfig.errors.notFound;\n          }\n        // \"The requested item was not found\"\n        case 500:\n          if (stryMutAct_9fa48(\"10739\")) {} else {\n            stryCov_9fa48(\"10739\");\n            return appConfig.errors.server;\n          }\n        // \"Something went wrong on our end\"\n        default:\n          if (stryMutAct_9fa48(\"10740\")) {} else {\n            stryCov_9fa48(\"10740\");\n            return appConfig.errors.unknown;\n          }\n        // \"An unexpected error occurred\"\n      }\n    }\n  }\n\n  // Generic request methods\n  async get<T = any>(url: string, config?: AxiosRequestConfig): Promise<ApiResponse<T>> {\n    if (stryMutAct_9fa48(\"10741\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10741\");\n      const response: AxiosResponse<any> = await this.client.get(url, config);\n      // Handle direct response from backend (not wrapped in ApiResponse)\n      if (stryMutAct_9fa48(\"10744\") ? response.data || !response.data.hasOwnProperty('data') : stryMutAct_9fa48(\"10743\") ? false : stryMutAct_9fa48(\"10742\") ? true : (stryCov_9fa48(\"10742\", \"10743\", \"10744\"), response.data && (stryMutAct_9fa48(\"10745\") ? response.data.hasOwnProperty('data') : (stryCov_9fa48(\"10745\"), !response.data.hasOwnProperty(stryMutAct_9fa48(\"10746\") ? \"\" : (stryCov_9fa48(\"10746\"), 'data')))))) {\n        if (stryMutAct_9fa48(\"10747\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"10747\");\n          return stryMutAct_9fa48(\"10748\") ? {} : (stryCov_9fa48(\"10748\"), {\n            data: response.data,\n            success: stryMutAct_9fa48(\"10749\") ? false : (stryCov_9fa48(\"10749\"), true)\n          });\n        }\n      }\n      return response.data;\n    }\n  }\n  async post<T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<ApiResponse<T>> {\n    if (stryMutAct_9fa48(\"10750\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10750\");\n      const response: AxiosResponse<any> = await this.client.post(url, data, config);\n      // Handle direct response from backend (not wrapped in ApiResponse)\n      if (stryMutAct_9fa48(\"10753\") ? response.data || !response.data.hasOwnProperty('data') : stryMutAct_9fa48(\"10752\") ? false : stryMutAct_9fa48(\"10751\") ? true : (stryCov_9fa48(\"10751\", \"10752\", \"10753\"), response.data && (stryMutAct_9fa48(\"10754\") ? response.data.hasOwnProperty('data') : (stryCov_9fa48(\"10754\"), !response.data.hasOwnProperty(stryMutAct_9fa48(\"10755\") ? \"\" : (stryCov_9fa48(\"10755\"), 'data')))))) {\n        if (stryMutAct_9fa48(\"10756\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"10756\");\n          return stryMutAct_9fa48(\"10757\") ? {} : (stryCov_9fa48(\"10757\"), {\n            data: response.data,\n            success: stryMutAct_9fa48(\"10758\") ? false : (stryCov_9fa48(\"10758\"), true)\n          });\n        }\n      }\n      return response.data;\n    }\n  }\n  async put<T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<ApiResponse<T>> {\n    if (stryMutAct_9fa48(\"10759\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10759\");\n      const response: AxiosResponse<ApiResponse<T>> = await this.client.put(url, data, config);\n      return response.data;\n    }\n  }\n  async patch<T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<ApiResponse<T>> {\n    if (stryMutAct_9fa48(\"10760\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10760\");\n      const response: AxiosResponse<ApiResponse<T>> = await this.client.patch(url, data, config);\n      return response.data;\n    }\n  }\n  async delete<T = any>(url: string, config?: AxiosRequestConfig): Promise<ApiResponse<T>> {\n    if (stryMutAct_9fa48(\"10761\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10761\");\n      const response: AxiosResponse<ApiResponse<T>> = await this.client.delete(url, config);\n      return response.data;\n    }\n  }\n\n  // Authentication methods\n  async login(data: LoginRequest): Promise<ApiResponse<AuthResponse>> {\n    if (stryMutAct_9fa48(\"10762\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10762\");\n      return this.post<AuthResponse>(endpoints.auth.login, data);\n    }\n  }\n  async register(data: RegisterRequest): Promise<ApiResponse<AuthResponse>> {\n    if (stryMutAct_9fa48(\"10763\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10763\");\n      return this.post<AuthResponse>(endpoints.auth.register, data);\n    }\n  }\n  async refreshAccessToken(data: RefreshTokenRequest): Promise<ApiResponse<AuthResponse>> {\n    if (stryMutAct_9fa48(\"10764\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10764\");\n      return this.post<AuthResponse>(endpoints.auth.refresh, data);\n    }\n  }\n  async logout(): Promise<ApiResponse<void>> {\n    if (stryMutAct_9fa48(\"10765\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10765\");\n      const response = await this.post<void>(endpoints.auth.logout);\n      this.tokenManager.clearTokens();\n      return response;\n    }\n  }\n  async getCurrentUser(): Promise<ApiResponse<User>> {\n    if (stryMutAct_9fa48(\"10766\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10766\");\n      return this.get<User>(endpoints.auth.me);\n    }\n  }\n  async forgotPassword(email: string): Promise<ApiResponse<void>> {\n    if (stryMutAct_9fa48(\"10767\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10767\");\n      return this.post<void>(endpoints.auth.forgotPassword, stryMutAct_9fa48(\"10768\") ? {} : (stryCov_9fa48(\"10768\"), {\n        email\n      }));\n    }\n  }\n  async resetPassword(token: string, password: string): Promise<ApiResponse<void>> {\n    if (stryMutAct_9fa48(\"10769\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10769\");\n      return this.post<void>(endpoints.auth.resetPassword, stryMutAct_9fa48(\"10770\") ? {} : (stryCov_9fa48(\"10770\"), {\n        token,\n        password\n      }));\n    }\n  }\n  async verifyEmail(token: string): Promise<ApiResponse<void>> {\n    if (stryMutAct_9fa48(\"10771\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10771\");\n      return this.post<void>(endpoints.auth.verifyEmail, stryMutAct_9fa48(\"10772\") ? {} : (stryCov_9fa48(\"10772\"), {\n        token\n      }));\n    }\n  }\n\n  // User methods\n  async updateProfile(data: Partial<User>): Promise<ApiResponse<User>> {\n    if (stryMutAct_9fa48(\"10773\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10773\");\n      return this.put<User>(endpoints.users.updateProfile, data);\n    }\n  }\n  async getUserPreferences(): Promise<ApiResponse<any>> {\n    if (stryMutAct_9fa48(\"10774\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10774\");\n      return this.get(endpoints.users.preferences);\n    }\n  }\n  async updateUserPreferences(data: any): Promise<ApiResponse<any>> {\n    if (stryMutAct_9fa48(\"10775\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10775\");\n      return this.put(endpoints.users.preferences, data);\n    }\n  }\n  async getUserStatistics(): Promise<ApiResponse<any>> {\n    if (stryMutAct_9fa48(\"10776\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10776\");\n      return this.get(endpoints.users.statistics);\n    }\n  }\n  async deleteAccount(): Promise<ApiResponse<void>> {\n    if (stryMutAct_9fa48(\"10777\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10777\");\n      return this.delete<void>(endpoints.users.deleteAccount);\n    }\n  }\n\n  // Product methods\n  async getProducts(params?: any): Promise<ApiResponse<Product[]>> {\n    if (stryMutAct_9fa48(\"10778\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10778\");\n      return this.get<Product[]>(endpoints.products.list, stryMutAct_9fa48(\"10779\") ? {} : (stryCov_9fa48(\"10779\"), {\n        params\n      }));\n    }\n  }\n  async searchProducts(query: SearchQuery): Promise<ApiResponse<SearchResult>> {\n    if (stryMutAct_9fa48(\"10780\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10780\");\n      return this.post<SearchResult>(endpoints.products.search, query);\n    }\n  }\n  async getProduct(id: string): Promise<ApiResponse<Product>> {\n    if (stryMutAct_9fa48(\"10781\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10781\");\n      return this.get<Product>(endpoints.products.byId(id));\n    }\n  }\n  async getCategories(): Promise<ApiResponse<Category[]>> {\n    if (stryMutAct_9fa48(\"10782\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10782\");\n      return this.get<Category[]>(endpoints.products.categories);\n    }\n  }\n  async getFeaturedProducts(): Promise<ApiResponse<Product[]>> {\n    if (stryMutAct_9fa48(\"10783\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10783\");\n      return this.get<Product[]>(endpoints.products.featured);\n    }\n  }\n  async getTrendingProducts(): Promise<ApiResponse<Product[]>> {\n    if (stryMutAct_9fa48(\"10784\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10784\");\n      return this.get<Product[]>(endpoints.products.trending);\n    }\n  }\n  async getProductsByCategory(categoryId: string, params?: any): Promise<PaginatedResponse<Product>> {\n    if (stryMutAct_9fa48(\"10785\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10785\");\n      return this.get<Product[]>(endpoints.products.byCategory(categoryId), stryMutAct_9fa48(\"10786\") ? {} : (stryCov_9fa48(\"10786\"), {\n        params\n      }));\n    }\n  }\n\n  // Swipe methods\n  async createSwipeSession(data: any): Promise<ApiResponse<SwipeSession>> {\n    if (stryMutAct_9fa48(\"10787\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10787\");\n      return this.post<SwipeSession>(endpoints.swipes.createSession, data);\n    }\n  }\n  async getCurrentSwipeSession(): Promise<ApiResponse<SwipeSession>> {\n    if (stryMutAct_9fa48(\"10788\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10788\");\n      return this.get<SwipeSession>(endpoints.swipes.currentSession);\n    }\n  }\n  async recordSwipe(sessionId: string, data: SwipeRequest): Promise<ApiResponse<SwipeInteraction>> {\n    if (stryMutAct_9fa48(\"10789\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10789\");\n      return this.post<SwipeInteraction>(endpoints.swipes.interactions(sessionId), data);\n    }\n  }\n  async getSwipeAnalytics(): Promise<ApiResponse<any>> {\n    if (stryMutAct_9fa48(\"10790\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10790\");\n      return this.get(endpoints.swipes.analytics);\n    }\n  }\n\n  // Recommendation methods\n  async generateRecommendations(data: RecommendationRequest): Promise<ApiResponse<RecommendationResponse>> {\n    if (stryMutAct_9fa48(\"10791\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10791\");\n      return this.post<RecommendationResponse>(endpoints.recommendations.generate, data);\n    }\n  }\n  async getRecommendations(params?: any): Promise<PaginatedResponse<Recommendation>> {\n    if (stryMutAct_9fa48(\"10792\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10792\");\n      return this.get<Recommendation[]>(endpoints.recommendations.list, stryMutAct_9fa48(\"10793\") ? {} : (stryCov_9fa48(\"10793\"), {\n        params\n      }));\n    }\n  }\n  async getRecommendation(id: string): Promise<ApiResponse<Recommendation>> {\n    if (stryMutAct_9fa48(\"10794\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10794\");\n      return this.get<Recommendation>(endpoints.recommendations.byId(id));\n    }\n  }\n  async provideFeedback(id: string, feedback: any): Promise<ApiResponse<void>> {\n    if (stryMutAct_9fa48(\"10795\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10795\");\n      return this.post<void>(endpoints.recommendations.feedback(id), feedback);\n    }\n  }\n  async refreshRecommendations(): Promise<ApiResponse<RecommendationResponse>> {\n    if (stryMutAct_9fa48(\"10796\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10796\");\n      return this.post<RecommendationResponse>(endpoints.recommendations.refresh);\n    }\n  }\n\n  // Gift Link methods\n  async createGiftLink(data: CreateGiftLinkRequest): Promise<ApiResponse<GiftLink>> {\n    if (stryMutAct_9fa48(\"10797\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10797\");\n      return this.post<GiftLink>(endpoints.giftLinks.create, data);\n    }\n  }\n  async getGiftLinks(): Promise<ApiResponse<GiftLink[]>> {\n    if (stryMutAct_9fa48(\"10798\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10798\");\n      return this.get<GiftLink[]>(endpoints.giftLinks.list);\n    }\n  }\n  async getGiftLink(id: string): Promise<ApiResponse<GiftLink>> {\n    if (stryMutAct_9fa48(\"10799\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10799\");\n      return this.get<GiftLink>(endpoints.giftLinks.byId(id));\n    }\n  }\n  async getGiftLinkByToken(token: string): Promise<ApiResponse<GiftLink>> {\n    if (stryMutAct_9fa48(\"10800\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10800\");\n      return this.get<GiftLink>(endpoints.giftLinks.byToken(token));\n    }\n  }\n  async deleteGiftLink(id: string): Promise<ApiResponse<void>> {\n    if (stryMutAct_9fa48(\"10801\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10801\");\n      return this.delete<void>(endpoints.giftLinks.delete(id));\n    }\n  }\n  async getGiftLinkAnalytics(id: string): Promise<ApiResponse<GiftLinkInteraction[]>> {\n    if (stryMutAct_9fa48(\"10802\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10802\");\n      return this.get<GiftLinkInteraction[]>(endpoints.giftLinks.analytics(id));\n    }\n  }\n\n  // Analytics methods\n  async trackEvent(event: AnalyticsEvent): Promise<ApiResponse<void>> {\n    if (stryMutAct_9fa48(\"10803\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10803\");\n      return this.post<void>(endpoints.analytics.track, event);\n    }\n  }\n  async getAnalyticsDashboard(): Promise<ApiResponse<any>> {\n    if (stryMutAct_9fa48(\"10804\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10804\");\n      return this.get(endpoints.analytics.dashboard);\n    }\n  }\n\n  // Health check\n  async healthCheck(): Promise<ApiResponse<any>> {\n    if (stryMutAct_9fa48(\"10805\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"10805\");\n      return this.get(endpoints.health);\n    }\n  }\n}\n\n// Create and export API client instance\nexport const apiClient = new ApiClient();\n\n// Export token manager for external use\nexport const tokenManager = TokenManager.getInstance();\n\n// Export convenience methods with nested structure for better organisation\nexport const api = stryMutAct_9fa48(\"10806\") ? {} : (stryCov_9fa48(\"10806\"), {\n  // Authentication methods\n  auth: stryMutAct_9fa48(\"10807\") ? {} : (stryCov_9fa48(\"10807\"), {\n    login: stryMutAct_9fa48(\"10808\") ? () => undefined : (stryCov_9fa48(\"10808\"), (data: LoginRequest) => apiClient.login(data)),\n    register: stryMutAct_9fa48(\"10809\") ? () => undefined : (stryCov_9fa48(\"10809\"), (data: RegisterRequest) => apiClient.register(data)),\n    logout: stryMutAct_9fa48(\"10810\") ? () => undefined : (stryCov_9fa48(\"10810\"), () => apiClient.logout()),\n    getCurrentUser: stryMutAct_9fa48(\"10811\") ? () => undefined : (stryCov_9fa48(\"10811\"), () => apiClient.getCurrentUser()),\n    refresh: stryMutAct_9fa48(\"10812\") ? () => undefined : (stryCov_9fa48(\"10812\"), (data: RefreshTokenRequest) => apiClient.refreshAccessToken(data)),\n    forgotPassword: stryMutAct_9fa48(\"10813\") ? () => undefined : (stryCov_9fa48(\"10813\"), (email: string) => apiClient.forgotPassword(email)),\n    resetPassword: stryMutAct_9fa48(\"10814\") ? () => undefined : (stryCov_9fa48(\"10814\"), (token: string, password: string) => apiClient.resetPassword(token, password)),\n    verifyEmail: stryMutAct_9fa48(\"10815\") ? () => undefined : (stryCov_9fa48(\"10815\"), (token: string) => apiClient.verifyEmail(token))\n  }),\n  // User management methods\n  users: stryMutAct_9fa48(\"10816\") ? {} : (stryCov_9fa48(\"10816\"), {\n    updateProfile: stryMutAct_9fa48(\"10817\") ? () => undefined : (stryCov_9fa48(\"10817\"), (data: Partial<User>) => apiClient.updateProfile(data)),\n    getPreferences: stryMutAct_9fa48(\"10818\") ? () => undefined : (stryCov_9fa48(\"10818\"), () => apiClient.getUserPreferences()),\n    updatePreferences: stryMutAct_9fa48(\"10819\") ? () => undefined : (stryCov_9fa48(\"10819\"), (data: any) => apiClient.updateUserPreferences(data)),\n    getStatistics: stryMutAct_9fa48(\"10820\") ? () => undefined : (stryCov_9fa48(\"10820\"), () => apiClient.getUserStatistics()),\n    deleteAccount: stryMutAct_9fa48(\"10821\") ? () => undefined : (stryCov_9fa48(\"10821\"), () => apiClient.deleteAccount())\n  }),\n  // Product methods\n  products: stryMutAct_9fa48(\"10822\") ? {} : (stryCov_9fa48(\"10822\"), {\n    getProducts: stryMutAct_9fa48(\"10823\") ? () => undefined : (stryCov_9fa48(\"10823\"), (params?: any) => apiClient.getProducts(params)),\n    searchProducts: stryMutAct_9fa48(\"10824\") ? () => undefined : (stryCov_9fa48(\"10824\"), (query: SearchQuery) => apiClient.searchProducts(query)),\n    getProduct: stryMutAct_9fa48(\"10825\") ? () => undefined : (stryCov_9fa48(\"10825\"), (id: string) => apiClient.getProduct(id)),\n    getCategories: stryMutAct_9fa48(\"10826\") ? () => undefined : (stryCov_9fa48(\"10826\"), () => apiClient.getCategories()),\n    getFeatured: stryMutAct_9fa48(\"10827\") ? () => undefined : (stryCov_9fa48(\"10827\"), () => apiClient.getFeaturedProducts()),\n    getTrending: stryMutAct_9fa48(\"10828\") ? () => undefined : (stryCov_9fa48(\"10828\"), () => apiClient.getTrendingProducts()),\n    getByCategory: stryMutAct_9fa48(\"10829\") ? () => undefined : (stryCov_9fa48(\"10829\"), (categoryId: string, params?: any) => apiClient.getProductsByCategory(categoryId, params))\n  }),\n  // Swipe methods\n  swipes: stryMutAct_9fa48(\"10830\") ? {} : (stryCov_9fa48(\"10830\"), {\n    createSession: stryMutAct_9fa48(\"10831\") ? () => undefined : (stryCov_9fa48(\"10831\"), (data: any) => apiClient.createSwipeSession(data)),\n    getCurrentSession: stryMutAct_9fa48(\"10832\") ? () => undefined : (stryCov_9fa48(\"10832\"), () => apiClient.getCurrentSwipeSession()),\n    recordSwipe: stryMutAct_9fa48(\"10833\") ? () => undefined : (stryCov_9fa48(\"10833\"), (sessionId: string, data: SwipeRequest) => apiClient.recordSwipe(sessionId, data)),\n    getAnalytics: stryMutAct_9fa48(\"10834\") ? () => undefined : (stryCov_9fa48(\"10834\"), () => apiClient.getSwipeAnalytics()),\n    // Alternative method names for backward compatibility\n    startSession: stryMutAct_9fa48(\"10835\") ? () => undefined : (stryCov_9fa48(\"10835\"), (data: any) => apiClient.createSwipeSession(data))\n  }),\n  // Recommendation methods\n  recommendations: stryMutAct_9fa48(\"10836\") ? {} : (stryCov_9fa48(\"10836\"), {\n    generate: stryMutAct_9fa48(\"10837\") ? () => undefined : (stryCov_9fa48(\"10837\"), (data: RecommendationRequest) => apiClient.generateRecommendations(data)),\n    getRecommendations: stryMutAct_9fa48(\"10838\") ? () => undefined : (stryCov_9fa48(\"10838\"), (params?: any) => apiClient.getRecommendations(params)),\n    getRecommendation: stryMutAct_9fa48(\"10839\") ? () => undefined : (stryCov_9fa48(\"10839\"), (id: string) => apiClient.getRecommendation(id)),\n    provideFeedback: stryMutAct_9fa48(\"10840\") ? () => undefined : (stryCov_9fa48(\"10840\"), (id: string, feedback: any) => apiClient.provideFeedback(id, feedback)),\n    refresh: stryMutAct_9fa48(\"10841\") ? () => undefined : (stryCov_9fa48(\"10841\"), () => apiClient.refreshRecommendations()),\n    // Alternative method name for compatibility with tests\n    createRecommendationRequest: stryMutAct_9fa48(\"10842\") ? () => undefined : (stryCov_9fa48(\"10842\"), (data: RecommendationRequest) => apiClient.generateRecommendations(data))\n  }),\n  // Gift Link methods\n  giftLinks: stryMutAct_9fa48(\"10843\") ? {} : (stryCov_9fa48(\"10843\"), {\n    create: stryMutAct_9fa48(\"10844\") ? () => undefined : (stryCov_9fa48(\"10844\"), (data: CreateGiftLinkRequest) => apiClient.createGiftLink(data)),\n    getAll: stryMutAct_9fa48(\"10845\") ? () => undefined : (stryCov_9fa48(\"10845\"), () => apiClient.getGiftLinks()),\n    getById: stryMutAct_9fa48(\"10846\") ? () => undefined : (stryCov_9fa48(\"10846\"), (id: string) => apiClient.getGiftLink(id)),\n    getByToken: stryMutAct_9fa48(\"10847\") ? () => undefined : (stryCov_9fa48(\"10847\"), (token: string) => apiClient.getGiftLinkByToken(token)),\n    delete: stryMutAct_9fa48(\"10848\") ? () => undefined : (stryCov_9fa48(\"10848\"), (id: string) => apiClient.deleteGiftLink(id)),\n    getAnalytics: stryMutAct_9fa48(\"10849\") ? () => undefined : (stryCov_9fa48(\"10849\"), (id: string) => apiClient.getGiftLinkAnalytics(id))\n  }),\n  // Analytics methods\n  analytics: stryMutAct_9fa48(\"10850\") ? {} : (stryCov_9fa48(\"10850\"), {\n    trackEvent: stryMutAct_9fa48(\"10851\") ? () => undefined : (stryCov_9fa48(\"10851\"), (event: AnalyticsEvent) => apiClient.trackEvent(event)),\n    getDashboard: stryMutAct_9fa48(\"10852\") ? () => undefined : (stryCov_9fa48(\"10852\"), () => apiClient.getAnalyticsDashboard())\n  }),\n  // Health check\n  health: stryMutAct_9fa48(\"10853\") ? () => undefined : (stryCov_9fa48(\"10853\"), () => apiClient.healthCheck())\n});\nexport default apiClient;"],"names":["api","apiClient","tokenManager","stryNS_9fa48","g","globalThis","Math","Function","ns","__stryker__","activeMutant","undefined","process","env","__STRYKER_ACTIVE_MUTANT__","retrieveNS","stryCov_9fa48","cov","mutantCoverage","static","perTest","cover","c","currentTestId","a","arguments","i","length","apply","stryMutAct_9fa48","id","isActive","hitCount","hitLimit","Error","TokenManager","getInstance","instance","initializeFromStorage","window","accessToken","localStorage","getItem","appConfig","storage","authToken","refreshToken","setTokens","setItem","getAccessToken","token","getRefreshToken","clearTokens","removeItem","user","ApiClient","constructor","isRefreshing","failedQueue","client","axios","create","baseURL","config","apiUrl","timeout","headers","setupInterceptors","interceptors","request","use","Authorization","error","Promise","reject","response","originalRequest","status","_retry","resolve","push","then","catch","err","refreshAccessToken","refresh_token","access_token","newRefreshToken","data","processQueue","refreshError","location","href","handleError","forEach","apiError","message","errors","unknown","code","timestamp","Date","toISOString","getErrorMessageByStatus","details","network","validation","unauthorized","forbidden","notFound","server","get","url","hasOwnProperty","success","post","put","patch","delete","login","endpoints","auth","register","refresh","logout","getCurrentUser","me","forgotPassword","email","resetPassword","password","verifyEmail","updateProfile","users","getUserPreferences","preferences","updateUserPreferences","getUserStatistics","statistics","deleteAccount","getProducts","params","products","list","searchProducts","query","search","getProduct","byId","getCategories","categories","getFeaturedProducts","featured","getTrendingProducts","trending","getProductsByCategory","categoryId","byCategory","createSwipeSession","swipes","createSession","getCurrentSwipeSession","currentSession","recordSwipe","sessionId","interactions","getSwipeAnalytics","analytics","generateRecommendations","recommendations","generate","getRecommendations","getRecommendation","provideFeedback","feedback","refreshRecommendations","createGiftLink","giftLinks","getGiftLinks","getGiftLink","getGiftLinkByToken","byToken","deleteGiftLink","getGiftLinkAnalytics","trackEvent","event","track","getAnalyticsDashboard","dashboard","healthCheck","health","getPreferences","updatePreferences","getStatistics","getFeatured","getTrending","getByCategory","getCurrentSession","getAnalytics","startSession","createRecommendationRequest","getAll","getById","getByToken","getDashboard"],"mappings":"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"}