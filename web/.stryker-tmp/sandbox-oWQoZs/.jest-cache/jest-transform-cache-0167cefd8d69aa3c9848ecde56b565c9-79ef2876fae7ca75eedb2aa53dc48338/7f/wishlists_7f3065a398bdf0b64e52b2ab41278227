016ae8c14c6762f86d070a23428d7371
/**
 * Wishlist Server Actions
 *
 * Server-side actions for wishlist operations in the Amazon affiliate model:
 * - Wishlist CRUD operations
 * - Adding/removing products from wishlists
 * - Wishlist sharing and social features
 * - Amazon affiliate link generation
 * - Price tracking and notifications
 *
 * These actions run on the server and provide:
 * - Type safety with TypeScript
 * - Authentication handling
 * - API integration with backend
 * - Error handling and validation
 * - Performance optimisation with caching
 */"use server";
"use strict";

/* istanbul ignore next */
function cov_25xfespcq0() {
  var path = "/home/jack/Documents/aclue-preprod/web/src/app/actions/wishlists.ts";
  var hash = "6bd15c28bf0a6a73ec1d1cc87eeeaef4b86412f5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/jack/Documents/aclue-preprod/web/src/app/actions/wishlists.ts",
    statementMap: {
      "0": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "1": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 26,
          column: 7
        }
      },
      "2": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 26,
          column: 7
        }
      },
      "3": {
        start: {
          line: 28,
          column: 0
        },
        end: {
          line: 65,
          column: 3
        }
      },
      "4": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 35
        }
      },
      "5": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 36
        }
      },
      "6": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 36
        }
      },
      "7": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 44
        }
      },
      "8": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 39
        }
      },
      "9": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 39
        }
      },
      "10": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 38
        }
      },
      "11": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 37
        }
      },
      "12": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 42
        }
      },
      "13": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 40
        }
      },
      "14": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 41
        }
      },
      "15": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 36
        }
      },
      "16": {
        start: {
          line: 66,
          column: 15
        },
        end: {
          line: 66,
          column: 36
        }
      },
      "17": {
        start: {
          line: 67,
          column: 17
        },
        end: {
          line: 67,
          column: 40
        }
      },
      "18": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "19": {
        start: {
          line: 75,
          column: 28
        },
        end: {
          line: 75,
          column: 51
        }
      },
      "20": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 62
        }
      },
      "21": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 58
        }
      },
      "22": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 20
        }
      },
      "23": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 85,
          column: 101
        }
      },
      "24": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 139,
          column: 5
        }
      },
      "25": {
        start: {
          line: 89,
          column: 22
        },
        end: {
          line: 89,
          column: 42
        }
      },
      "26": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "27": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 94,
          column: 14
        }
      },
      "28": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "29": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 101,
          column: 14
        }
      },
      "30": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "31": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 107,
          column: 14
        }
      },
      "32": {
        start: {
          line: 109,
          column: 25
        },
        end: {
          line: 120,
          column: 10
        }
      },
      "33": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 123,
          column: 9
        }
      },
      "34": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 77
        }
      },
      "35": {
        start: {
          line: 124,
          column: 25
        },
        end: {
          line: 124,
          column: 46
        }
      },
      "36": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 47
        }
      },
      "37": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 49
        }
      },
      "38": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 132,
          column: 10
        }
      },
      "39": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 57
        }
      },
      "40": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 138,
          column: 10
        }
      },
      "41": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 178,
          column: 5
        }
      },
      "42": {
        start: {
          line: 143,
          column: 22
        },
        end: {
          line: 143,
          column: 42
        }
      },
      "43": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 150,
          column: 9
        }
      },
      "44": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 149,
          column: 14
        }
      },
      "45": {
        start: {
          line: 151,
          column: 25
        },
        end: {
          line: 162,
          column: 10
        }
      },
      "46": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 165,
          column: 9
        }
      },
      "47": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 77
        }
      },
      "48": {
        start: {
          line: 166,
          column: 21
        },
        end: {
          line: 166,
          column: 42
        }
      },
      "49": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 170,
          column: 10
        }
      },
      "50": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 58
        }
      },
      "51": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 177,
          column: 10
        }
      },
      "52": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 224,
          column: 5
        }
      },
      "53": {
        start: {
          line: 182,
          column: 22
        },
        end: {
          line: 182,
          column: 42
        }
      },
      "54": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "55": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 188,
          column: 14
        }
      },
      "56": {
        start: {
          line: 190,
          column: 25
        },
        end: {
          line: 201,
          column: 10
        }
      },
      "57": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "58": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 209,
          column: 13
        }
      },
      "59": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 208,
          column: 18
        }
      },
      "60": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 76
        }
      },
      "61": {
        start: {
          line: 212,
          column: 21
        },
        end: {
          line: 212,
          column: 42
        }
      },
      "62": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 216,
          column: 10
        }
      },
      "63": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 218,
          column: 57
        }
      },
      "64": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 223,
          column: 10
        }
      },
      "65": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 280,
          column: 5
        }
      },
      "66": {
        start: {
          line: 228,
          column: 22
        },
        end: {
          line: 228,
          column: 42
        }
      },
      "67": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "68": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 233,
          column: 14
        }
      },
      "69": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 241,
          column: 9
        }
      },
      "70": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 240,
          column: 14
        }
      },
      "71": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "72": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 246,
          column: 14
        }
      },
      "73": {
        start: {
          line: 248,
          column: 27
        },
        end: {
          line: 248,
          column: 29
        }
      },
      "74": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 72
        }
      },
      "75": {
        start: {
          line: 249,
          column: 37
        },
        end: {
          line: 249,
          column: 72
        }
      },
      "76": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 102
        }
      },
      "77": {
        start: {
          line: 250,
          column: 44
        },
        end: {
          line: 250,
          column: 102
        }
      },
      "78": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 80
        }
      },
      "79": {
        start: {
          line: 251,
          column: 42
        },
        end: {
          line: 251,
          column: 80
        }
      },
      "80": {
        start: {
          line: 252,
          column: 25
        },
        end: {
          line: 259,
          column: 10
        }
      },
      "81": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 262,
          column: 9
        }
      },
      "82": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 77
        }
      },
      "83": {
        start: {
          line: 263,
          column: 25
        },
        end: {
          line: 263,
          column: 46
        }
      },
      "84": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 265,
          column: 47
        }
      },
      "85": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 65
        }
      },
      "86": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 267,
          column: 49
        }
      },
      "87": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 268,
          column: 68
        }
      },
      "88": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 273,
          column: 10
        }
      },
      "89": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 275,
          column: 57
        }
      },
      "90": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 279,
          column: 10
        }
      },
      "91": {
        start: {
          line: 283,
          column: 4
        },
        end: {
          line: 314,
          column: 5
        }
      },
      "92": {
        start: {
          line: 284,
          column: 22
        },
        end: {
          line: 284,
          column: 42
        }
      },
      "93": {
        start: {
          line: 285,
          column: 8
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "94": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 289,
          column: 14
        }
      },
      "95": {
        start: {
          line: 291,
          column: 25
        },
        end: {
          line: 296,
          column: 10
        }
      },
      "96": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 299,
          column: 9
        }
      },
      "97": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 77
        }
      },
      "98": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 301,
          column: 47
        }
      },
      "99": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 302,
          column: 60
        }
      },
      "100": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 303,
          column: 49
        }
      },
      "101": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 307,
          column: 10
        }
      },
      "102": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 309,
          column: 57
        }
      },
      "103": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 313,
          column: 10
        }
      },
      "104": {
        start: {
          line: 317,
          column: 4
        },
        end: {
          line: 360,
          column: 5
        }
      },
      "105": {
        start: {
          line: 318,
          column: 22
        },
        end: {
          line: 318,
          column: 42
        }
      },
      "106": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 324,
          column: 9
        }
      },
      "107": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 323,
          column: 14
        }
      },
      "108": {
        start: {
          line: 325,
          column: 25
        },
        end: {
          line: 336,
          column: 10
        }
      },
      "109": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 345,
          column: 9
        }
      },
      "110": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 343,
          column: 13
        }
      },
      "111": {
        start: {
          line: 339,
          column: 16
        },
        end: {
          line: 342,
          column: 18
        }
      },
      "112": {
        start: {
          line: 344,
          column: 12
        },
        end: {
          line: 344,
          column: 77
        }
      },
      "113": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 347,
          column: 47
        }
      },
      "114": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 348,
          column: 65
        }
      },
      "115": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 349,
          column: 68
        }
      },
      "116": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 353,
          column: 10
        }
      },
      "117": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 355,
          column: 58
        }
      },
      "118": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 359,
          column: 10
        }
      },
      "119": {
        start: {
          line: 363,
          column: 4
        },
        end: {
          line: 394,
          column: 5
        }
      },
      "120": {
        start: {
          line: 364,
          column: 22
        },
        end: {
          line: 364,
          column: 42
        }
      },
      "121": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 370,
          column: 9
        }
      },
      "122": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 369,
          column: 14
        }
      },
      "123": {
        start: {
          line: 371,
          column: 25
        },
        end: {
          line: 376,
          column: 10
        }
      },
      "124": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 379,
          column: 9
        }
      },
      "125": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 378,
          column: 82
        }
      },
      "126": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 381,
          column: 47
        }
      },
      "127": {
        start: {
          line: 382,
          column: 8
        },
        end: {
          line: 382,
          column: 60
        }
      },
      "128": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 383,
          column: 63
        }
      },
      "129": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 387,
          column: 10
        }
      },
      "130": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 389,
          column: 62
        }
      },
      "131": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 393,
          column: 10
        }
      },
      "132": {
        start: {
          line: 397,
          column: 4
        },
        end: {
          line: 431,
          column: 5
        }
      },
      "133": {
        start: {
          line: 398,
          column: 22
        },
        end: {
          line: 398,
          column: 42
        }
      },
      "134": {
        start: {
          line: 399,
          column: 8
        },
        end: {
          line: 404,
          column: 9
        }
      },
      "135": {
        start: {
          line: 400,
          column: 12
        },
        end: {
          line: 403,
          column: 14
        }
      },
      "136": {
        start: {
          line: 405,
          column: 25
        },
        end: {
          line: 410,
          column: 10
        }
      },
      "137": {
        start: {
          line: 411,
          column: 8
        },
        end: {
          line: 413,
          column: 9
        }
      },
      "138": {
        start: {
          line: 412,
          column: 12
        },
        end: {
          line: 412,
          column: 81
        }
      },
      "139": {
        start: {
          line: 414,
          column: 21
        },
        end: {
          line: 414,
          column: 42
        }
      },
      "140": {
        start: {
          line: 416,
          column: 8
        },
        end: {
          line: 416,
          column: 60
        }
      },
      "141": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 424,
          column: 10
        }
      },
      "142": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 426,
          column: 61
        }
      },
      "143": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 430,
          column: 10
        }
      },
      "144": {
        start: {
          line: 434,
          column: 4
        },
        end: {
          line: 466,
          column: 5
        }
      },
      "145": {
        start: {
          line: 435,
          column: 25
        },
        end: {
          line: 443,
          column: 10
        }
      },
      "146": {
        start: {
          line: 444,
          column: 8
        },
        end: {
          line: 453,
          column: 9
        }
      },
      "147": {
        start: {
          line: 445,
          column: 12
        },
        end: {
          line: 451,
          column: 13
        }
      },
      "148": {
        start: {
          line: 446,
          column: 16
        },
        end: {
          line: 450,
          column: 18
        }
      },
      "149": {
        start: {
          line: 452,
          column: 12
        },
        end: {
          line: 452,
          column: 83
        }
      },
      "150": {
        start: {
          line: 454,
          column: 21
        },
        end: {
          line: 454,
          column: 42
        }
      },
      "151": {
        start: {
          line: 455,
          column: 8
        },
        end: {
          line: 458,
          column: 10
        }
      },
      "152": {
        start: {
          line: 460,
          column: 8
        },
        end: {
          line: 460,
          column: 64
        }
      },
      "153": {
        start: {
          line: 461,
          column: 8
        },
        end: {
          line: 465,
          column: 10
        }
      },
      "154": {
        start: {
          line: 469,
          column: 4
        },
        end: {
          line: 505,
          column: 5
        }
      },
      "155": {
        start: {
          line: 470,
          column: 22
        },
        end: {
          line: 470,
          column: 42
        }
      },
      "156": {
        start: {
          line: 471,
          column: 8
        },
        end: {
          line: 477,
          column: 9
        }
      },
      "157": {
        start: {
          line: 472,
          column: 12
        },
        end: {
          line: 476,
          column: 14
        }
      },
      "158": {
        start: {
          line: 478,
          column: 25
        },
        end: {
          line: 489,
          column: 10
        }
      },
      "159": {
        start: {
          line: 490,
          column: 8
        },
        end: {
          line: 492,
          column: 9
        }
      },
      "160": {
        start: {
          line: 491,
          column: 12
        },
        end: {
          line: 491,
          column: 86
        }
      },
      "161": {
        start: {
          line: 493,
          column: 21
        },
        end: {
          line: 493,
          column: 42
        }
      },
      "162": {
        start: {
          line: 494,
          column: 8
        },
        end: {
          line: 497,
          column: 10
        }
      },
      "163": {
        start: {
          line: 499,
          column: 8
        },
        end: {
          line: 499,
          column: 66
        }
      },
      "164": {
        start: {
          line: 500,
          column: 8
        },
        end: {
          line: 504,
          column: 10
        }
      },
      "165": {
        start: {
          line: 508,
          column: 4
        },
        end: {
          line: 533,
          column: 5
        }
      },
      "166": {
        start: {
          line: 510,
          column: 8
        },
        end: {
          line: 524,
          column: 11
        }
      },
      "167": {
        start: {
          line: 523,
          column: 12
        },
        end: {
          line: 523,
          column: 68
        }
      },
      "168": {
        start: {
          line: 525,
          column: 8
        },
        end: {
          line: 527,
          column: 10
        }
      },
      "169": {
        start: {
          line: 529,
          column: 8
        },
        end: {
          line: 529,
          column: 64
        }
      },
      "170": {
        start: {
          line: 530,
          column: 8
        },
        end: {
          line: 532,
          column: 10
        }
      },
      "171": {
        start: {
          line: 536,
          column: 4
        },
        end: {
          line: 550,
          column: 5
        }
      },
      "172": {
        start: {
          line: 537,
          column: 8
        },
        end: {
          line: 537,
          column: 47
        }
      },
      "173": {
        start: {
          line: 538,
          column: 8
        },
        end: {
          line: 538,
          column: 53
        }
      },
      "174": {
        start: {
          line: 539,
          column: 8
        },
        end: {
          line: 539,
          column: 49
        }
      },
      "175": {
        start: {
          line: 540,
          column: 8
        },
        end: {
          line: 543,
          column: 10
        }
      },
      "176": {
        start: {
          line: 545,
          column: 8
        },
        end: {
          line: 545,
          column: 65
        }
      },
      "177": {
        start: {
          line: 546,
          column: 8
        },
        end: {
          line: 549,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 16
          }
        },
        loc: {
          start: {
            line: 22,
            column: 30
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 22
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 29,
            column: 25
          },
          end: {
            line: 29,
            column: 26
          }
        },
        loc: {
          start: {
            line: 29,
            column: 36
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 32,
            column: 26
          },
          end: {
            line: 32,
            column: 27
          }
        },
        loc: {
          start: {
            line: 32,
            column: 37
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 32
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 35,
            column: 26
          },
          end: {
            line: 35,
            column: 27
          }
        },
        loc: {
          start: {
            line: 35,
            column: 37
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 35
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 38,
            column: 34
          },
          end: {
            line: 38,
            column: 35
          }
        },
        loc: {
          start: {
            line: 38,
            column: 45
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 38
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 41,
            column: 29
          },
          end: {
            line: 41,
            column: 30
          }
        },
        loc: {
          start: {
            line: 41,
            column: 40
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 41
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 44,
            column: 29
          },
          end: {
            line: 44,
            column: 30
          }
        },
        loc: {
          start: {
            line: 44,
            column: 40
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 44
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 47,
            column: 28
          },
          end: {
            line: 47,
            column: 29
          }
        },
        loc: {
          start: {
            line: 47,
            column: 39
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 47
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 50,
            column: 27
          },
          end: {
            line: 50,
            column: 28
          }
        },
        loc: {
          start: {
            line: 50,
            column: 38
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 50
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 53,
            column: 32
          },
          end: {
            line: 53,
            column: 33
          }
        },
        loc: {
          start: {
            line: 53,
            column: 43
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 53
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 56,
            column: 30
          },
          end: {
            line: 56,
            column: 31
          }
        },
        loc: {
          start: {
            line: 56,
            column: 41
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 56
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 59,
            column: 31
          },
          end: {
            line: 59,
            column: 32
          }
        },
        loc: {
          start: {
            line: 59,
            column: 42
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 59
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 62,
            column: 26
          },
          end: {
            line: 62,
            column: 27
          }
        },
        loc: {
          start: {
            line: 62,
            column: 37
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 62
      },
      "13": {
        name: "getAuthToken",
        decl: {
          start: {
            line: 73,
            column: 19
          },
          end: {
            line: 73,
            column: 31
          }
        },
        loc: {
          start: {
            line: 73,
            column: 34
          },
          end: {
            line: 81,
            column: 1
          }
        },
        line: 73
      },
      "14": {
        name: "generateShareToken",
        decl: {
          start: {
            line: 84,
            column: 13
          },
          end: {
            line: 84,
            column: 31
          }
        },
        loc: {
          start: {
            line: 84,
            column: 34
          },
          end: {
            line: 86,
            column: 1
          }
        },
        line: 84
      },
      "15": {
        name: "createWishlistAction",
        decl: {
          start: {
            line: 87,
            column: 15
          },
          end: {
            line: 87,
            column: 35
          }
        },
        loc: {
          start: {
            line: 87,
            column: 42
          },
          end: {
            line: 140,
            column: 1
          }
        },
        line: 87
      },
      "16": {
        name: "getUserWishlistsAction",
        decl: {
          start: {
            line: 141,
            column: 15
          },
          end: {
            line: 141,
            column: 37
          }
        },
        loc: {
          start: {
            line: 141,
            column: 40
          },
          end: {
            line: 179,
            column: 1
          }
        },
        line: 141
      },
      "17": {
        name: "getWishlistByIdAction",
        decl: {
          start: {
            line: 180,
            column: 15
          },
          end: {
            line: 180,
            column: 36
          }
        },
        loc: {
          start: {
            line: 180,
            column: 49
          },
          end: {
            line: 225,
            column: 1
          }
        },
        line: 180
      },
      "18": {
        name: "updateWishlistAction",
        decl: {
          start: {
            line: 226,
            column: 15
          },
          end: {
            line: 226,
            column: 35
          }
        },
        loc: {
          start: {
            line: 226,
            column: 42
          },
          end: {
            line: 281,
            column: 1
          }
        },
        line: 226
      },
      "19": {
        name: "deleteWishlistAction",
        decl: {
          start: {
            line: 282,
            column: 15
          },
          end: {
            line: 282,
            column: 35
          }
        },
        loc: {
          start: {
            line: 282,
            column: 48
          },
          end: {
            line: 315,
            column: 1
          }
        },
        line: 282
      },
      "20": {
        name: "addToWishlistAction",
        decl: {
          start: {
            line: 316,
            column: 15
          },
          end: {
            line: 316,
            column: 34
          }
        },
        loc: {
          start: {
            line: 316,
            column: 41
          },
          end: {
            line: 361,
            column: 1
          }
        },
        line: 316
      },
      "21": {
        name: "removeFromWishlistAction",
        decl: {
          start: {
            line: 362,
            column: 15
          },
          end: {
            line: 362,
            column: 39
          }
        },
        loc: {
          start: {
            line: 362,
            column: 63
          },
          end: {
            line: 395,
            column: 1
          }
        },
        line: 362
      },
      "22": {
        name: "generateShareLinkAction",
        decl: {
          start: {
            line: 396,
            column: 15
          },
          end: {
            line: 396,
            column: 38
          }
        },
        loc: {
          start: {
            line: 396,
            column: 51
          },
          end: {
            line: 432,
            column: 1
          }
        },
        line: 396
      },
      "23": {
        name: "getSharedWishlistAction",
        decl: {
          start: {
            line: 433,
            column: 15
          },
          end: {
            line: 433,
            column: 38
          }
        },
        loc: {
          start: {
            line: 433,
            column: 63
          },
          end: {
            line: 467,
            column: 1
          }
        },
        line: 433
      },
      "24": {
        name: "generateAffiliateLinksAction",
        decl: {
          start: {
            line: 468,
            column: 15
          },
          end: {
            line: 468,
            column: 43
          }
        },
        loc: {
          start: {
            line: 468,
            column: 56
          },
          end: {
            line: 506,
            column: 1
          }
        },
        line: 468
      },
      "25": {
        name: "trackAffiliateClickAction",
        decl: {
          start: {
            line: 507,
            column: 15
          },
          end: {
            line: 507,
            column: 40
          }
        },
        loc: {
          start: {
            line: 507,
            column: 47
          },
          end: {
            line: 534,
            column: 1
          }
        },
        line: 507
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 522,
            column: 17
          },
          end: {
            line: 522,
            column: 18
          }
        },
        loc: {
          start: {
            line: 522,
            column: 26
          },
          end: {
            line: 524,
            column: 9
          }
        },
        line: 522
      },
      "27": {
        name: "refreshWishlistCacheAction",
        decl: {
          start: {
            line: 535,
            column: 15
          },
          end: {
            line: 535,
            column: 41
          }
        },
        loc: {
          start: {
            line: 535,
            column: 44
          },
          end: {
            line: 551,
            column: 1
          }
        },
        line: 535
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 76,
            column: 15
          },
          end: {
            line: 76,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 15
          },
          end: {
            line: 76,
            column: 53
          }
        }, {
          start: {
            line: 76,
            column: 57
          },
          end: {
            line: 76,
            column: 61
          }
        }],
        line: 76
      },
      "1": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "2": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "3": {
        loc: {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 97,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 97,
            column: 22
          }
        }, {
          start: {
            line: 97,
            column: 26
          },
          end: {
            line: 97,
            column: 55
          }
        }],
        line: 97
      },
      "4": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "5": {
        loc: {
          start: {
            line: 117,
            column: 29
          },
          end: {
            line: 117,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 117,
            column: 29
          },
          end: {
            line: 117,
            column: 53
          }
        }, {
          start: {
            line: 117,
            column: 57
          },
          end: {
            line: 117,
            column: 61
          }
        }],
        line: 117
      },
      "6": {
        loc: {
          start: {
            line: 118,
            column: 27
          },
          end: {
            line: 118,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 27
          },
          end: {
            line: 118,
            column: 41
          }
        }, {
          start: {
            line: 118,
            column: 45
          },
          end: {
            line: 118,
            column: 50
          }
        }],
        line: 118
      },
      "7": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "8": {
        loc: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "9": {
        loc: {
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "10": {
        loc: {
          start: {
            line: 169,
            column: 18
          },
          end: {
            line: 169,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 18
          },
          end: {
            line: 169,
            column: 27
          }
        }, {
          start: {
            line: 169,
            column: 31
          },
          end: {
            line: 169,
            column: 35
          }
        }],
        line: 169
      },
      "11": {
        loc: {
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "12": {
        loc: {
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "13": {
        loc: {
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 209,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 209,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "14": {
        loc: {
          start: {
            line: 215,
            column: 18
          },
          end: {
            line: 215,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 215,
            column: 18
          },
          end: {
            line: 215,
            column: 27
          }
        }, {
          start: {
            line: 215,
            column: 31
          },
          end: {
            line: 215,
            column: 35
          }
        }],
        line: 215
      },
      "15": {
        loc: {
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "16": {
        loc: {
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "17": {
        loc: {
          start: {
            line: 236,
            column: 12
          },
          end: {
            line: 236,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 12
          },
          end: {
            line: 236,
            column: 35
          }
        }, {
          start: {
            line: 236,
            column: 40
          },
          end: {
            line: 236,
            column: 50
          }
        }, {
          start: {
            line: 236,
            column: 54
          },
          end: {
            line: 236,
            column: 83
          }
        }],
        line: 236
      },
      "18": {
        loc: {
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 242
      },
      "19": {
        loc: {
          start: {
            line: 242,
            column: 12
          },
          end: {
            line: 242,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 242,
            column: 12
          },
          end: {
            line: 242,
            column: 21
          }
        }, {
          start: {
            line: 242,
            column: 25
          },
          end: {
            line: 242,
            column: 47
          }
        }],
        line: 242
      },
      "20": {
        loc: {
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 249,
            column: 72
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 249,
            column: 72
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "21": {
        loc: {
          start: {
            line: 250,
            column: 8
          },
          end: {
            line: 250,
            column: 102
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 250,
            column: 8
          },
          end: {
            line: 250,
            column: 102
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 250
      },
      "22": {
        loc: {
          start: {
            line: 250,
            column: 69
          },
          end: {
            line: 250,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 250,
            column: 69
          },
          end: {
            line: 250,
            column: 93
          }
        }, {
          start: {
            line: 250,
            column: 97
          },
          end: {
            line: 250,
            column: 101
          }
        }],
        line: 250
      },
      "23": {
        loc: {
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 251,
            column: 80
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 251,
            column: 80
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "24": {
        loc: {
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 262,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 262,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "25": {
        loc: {
          start: {
            line: 285,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 285,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 285
      },
      "26": {
        loc: {
          start: {
            line: 297,
            column: 8
          },
          end: {
            line: 299,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 297,
            column: 8
          },
          end: {
            line: 299,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 297
      },
      "27": {
        loc: {
          start: {
            line: 319,
            column: 8
          },
          end: {
            line: 324,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 319,
            column: 8
          },
          end: {
            line: 324,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 319
      },
      "28": {
        loc: {
          start: {
            line: 333,
            column: 23
          },
          end: {
            line: 333,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 333,
            column: 23
          },
          end: {
            line: 333,
            column: 41
          }
        }, {
          start: {
            line: 333,
            column: 45
          },
          end: {
            line: 333,
            column: 49
          }
        }],
        line: 333
      },
      "29": {
        loc: {
          start: {
            line: 334,
            column: 26
          },
          end: {
            line: 334,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 334,
            column: 26
          },
          end: {
            line: 334,
            column: 39
          }
        }, {
          start: {
            line: 334,
            column: 43
          },
          end: {
            line: 334,
            column: 51
          }
        }],
        line: 334
      },
      "30": {
        loc: {
          start: {
            line: 337,
            column: 8
          },
          end: {
            line: 345,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 337,
            column: 8
          },
          end: {
            line: 345,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 337
      },
      "31": {
        loc: {
          start: {
            line: 338,
            column: 12
          },
          end: {
            line: 343,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 338,
            column: 12
          },
          end: {
            line: 343,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 338
      },
      "32": {
        loc: {
          start: {
            line: 365,
            column: 8
          },
          end: {
            line: 370,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 365,
            column: 8
          },
          end: {
            line: 370,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 365
      },
      "33": {
        loc: {
          start: {
            line: 377,
            column: 8
          },
          end: {
            line: 379,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 377,
            column: 8
          },
          end: {
            line: 379,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 377
      },
      "34": {
        loc: {
          start: {
            line: 399,
            column: 8
          },
          end: {
            line: 404,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 399,
            column: 8
          },
          end: {
            line: 404,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 399
      },
      "35": {
        loc: {
          start: {
            line: 411,
            column: 8
          },
          end: {
            line: 413,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 411,
            column: 8
          },
          end: {
            line: 413,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 411
      },
      "36": {
        loc: {
          start: {
            line: 444,
            column: 8
          },
          end: {
            line: 453,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 444,
            column: 8
          },
          end: {
            line: 453,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 444
      },
      "37": {
        loc: {
          start: {
            line: 445,
            column: 12
          },
          end: {
            line: 451,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 445,
            column: 12
          },
          end: {
            line: 451,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 445
      },
      "38": {
        loc: {
          start: {
            line: 457,
            column: 18
          },
          end: {
            line: 457,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 457,
            column: 18
          },
          end: {
            line: 457,
            column: 27
          }
        }, {
          start: {
            line: 457,
            column: 31
          },
          end: {
            line: 457,
            column: 35
          }
        }],
        line: 457
      },
      "39": {
        loc: {
          start: {
            line: 471,
            column: 8
          },
          end: {
            line: 477,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 471,
            column: 8
          },
          end: {
            line: 477,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 471
      },
      "40": {
        loc: {
          start: {
            line: 490,
            column: 8
          },
          end: {
            line: 492,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 490,
            column: 8
          },
          end: {
            line: 492,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 490
      },
      "41": {
        loc: {
          start: {
            line: 496,
            column: 18
          },
          end: {
            line: 496,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 496,
            column: 18
          },
          end: {
            line: 496,
            column: 38
          }
        }, {
          start: {
            line: 496,
            column: 42
          },
          end: {
            line: 496,
            column: 44
          }
        }],
        line: 496
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/jack/Documents/aclue-preprod/web/src/app/actions/wishlists.ts"],
      sourcesContent: ["/**\n * Wishlist Server Actions\n *\n * Server-side actions for wishlist operations in the Amazon affiliate model:\n * - Wishlist CRUD operations\n * - Adding/removing products from wishlists\n * - Wishlist sharing and social features\n * - Amazon affiliate link generation\n * - Price tracking and notifications\n *\n * These actions run on the server and provide:\n * - Type safety with TypeScript\n * - Authentication handling\n * - API integration with backend\n * - Error handling and validation\n * - Performance optimisation with caching\n */\n\n'use server';\n\nimport { revalidatePath, revalidateTag } from 'next/cache';\nimport { redirect } from 'next/navigation';\nimport { cookies } from 'next/headers';\nimport { generateAffiliateLink } from '@/lib/affiliate';\n\n// ==============================================================================\n// TYPE DEFINITIONS\n// ==============================================================================\n\ninterface Wishlist {\n  id: string;\n  user_id: string;\n  name: string;\n  description?: string;\n  is_public: boolean;\n  share_token?: string;\n  created_at: Date;\n  updated_at: Date;\n  product_count: number;\n}\n\ninterface WishlistProduct {\n  id: string;\n  wishlist_id: string;\n  product_id: string;\n  added_at: Date;\n  notes?: string;\n  priority?: 'low' | 'medium' | 'high';\n  price_when_added?: number;\n}\n\ninterface CreateWishlistData {\n  name: string;\n  description?: string;\n  is_public?: boolean;\n}\n\ninterface UpdateWishlistData {\n  wishlistId: string;\n  name?: string;\n  description?: string;\n  is_public?: boolean;\n}\n\ninterface AddToWishlistData {\n  wishlistId: string;\n  productId: string;\n  notes?: string;\n  priority?: 'low' | 'medium' | 'high';\n}\n\n// ==============================================================================\n// HELPER FUNCTIONS\n// ==============================================================================\n\n/**\n * Get authentication token from cookies\n */\nasync function getAuthToken(): Promise<string | null> {\n  try {\n    const cookieStore = cookies();\n    return cookieStore.get('access_token')?.value || null;\n  } catch (error) {\n    console.error('Error getting auth token:', error);\n    return null;\n  }\n}\n\n/**\n * Generate unique share token for wishlist\n */\nfunction generateShareToken(): string {\n  return Math.random().toString(36).substring(2, 15) +\n         Math.random().toString(36).substring(2, 15);\n}\n\n// ==============================================================================\n// WISHLIST CRUD ACTIONS\n// ==============================================================================\n\n/**\n * Create new wishlist\n */\nexport async function createWishlistAction(data: CreateWishlistData) {\n  try {\n    const token = await getAuthToken();\n\n    if (!token) {\n      return {\n        success: false,\n        error: 'Please sign in to create wishlists'\n      };\n    }\n\n    // Validate input\n    if (!data.name || data.name.trim().length === 0) {\n      return {\n        success: false,\n        error: 'Wishlist name is required'\n      };\n    }\n\n    if (data.name.length > 100) {\n      return {\n        success: false,\n        error: 'Wishlist name must be 100 characters or less'\n      };\n    }\n\n    const response = await fetch(\n      `${process.env.NEXT_PUBLIC_API_URL}/api/v1/wishlists/`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n        body: JSON.stringify({\n          name: data.name.trim(),\n          description: data.description?.trim() || null,\n          is_public: data.is_public || false,\n        }),\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(`Failed to create wishlist: ${response.status}`);\n    }\n\n    const wishlist = await response.json();\n\n    // Revalidate caches\n    revalidateTag('wishlists');\n    revalidatePath('/wishlists');\n\n    return {\n      success: true,\n      data: wishlist,\n      message: 'Wishlist created successfully!'\n    };\n  } catch (error) {\n    console.error('Error creating wishlist:', error);\n    return {\n      success: false,\n      error: 'Failed to create wishlist. Please try again.'\n    };\n  }\n}\n\n/**\n * Get all user wishlists\n */\nexport async function getUserWishlistsAction() {\n  try {\n    const token = await getAuthToken();\n\n    if (!token) {\n      return {\n        success: false,\n        error: 'Authentication required',\n        data: []\n      };\n    }\n\n    const response = await fetch(\n      `${process.env.NEXT_PUBLIC_API_URL}/api/v1/wishlists/`,\n      {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n        next: {\n          revalidate: 300, // Cache for 5 minutes\n          tags: ['wishlists', `wishlists-user`]\n        },\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(`Failed to fetch wishlists: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return {\n      success: true,\n      data: data.data || data\n    };\n  } catch (error) {\n    console.error('Error fetching wishlists:', error);\n    return {\n      success: false,\n      error: 'Failed to load wishlists. Please try again.',\n      data: []\n    };\n  }\n}\n\n/**\n * Get single wishlist by ID\n */\nexport async function getWishlistByIdAction(wishlistId: string) {\n  try {\n    const token = await getAuthToken();\n\n    if (!token) {\n      return {\n        success: false,\n        error: 'Authentication required',\n        data: null\n      };\n    }\n\n    const response = await fetch(\n      `${process.env.NEXT_PUBLIC_API_URL}/api/v1/wishlists/${wishlistId}`,\n      {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n        next: {\n          revalidate: 300, // Cache for 5 minutes\n          tags: ['wishlists', `wishlist-${wishlistId}`]\n        },\n      }\n    );\n\n    if (!response.ok) {\n      if (response.status === 404) {\n        return {\n          success: false,\n          error: 'Wishlist not found',\n          data: null\n        };\n      }\n      throw new Error(`Failed to fetch wishlist: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return {\n      success: true,\n      data: data.data || data\n    };\n  } catch (error) {\n    console.error('Error fetching wishlist:', error);\n    return {\n      success: false,\n      error: 'Failed to load wishlist. Please try again.',\n      data: null\n    };\n  }\n}\n\n/**\n * Update wishlist details\n */\nexport async function updateWishlistAction(data: UpdateWishlistData) {\n  try {\n    const token = await getAuthToken();\n\n    if (!token) {\n      return {\n        success: false,\n        error: 'Please sign in to update wishlists'\n      };\n    }\n\n    // Validate input\n    if (data.name !== undefined && (!data.name || data.name.trim().length === 0)) {\n      return {\n        success: false,\n        error: 'Wishlist name is required'\n      };\n    }\n\n    if (data.name && data.name.length > 100) {\n      return {\n        success: false,\n        error: 'Wishlist name must be 100 characters or less'\n      };\n    }\n\n    const updateData: any = {};\n    if (data.name !== undefined) updateData.name = data.name.trim();\n    if (data.description !== undefined) updateData.description = data.description?.trim() || null;\n    if (data.is_public !== undefined) updateData.is_public = data.is_public;\n\n    const response = await fetch(\n      `${process.env.NEXT_PUBLIC_API_URL}/api/v1/wishlists/${data.wishlistId}`,\n      {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n        body: JSON.stringify(updateData),\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(`Failed to update wishlist: ${response.status}`);\n    }\n\n    const wishlist = await response.json();\n\n    // Revalidate caches\n    revalidateTag('wishlists');\n    revalidateTag(`wishlist-${data.wishlistId}`);\n    revalidatePath('/wishlists');\n    revalidatePath(`/wishlists/${data.wishlistId}`);\n\n    return {\n      success: true,\n      data: wishlist,\n      message: 'Wishlist updated successfully!'\n    };\n  } catch (error) {\n    console.error('Error updating wishlist:', error);\n    return {\n      success: false,\n      error: 'Failed to update wishlist. Please try again.'\n    };\n  }\n}\n\n/**\n * Delete wishlist\n */\nexport async function deleteWishlistAction(wishlistId: string) {\n  try {\n    const token = await getAuthToken();\n\n    if (!token) {\n      return {\n        success: false,\n        error: 'Authentication required'\n      };\n    }\n\n    const response = await fetch(\n      `${process.env.NEXT_PUBLIC_API_URL}/api/v1/wishlists/${wishlistId}`,\n      {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(`Failed to delete wishlist: ${response.status}`);\n    }\n\n    // Revalidate caches\n    revalidateTag('wishlists');\n    revalidateTag(`wishlist-${wishlistId}`);\n    revalidatePath('/wishlists');\n\n    return {\n      success: true,\n      message: 'Wishlist deleted successfully!'\n    };\n  } catch (error) {\n    console.error('Error deleting wishlist:', error);\n    return {\n      success: false,\n      error: 'Failed to delete wishlist. Please try again.'\n    };\n  }\n}\n\n// ==============================================================================\n// WISHLIST PRODUCT ACTIONS\n// ==============================================================================\n\n/**\n * Add product to wishlist\n */\nexport async function addToWishlistAction(data: AddToWishlistData) {\n  try {\n    const token = await getAuthToken();\n\n    if (!token) {\n      return {\n        success: false,\n        error: 'Please sign in to add items to wishlists'\n      };\n    }\n\n    const response = await fetch(\n      `${process.env.NEXT_PUBLIC_API_URL}/api/v1/wishlists/${data.wishlistId}/products`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n        body: JSON.stringify({\n          product_id: data.productId,\n          notes: data.notes?.trim() || null,\n          priority: data.priority || 'medium',\n        }),\n      }\n    );\n\n    if (!response.ok) {\n      if (response.status === 409) {\n        return {\n          success: false,\n          error: 'Product is already in this wishlist'\n        };\n      }\n      throw new Error(`Failed to add to wishlist: ${response.status}`);\n    }\n\n    // Revalidate caches\n    revalidateTag('wishlists');\n    revalidateTag(`wishlist-${data.wishlistId}`);\n    revalidatePath(`/wishlists/${data.wishlistId}`);\n\n    return {\n      success: true,\n      message: 'Product added to wishlist!'\n    };\n  } catch (error) {\n    console.error('Error adding to wishlist:', error);\n    return {\n      success: false,\n      error: 'Failed to add product to wishlist. Please try again.'\n    };\n  }\n}\n\n/**\n * Remove product from wishlist\n */\nexport async function removeFromWishlistAction(wishlistId: string, productId: string) {\n  try {\n    const token = await getAuthToken();\n\n    if (!token) {\n      return {\n        success: false,\n        error: 'Authentication required'\n      };\n    }\n\n    const response = await fetch(\n      `${process.env.NEXT_PUBLIC_API_URL}/api/v1/wishlists/${wishlistId}/products/${productId}`,\n      {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(`Failed to remove from wishlist: ${response.status}`);\n    }\n\n    // Revalidate caches\n    revalidateTag('wishlists');\n    revalidateTag(`wishlist-${wishlistId}`);\n    revalidatePath(`/wishlists/${wishlistId}`);\n\n    return {\n      success: true,\n      message: 'Product removed from wishlist!'\n    };\n  } catch (error) {\n    console.error('Error removing from wishlist:', error);\n    return {\n      success: false,\n      error: 'Failed to remove product from wishlist. Please try again.'\n    };\n  }\n}\n\n// ==============================================================================\n// WISHLIST SHARING ACTIONS\n// ==============================================================================\n\n/**\n * Generate sharing link for wishlist\n */\nexport async function generateShareLinkAction(wishlistId: string) {\n  try {\n    const token = await getAuthToken();\n\n    if (!token) {\n      return {\n        success: false,\n        error: 'Authentication required'\n      };\n    }\n\n    const response = await fetch(\n      `${process.env.NEXT_PUBLIC_API_URL}/api/v1/wishlists/${wishlistId}/share`,\n      {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(`Failed to generate share link: ${response.status}`);\n    }\n\n    const data = await response.json();\n\n    // Revalidate wishlist cache\n    revalidateTag(`wishlist-${wishlistId}`);\n\n    return {\n      success: true,\n      data: {\n        shareToken: data.share_token,\n        shareUrl: `${process.env.NEXT_PUBLIC_WEB_URL}/wishlists/${wishlistId}/share/${data.share_token}`\n      },\n      message: 'Share link generated successfully!'\n    };\n  } catch (error) {\n    console.error('Error generating share link:', error);\n    return {\n      success: false,\n      error: 'Failed to generate share link. Please try again.'\n    };\n  }\n}\n\n/**\n * Get public shared wishlist (no authentication required)\n */\nexport async function getSharedWishlistAction(wishlistId: string, shareToken: string) {\n  try {\n    const response = await fetch(\n      `${process.env.NEXT_PUBLIC_API_URL}/api/v1/wishlists/${wishlistId}/shared/${shareToken}`,\n      {\n        next: {\n          revalidate: 600, // Cache for 10 minutes\n          tags: ['shared-wishlist', `shared-wishlist-${wishlistId}`]\n        },\n      }\n    );\n\n    if (!response.ok) {\n      if (response.status === 404) {\n        return {\n          success: false,\n          error: 'Shared wishlist not found or link has expired',\n          data: null\n        };\n      }\n      throw new Error(`Failed to fetch shared wishlist: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return {\n      success: true,\n      data: data.data || data\n    };\n  } catch (error) {\n    console.error('Error fetching shared wishlist:', error);\n    return {\n      success: false,\n      error: 'Failed to load shared wishlist. Please try again.',\n      data: null\n    };\n  }\n}\n\n// ==============================================================================\n// AMAZON AFFILIATE ACTIONS\n// ==============================================================================\n\n/**\n * Generate Amazon affiliate links for wishlist products\n */\nexport async function generateAffiliateLinksAction(productIds: string[]) {\n  try {\n    const token = await getAuthToken();\n\n    if (!token) {\n      return {\n        success: false,\n        error: 'Authentication required',\n        data: {}\n      };\n    }\n\n    const response = await fetch(\n      `${process.env.NEXT_PUBLIC_API_URL}/api/v1/affiliate/generate`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n        body: JSON.stringify({\n          product_ids: productIds,\n          affiliate_tag: process.env.AMAZON_AFFILIATE_TAG,\n          campaign: 'wishlist_sharing',\n        }),\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(`Failed to generate affiliate links: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return {\n      success: true,\n      data: data.affiliate_links || {}\n    };\n  } catch (error) {\n    console.error('Error generating affiliate links:', error);\n    return {\n      success: false,\n      error: 'Failed to generate affiliate links. Using direct links instead.',\n      data: {}\n    };\n  }\n}\n\n/**\n * Track affiliate click for analytics\n */\nexport async function trackAffiliateClickAction(data: {\n  productId: string;\n  wishlistId?: string;\n  source: string;\n  campaign: string;\n}) {\n  try {\n    // This is fire-and-forget analytics tracking\n    fetch(\n      `${process.env.NEXT_PUBLIC_API_URL}/api/v1/affiliate/track`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          product_id: data.productId,\n          wishlist_id: data.wishlistId,\n          source: data.source,\n          campaign: data.campaign,\n          timestamp: new Date().toISOString(),\n        }),\n      }\n    ).catch(error => {\n      console.error('Error tracking affiliate click:', error);\n    });\n\n    return { success: true };\n  } catch (error) {\n    console.error('Error tracking affiliate click:', error);\n    return { success: false };\n  }\n}\n\n// ==============================================================================\n// CACHE MANAGEMENT\n// ==============================================================================\n\n/**\n * Refresh wishlist caches\n */\nexport async function refreshWishlistCacheAction() {\n  try {\n    revalidateTag('wishlists');\n    revalidateTag('shared-wishlist');\n    revalidatePath('/wishlists');\n\n    return { success: true, message: 'Wishlist cache refreshed successfully!' };\n  } catch (error) {\n    console.error('Error refreshing wishlist cache:', error);\n    return {\n      success: false,\n      error: 'Failed to refresh cache. Please try again.'\n    };\n  }\n}"],
      names: ["addToWishlistAction", "createWishlistAction", "deleteWishlistAction", "generateAffiliateLinksAction", "generateShareLinkAction", "getSharedWishlistAction", "getUserWishlistsAction", "getWishlistByIdAction", "refreshWishlistCacheAction", "removeFromWishlistAction", "trackAffiliateClickAction", "updateWishlistAction", "getAuthToken", "cookieStore", "cookies", "get", "value", "error", "console", "generateShareToken", "Math", "random", "toString", "substring", "data", "token", "success", "name", "trim", "length", "response", "fetch", "process", "env", "NEXT_PUBLIC_API_URL", "method", "headers", "body", "JSON", "stringify", "description", "is_public", "ok", "Error", "status", "wishlist", "json", "revalidateTag", "revalidatePath", "message", "next", "revalidate", "tags", "wishlistId", "undefined", "updateData", "product_id", "productId", "notes", "priority", "shareToken", "share_token", "shareUrl", "NEXT_PUBLIC_WEB_URL", "productIds", "product_ids", "affiliate_tag", "AMAZON_AFFILIATE_TAG", "campaign", "affiliate_links", "wishlist_id", "source", "timestamp", "Date", "toISOString", "catch"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6bd15c28bf0a6a73ec1d1cc87eeeaef4b86412f5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_25xfespcq0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_25xfespcq0();
cov_25xfespcq0().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_25xfespcq0().f[0]++;
  cov_25xfespcq0().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_25xfespcq0().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_25xfespcq0().s[3]++;
_export(exports, {
  addToWishlistAction: function () {
    /* istanbul ignore next */
    cov_25xfespcq0().f[1]++;
    cov_25xfespcq0().s[4]++;
    return addToWishlistAction;
  },
  createWishlistAction: function () {
    /* istanbul ignore next */
    cov_25xfespcq0().f[2]++;
    cov_25xfespcq0().s[5]++;
    return createWishlistAction;
  },
  deleteWishlistAction: function () {
    /* istanbul ignore next */
    cov_25xfespcq0().f[3]++;
    cov_25xfespcq0().s[6]++;
    return deleteWishlistAction;
  },
  generateAffiliateLinksAction: function () {
    /* istanbul ignore next */
    cov_25xfespcq0().f[4]++;
    cov_25xfespcq0().s[7]++;
    return generateAffiliateLinksAction;
  },
  generateShareLinkAction: function () {
    /* istanbul ignore next */
    cov_25xfespcq0().f[5]++;
    cov_25xfespcq0().s[8]++;
    return generateShareLinkAction;
  },
  getSharedWishlistAction: function () {
    /* istanbul ignore next */
    cov_25xfespcq0().f[6]++;
    cov_25xfespcq0().s[9]++;
    return getSharedWishlistAction;
  },
  getUserWishlistsAction: function () {
    /* istanbul ignore next */
    cov_25xfespcq0().f[7]++;
    cov_25xfespcq0().s[10]++;
    return getUserWishlistsAction;
  },
  getWishlistByIdAction: function () {
    /* istanbul ignore next */
    cov_25xfespcq0().f[8]++;
    cov_25xfespcq0().s[11]++;
    return getWishlistByIdAction;
  },
  refreshWishlistCacheAction: function () {
    /* istanbul ignore next */
    cov_25xfespcq0().f[9]++;
    cov_25xfespcq0().s[12]++;
    return refreshWishlistCacheAction;
  },
  removeFromWishlistAction: function () {
    /* istanbul ignore next */
    cov_25xfespcq0().f[10]++;
    cov_25xfespcq0().s[13]++;
    return removeFromWishlistAction;
  },
  trackAffiliateClickAction: function () {
    /* istanbul ignore next */
    cov_25xfespcq0().f[11]++;
    cov_25xfespcq0().s[14]++;
    return trackAffiliateClickAction;
  },
  updateWishlistAction: function () {
    /* istanbul ignore next */
    cov_25xfespcq0().f[12]++;
    cov_25xfespcq0().s[15]++;
    return updateWishlistAction;
  }
});
const _cache =
/* istanbul ignore next */
(cov_25xfespcq0().s[16]++, require("next/cache"));
const _headers =
/* istanbul ignore next */
(cov_25xfespcq0().s[17]++, require("next/headers"));
// ==============================================================================
// HELPER FUNCTIONS
// ==============================================================================
/**
 * Get authentication token from cookies
 */
async function getAuthToken() {
  /* istanbul ignore next */
  cov_25xfespcq0().f[13]++;
  cov_25xfespcq0().s[18]++;
  try {
    const cookieStore =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[19]++, (0, _headers.cookies)());
    /* istanbul ignore next */
    cov_25xfespcq0().s[20]++;
    return /* istanbul ignore next */(cov_25xfespcq0().b[0][0]++, cookieStore.get("access_token")?.value) ||
    /* istanbul ignore next */
    (cov_25xfespcq0().b[0][1]++, null);
  } catch (error) {
    /* istanbul ignore next */
    cov_25xfespcq0().s[21]++;
    console.error("Error getting auth token:", error);
    /* istanbul ignore next */
    cov_25xfespcq0().s[22]++;
    return null;
  }
}
/**
 * Generate unique share token for wishlist
 */
function generateShareToken() {
  /* istanbul ignore next */
  cov_25xfespcq0().f[14]++;
  cov_25xfespcq0().s[23]++;
  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);
}
async function createWishlistAction(data) {
  /* istanbul ignore next */
  cov_25xfespcq0().f[15]++;
  cov_25xfespcq0().s[24]++;
  try {
    const token =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[25]++, await getAuthToken());
    /* istanbul ignore next */
    cov_25xfespcq0().s[26]++;
    if (!token) {
      /* istanbul ignore next */
      cov_25xfespcq0().b[1][0]++;
      cov_25xfespcq0().s[27]++;
      return {
        success: false,
        error: "Please sign in to create wishlists"
      };
    } else
    /* istanbul ignore next */
    {
      cov_25xfespcq0().b[1][1]++;
    }
    // Validate input
    cov_25xfespcq0().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_25xfespcq0().b[3][0]++, !data.name) ||
    /* istanbul ignore next */
    (cov_25xfespcq0().b[3][1]++, data.name.trim().length === 0)) {
      /* istanbul ignore next */
      cov_25xfespcq0().b[2][0]++;
      cov_25xfespcq0().s[29]++;
      return {
        success: false,
        error: "Wishlist name is required"
      };
    } else
    /* istanbul ignore next */
    {
      cov_25xfespcq0().b[2][1]++;
    }
    cov_25xfespcq0().s[30]++;
    if (data.name.length > 100) {
      /* istanbul ignore next */
      cov_25xfespcq0().b[4][0]++;
      cov_25xfespcq0().s[31]++;
      return {
        success: false,
        error: "Wishlist name must be 100 characters or less"
      };
    } else
    /* istanbul ignore next */
    {
      cov_25xfespcq0().b[4][1]++;
    }
    const response =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[32]++, await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/v1/wishlists/`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Authorization": `Bearer ${token}`
      },
      body: JSON.stringify({
        name: data.name.trim(),
        description:
        /* istanbul ignore next */
        (cov_25xfespcq0().b[5][0]++, data.description?.trim()) ||
        /* istanbul ignore next */
        (cov_25xfespcq0().b[5][1]++, null),
        is_public:
        /* istanbul ignore next */
        (cov_25xfespcq0().b[6][0]++, data.is_public) ||
        /* istanbul ignore next */
        (cov_25xfespcq0().b[6][1]++, false)
      })
    }));
    /* istanbul ignore next */
    cov_25xfespcq0().s[33]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_25xfespcq0().b[7][0]++;
      cov_25xfespcq0().s[34]++;
      throw new Error(`Failed to create wishlist: ${response.status}`);
    } else
    /* istanbul ignore next */
    {
      cov_25xfespcq0().b[7][1]++;
    }
    const wishlist =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[35]++, await response.json());
    // Revalidate caches
    /* istanbul ignore next */
    cov_25xfespcq0().s[36]++;
    (0, _cache.revalidateTag)("wishlists");
    /* istanbul ignore next */
    cov_25xfespcq0().s[37]++;
    (0, _cache.revalidatePath)("/wishlists");
    /* istanbul ignore next */
    cov_25xfespcq0().s[38]++;
    return {
      success: true,
      data: wishlist,
      message: "Wishlist created successfully!"
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_25xfespcq0().s[39]++;
    console.error("Error creating wishlist:", error);
    /* istanbul ignore next */
    cov_25xfespcq0().s[40]++;
    return {
      success: false,
      error: "Failed to create wishlist. Please try again."
    };
  }
}
async function getUserWishlistsAction() {
  /* istanbul ignore next */
  cov_25xfespcq0().f[16]++;
  cov_25xfespcq0().s[41]++;
  try {
    const token =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[42]++, await getAuthToken());
    /* istanbul ignore next */
    cov_25xfespcq0().s[43]++;
    if (!token) {
      /* istanbul ignore next */
      cov_25xfespcq0().b[8][0]++;
      cov_25xfespcq0().s[44]++;
      return {
        success: false,
        error: "Authentication required",
        data: []
      };
    } else
    /* istanbul ignore next */
    {
      cov_25xfespcq0().b[8][1]++;
    }
    const response =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[45]++, await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/v1/wishlists/`, {
      headers: {
        "Authorization": `Bearer ${token}`
      },
      next: {
        revalidate: 300,
        tags: ["wishlists", `wishlists-user`]
      }
    }));
    /* istanbul ignore next */
    cov_25xfespcq0().s[46]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_25xfespcq0().b[9][0]++;
      cov_25xfespcq0().s[47]++;
      throw new Error(`Failed to fetch wishlists: ${response.status}`);
    } else
    /* istanbul ignore next */
    {
      cov_25xfespcq0().b[9][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[48]++, await response.json());
    /* istanbul ignore next */
    cov_25xfespcq0().s[49]++;
    return {
      success: true,
      data:
      /* istanbul ignore next */
      (cov_25xfespcq0().b[10][0]++, data.data) ||
      /* istanbul ignore next */
      (cov_25xfespcq0().b[10][1]++, data)
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_25xfespcq0().s[50]++;
    console.error("Error fetching wishlists:", error);
    /* istanbul ignore next */
    cov_25xfespcq0().s[51]++;
    return {
      success: false,
      error: "Failed to load wishlists. Please try again.",
      data: []
    };
  }
}
async function getWishlistByIdAction(wishlistId) {
  /* istanbul ignore next */
  cov_25xfespcq0().f[17]++;
  cov_25xfespcq0().s[52]++;
  try {
    const token =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[53]++, await getAuthToken());
    /* istanbul ignore next */
    cov_25xfespcq0().s[54]++;
    if (!token) {
      /* istanbul ignore next */
      cov_25xfespcq0().b[11][0]++;
      cov_25xfespcq0().s[55]++;
      return {
        success: false,
        error: "Authentication required",
        data: null
      };
    } else
    /* istanbul ignore next */
    {
      cov_25xfespcq0().b[11][1]++;
    }
    const response =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[56]++, await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/v1/wishlists/${wishlistId}`, {
      headers: {
        "Authorization": `Bearer ${token}`
      },
      next: {
        revalidate: 300,
        tags: ["wishlists", `wishlist-${wishlistId}`]
      }
    }));
    /* istanbul ignore next */
    cov_25xfespcq0().s[57]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_25xfespcq0().b[12][0]++;
      cov_25xfespcq0().s[58]++;
      if (response.status === 404) {
        /* istanbul ignore next */
        cov_25xfespcq0().b[13][0]++;
        cov_25xfespcq0().s[59]++;
        return {
          success: false,
          error: "Wishlist not found",
          data: null
        };
      } else
      /* istanbul ignore next */
      {
        cov_25xfespcq0().b[13][1]++;
      }
      cov_25xfespcq0().s[60]++;
      throw new Error(`Failed to fetch wishlist: ${response.status}`);
    } else
    /* istanbul ignore next */
    {
      cov_25xfespcq0().b[12][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[61]++, await response.json());
    /* istanbul ignore next */
    cov_25xfespcq0().s[62]++;
    return {
      success: true,
      data:
      /* istanbul ignore next */
      (cov_25xfespcq0().b[14][0]++, data.data) ||
      /* istanbul ignore next */
      (cov_25xfespcq0().b[14][1]++, data)
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_25xfespcq0().s[63]++;
    console.error("Error fetching wishlist:", error);
    /* istanbul ignore next */
    cov_25xfespcq0().s[64]++;
    return {
      success: false,
      error: "Failed to load wishlist. Please try again.",
      data: null
    };
  }
}
async function updateWishlistAction(data) {
  /* istanbul ignore next */
  cov_25xfespcq0().f[18]++;
  cov_25xfespcq0().s[65]++;
  try {
    const token =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[66]++, await getAuthToken());
    /* istanbul ignore next */
    cov_25xfespcq0().s[67]++;
    if (!token) {
      /* istanbul ignore next */
      cov_25xfespcq0().b[15][0]++;
      cov_25xfespcq0().s[68]++;
      return {
        success: false,
        error: "Please sign in to update wishlists"
      };
    } else
    /* istanbul ignore next */
    {
      cov_25xfespcq0().b[15][1]++;
    }
    // Validate input
    cov_25xfespcq0().s[69]++;
    if (
    /* istanbul ignore next */
    (cov_25xfespcq0().b[17][0]++, data.name !== undefined) && (
    /* istanbul ignore next */
    (cov_25xfespcq0().b[17][1]++, !data.name) ||
    /* istanbul ignore next */
    (cov_25xfespcq0().b[17][2]++, data.name.trim().length === 0))) {
      /* istanbul ignore next */
      cov_25xfespcq0().b[16][0]++;
      cov_25xfespcq0().s[70]++;
      return {
        success: false,
        error: "Wishlist name is required"
      };
    } else
    /* istanbul ignore next */
    {
      cov_25xfespcq0().b[16][1]++;
    }
    cov_25xfespcq0().s[71]++;
    if (
    /* istanbul ignore next */
    (cov_25xfespcq0().b[19][0]++, data.name) &&
    /* istanbul ignore next */
    (cov_25xfespcq0().b[19][1]++, data.name.length > 100)) {
      /* istanbul ignore next */
      cov_25xfespcq0().b[18][0]++;
      cov_25xfespcq0().s[72]++;
      return {
        success: false,
        error: "Wishlist name must be 100 characters or less"
      };
    } else
    /* istanbul ignore next */
    {
      cov_25xfespcq0().b[18][1]++;
    }
    const updateData =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[73]++, {});
    /* istanbul ignore next */
    cov_25xfespcq0().s[74]++;
    if (data.name !== undefined) {
      /* istanbul ignore next */
      cov_25xfespcq0().b[20][0]++;
      cov_25xfespcq0().s[75]++;
      updateData.name = data.name.trim();
    } else
    /* istanbul ignore next */
    {
      cov_25xfespcq0().b[20][1]++;
    }
    cov_25xfespcq0().s[76]++;
    if (data.description !== undefined) {
      /* istanbul ignore next */
      cov_25xfespcq0().b[21][0]++;
      cov_25xfespcq0().s[77]++;
      updateData.description =
      /* istanbul ignore next */
      (cov_25xfespcq0().b[22][0]++, data.description?.trim()) ||
      /* istanbul ignore next */
      (cov_25xfespcq0().b[22][1]++, null);
    } else
    /* istanbul ignore next */
    {
      cov_25xfespcq0().b[21][1]++;
    }
    cov_25xfespcq0().s[78]++;
    if (data.is_public !== undefined) {
      /* istanbul ignore next */
      cov_25xfespcq0().b[23][0]++;
      cov_25xfespcq0().s[79]++;
      updateData.is_public = data.is_public;
    } else
    /* istanbul ignore next */
    {
      cov_25xfespcq0().b[23][1]++;
    }
    const response =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[80]++, await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/v1/wishlists/${data.wishlistId}`, {
      method: "PUT",
      headers: {
        "Content-Type": "application/json",
        "Authorization": `Bearer ${token}`
      },
      body: JSON.stringify(updateData)
    }));
    /* istanbul ignore next */
    cov_25xfespcq0().s[81]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_25xfespcq0().b[24][0]++;
      cov_25xfespcq0().s[82]++;
      throw new Error(`Failed to update wishlist: ${response.status}`);
    } else
    /* istanbul ignore next */
    {
      cov_25xfespcq0().b[24][1]++;
    }
    const wishlist =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[83]++, await response.json());
    // Revalidate caches
    /* istanbul ignore next */
    cov_25xfespcq0().s[84]++;
    (0, _cache.revalidateTag)("wishlists");
    /* istanbul ignore next */
    cov_25xfespcq0().s[85]++;
    (0, _cache.revalidateTag)(`wishlist-${data.wishlistId}`);
    /* istanbul ignore next */
    cov_25xfespcq0().s[86]++;
    (0, _cache.revalidatePath)("/wishlists");
    /* istanbul ignore next */
    cov_25xfespcq0().s[87]++;
    (0, _cache.revalidatePath)(`/wishlists/${data.wishlistId}`);
    /* istanbul ignore next */
    cov_25xfespcq0().s[88]++;
    return {
      success: true,
      data: wishlist,
      message: "Wishlist updated successfully!"
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_25xfespcq0().s[89]++;
    console.error("Error updating wishlist:", error);
    /* istanbul ignore next */
    cov_25xfespcq0().s[90]++;
    return {
      success: false,
      error: "Failed to update wishlist. Please try again."
    };
  }
}
async function deleteWishlistAction(wishlistId) {
  /* istanbul ignore next */
  cov_25xfespcq0().f[19]++;
  cov_25xfespcq0().s[91]++;
  try {
    const token =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[92]++, await getAuthToken());
    /* istanbul ignore next */
    cov_25xfespcq0().s[93]++;
    if (!token) {
      /* istanbul ignore next */
      cov_25xfespcq0().b[25][0]++;
      cov_25xfespcq0().s[94]++;
      return {
        success: false,
        error: "Authentication required"
      };
    } else
    /* istanbul ignore next */
    {
      cov_25xfespcq0().b[25][1]++;
    }
    const response =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[95]++, await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/v1/wishlists/${wishlistId}`, {
      method: "DELETE",
      headers: {
        "Authorization": `Bearer ${token}`
      }
    }));
    /* istanbul ignore next */
    cov_25xfespcq0().s[96]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_25xfespcq0().b[26][0]++;
      cov_25xfespcq0().s[97]++;
      throw new Error(`Failed to delete wishlist: ${response.status}`);
    } else
    /* istanbul ignore next */
    {
      cov_25xfespcq0().b[26][1]++;
    }
    // Revalidate caches
    cov_25xfespcq0().s[98]++;
    (0, _cache.revalidateTag)("wishlists");
    /* istanbul ignore next */
    cov_25xfespcq0().s[99]++;
    (0, _cache.revalidateTag)(`wishlist-${wishlistId}`);
    /* istanbul ignore next */
    cov_25xfespcq0().s[100]++;
    (0, _cache.revalidatePath)("/wishlists");
    /* istanbul ignore next */
    cov_25xfespcq0().s[101]++;
    return {
      success: true,
      message: "Wishlist deleted successfully!"
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_25xfespcq0().s[102]++;
    console.error("Error deleting wishlist:", error);
    /* istanbul ignore next */
    cov_25xfespcq0().s[103]++;
    return {
      success: false,
      error: "Failed to delete wishlist. Please try again."
    };
  }
}
async function addToWishlistAction(data) {
  /* istanbul ignore next */
  cov_25xfespcq0().f[20]++;
  cov_25xfespcq0().s[104]++;
  try {
    const token =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[105]++, await getAuthToken());
    /* istanbul ignore next */
    cov_25xfespcq0().s[106]++;
    if (!token) {
      /* istanbul ignore next */
      cov_25xfespcq0().b[27][0]++;
      cov_25xfespcq0().s[107]++;
      return {
        success: false,
        error: "Please sign in to add items to wishlists"
      };
    } else
    /* istanbul ignore next */
    {
      cov_25xfespcq0().b[27][1]++;
    }
    const response =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[108]++, await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/v1/wishlists/${data.wishlistId}/products`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Authorization": `Bearer ${token}`
      },
      body: JSON.stringify({
        product_id: data.productId,
        notes:
        /* istanbul ignore next */
        (cov_25xfespcq0().b[28][0]++, data.notes?.trim()) ||
        /* istanbul ignore next */
        (cov_25xfespcq0().b[28][1]++, null),
        priority:
        /* istanbul ignore next */
        (cov_25xfespcq0().b[29][0]++, data.priority) ||
        /* istanbul ignore next */
        (cov_25xfespcq0().b[29][1]++, "medium")
      })
    }));
    /* istanbul ignore next */
    cov_25xfespcq0().s[109]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_25xfespcq0().b[30][0]++;
      cov_25xfespcq0().s[110]++;
      if (response.status === 409) {
        /* istanbul ignore next */
        cov_25xfespcq0().b[31][0]++;
        cov_25xfespcq0().s[111]++;
        return {
          success: false,
          error: "Product is already in this wishlist"
        };
      } else
      /* istanbul ignore next */
      {
        cov_25xfespcq0().b[31][1]++;
      }
      cov_25xfespcq0().s[112]++;
      throw new Error(`Failed to add to wishlist: ${response.status}`);
    } else
    /* istanbul ignore next */
    {
      cov_25xfespcq0().b[30][1]++;
    }
    // Revalidate caches
    cov_25xfespcq0().s[113]++;
    (0, _cache.revalidateTag)("wishlists");
    /* istanbul ignore next */
    cov_25xfespcq0().s[114]++;
    (0, _cache.revalidateTag)(`wishlist-${data.wishlistId}`);
    /* istanbul ignore next */
    cov_25xfespcq0().s[115]++;
    (0, _cache.revalidatePath)(`/wishlists/${data.wishlistId}`);
    /* istanbul ignore next */
    cov_25xfespcq0().s[116]++;
    return {
      success: true,
      message: "Product added to wishlist!"
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_25xfespcq0().s[117]++;
    console.error("Error adding to wishlist:", error);
    /* istanbul ignore next */
    cov_25xfespcq0().s[118]++;
    return {
      success: false,
      error: "Failed to add product to wishlist. Please try again."
    };
  }
}
async function removeFromWishlistAction(wishlistId, productId) {
  /* istanbul ignore next */
  cov_25xfespcq0().f[21]++;
  cov_25xfespcq0().s[119]++;
  try {
    const token =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[120]++, await getAuthToken());
    /* istanbul ignore next */
    cov_25xfespcq0().s[121]++;
    if (!token) {
      /* istanbul ignore next */
      cov_25xfespcq0().b[32][0]++;
      cov_25xfespcq0().s[122]++;
      return {
        success: false,
        error: "Authentication required"
      };
    } else
    /* istanbul ignore next */
    {
      cov_25xfespcq0().b[32][1]++;
    }
    const response =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[123]++, await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/v1/wishlists/${wishlistId}/products/${productId}`, {
      method: "DELETE",
      headers: {
        "Authorization": `Bearer ${token}`
      }
    }));
    /* istanbul ignore next */
    cov_25xfespcq0().s[124]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_25xfespcq0().b[33][0]++;
      cov_25xfespcq0().s[125]++;
      throw new Error(`Failed to remove from wishlist: ${response.status}`);
    } else
    /* istanbul ignore next */
    {
      cov_25xfespcq0().b[33][1]++;
    }
    // Revalidate caches
    cov_25xfespcq0().s[126]++;
    (0, _cache.revalidateTag)("wishlists");
    /* istanbul ignore next */
    cov_25xfespcq0().s[127]++;
    (0, _cache.revalidateTag)(`wishlist-${wishlistId}`);
    /* istanbul ignore next */
    cov_25xfespcq0().s[128]++;
    (0, _cache.revalidatePath)(`/wishlists/${wishlistId}`);
    /* istanbul ignore next */
    cov_25xfespcq0().s[129]++;
    return {
      success: true,
      message: "Product removed from wishlist!"
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_25xfespcq0().s[130]++;
    console.error("Error removing from wishlist:", error);
    /* istanbul ignore next */
    cov_25xfespcq0().s[131]++;
    return {
      success: false,
      error: "Failed to remove product from wishlist. Please try again."
    };
  }
}
async function generateShareLinkAction(wishlistId) {
  /* istanbul ignore next */
  cov_25xfespcq0().f[22]++;
  cov_25xfespcq0().s[132]++;
  try {
    const token =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[133]++, await getAuthToken());
    /* istanbul ignore next */
    cov_25xfespcq0().s[134]++;
    if (!token) {
      /* istanbul ignore next */
      cov_25xfespcq0().b[34][0]++;
      cov_25xfespcq0().s[135]++;
      return {
        success: false,
        error: "Authentication required"
      };
    } else
    /* istanbul ignore next */
    {
      cov_25xfespcq0().b[34][1]++;
    }
    const response =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[136]++, await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/v1/wishlists/${wishlistId}/share`, {
      method: "POST",
      headers: {
        "Authorization": `Bearer ${token}`
      }
    }));
    /* istanbul ignore next */
    cov_25xfespcq0().s[137]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_25xfespcq0().b[35][0]++;
      cov_25xfespcq0().s[138]++;
      throw new Error(`Failed to generate share link: ${response.status}`);
    } else
    /* istanbul ignore next */
    {
      cov_25xfespcq0().b[35][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[139]++, await response.json());
    // Revalidate wishlist cache
    /* istanbul ignore next */
    cov_25xfespcq0().s[140]++;
    (0, _cache.revalidateTag)(`wishlist-${wishlistId}`);
    /* istanbul ignore next */
    cov_25xfespcq0().s[141]++;
    return {
      success: true,
      data: {
        shareToken: data.share_token,
        shareUrl: `${process.env.NEXT_PUBLIC_WEB_URL}/wishlists/${wishlistId}/share/${data.share_token}`
      },
      message: "Share link generated successfully!"
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_25xfespcq0().s[142]++;
    console.error("Error generating share link:", error);
    /* istanbul ignore next */
    cov_25xfespcq0().s[143]++;
    return {
      success: false,
      error: "Failed to generate share link. Please try again."
    };
  }
}
async function getSharedWishlistAction(wishlistId, shareToken) {
  /* istanbul ignore next */
  cov_25xfespcq0().f[23]++;
  cov_25xfespcq0().s[144]++;
  try {
    const response =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[145]++, await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/v1/wishlists/${wishlistId}/shared/${shareToken}`, {
      next: {
        revalidate: 600,
        tags: ["shared-wishlist", `shared-wishlist-${wishlistId}`]
      }
    }));
    /* istanbul ignore next */
    cov_25xfespcq0().s[146]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_25xfespcq0().b[36][0]++;
      cov_25xfespcq0().s[147]++;
      if (response.status === 404) {
        /* istanbul ignore next */
        cov_25xfespcq0().b[37][0]++;
        cov_25xfespcq0().s[148]++;
        return {
          success: false,
          error: "Shared wishlist not found or link has expired",
          data: null
        };
      } else
      /* istanbul ignore next */
      {
        cov_25xfespcq0().b[37][1]++;
      }
      cov_25xfespcq0().s[149]++;
      throw new Error(`Failed to fetch shared wishlist: ${response.status}`);
    } else
    /* istanbul ignore next */
    {
      cov_25xfespcq0().b[36][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[150]++, await response.json());
    /* istanbul ignore next */
    cov_25xfespcq0().s[151]++;
    return {
      success: true,
      data:
      /* istanbul ignore next */
      (cov_25xfespcq0().b[38][0]++, data.data) ||
      /* istanbul ignore next */
      (cov_25xfespcq0().b[38][1]++, data)
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_25xfespcq0().s[152]++;
    console.error("Error fetching shared wishlist:", error);
    /* istanbul ignore next */
    cov_25xfespcq0().s[153]++;
    return {
      success: false,
      error: "Failed to load shared wishlist. Please try again.",
      data: null
    };
  }
}
async function generateAffiliateLinksAction(productIds) {
  /* istanbul ignore next */
  cov_25xfespcq0().f[24]++;
  cov_25xfespcq0().s[154]++;
  try {
    const token =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[155]++, await getAuthToken());
    /* istanbul ignore next */
    cov_25xfespcq0().s[156]++;
    if (!token) {
      /* istanbul ignore next */
      cov_25xfespcq0().b[39][0]++;
      cov_25xfespcq0().s[157]++;
      return {
        success: false,
        error: "Authentication required",
        data: {}
      };
    } else
    /* istanbul ignore next */
    {
      cov_25xfespcq0().b[39][1]++;
    }
    const response =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[158]++, await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/v1/affiliate/generate`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Authorization": `Bearer ${token}`
      },
      body: JSON.stringify({
        product_ids: productIds,
        affiliate_tag: process.env.AMAZON_AFFILIATE_TAG,
        campaign: "wishlist_sharing"
      })
    }));
    /* istanbul ignore next */
    cov_25xfespcq0().s[159]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_25xfespcq0().b[40][0]++;
      cov_25xfespcq0().s[160]++;
      throw new Error(`Failed to generate affiliate links: ${response.status}`);
    } else
    /* istanbul ignore next */
    {
      cov_25xfespcq0().b[40][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_25xfespcq0().s[161]++, await response.json());
    /* istanbul ignore next */
    cov_25xfespcq0().s[162]++;
    return {
      success: true,
      data:
      /* istanbul ignore next */
      (cov_25xfespcq0().b[41][0]++, data.affiliate_links) ||
      /* istanbul ignore next */
      (cov_25xfespcq0().b[41][1]++, {})
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_25xfespcq0().s[163]++;
    console.error("Error generating affiliate links:", error);
    /* istanbul ignore next */
    cov_25xfespcq0().s[164]++;
    return {
      success: false,
      error: "Failed to generate affiliate links. Using direct links instead.",
      data: {}
    };
  }
}
async function trackAffiliateClickAction(data) {
  /* istanbul ignore next */
  cov_25xfespcq0().f[25]++;
  cov_25xfespcq0().s[165]++;
  try {
    /* istanbul ignore next */
    cov_25xfespcq0().s[166]++;
    // This is fire-and-forget analytics tracking
    fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/v1/affiliate/track`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        product_id: data.productId,
        wishlist_id: data.wishlistId,
        source: data.source,
        campaign: data.campaign,
        timestamp: new Date().toISOString()
      })
    }).catch(error => {
      /* istanbul ignore next */
      cov_25xfespcq0().f[26]++;
      cov_25xfespcq0().s[167]++;
      console.error("Error tracking affiliate click:", error);
    });
    /* istanbul ignore next */
    cov_25xfespcq0().s[168]++;
    return {
      success: true
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_25xfespcq0().s[169]++;
    console.error("Error tracking affiliate click:", error);
    /* istanbul ignore next */
    cov_25xfespcq0().s[170]++;
    return {
      success: false
    };
  }
}
async function refreshWishlistCacheAction() {
  /* istanbul ignore next */
  cov_25xfespcq0().f[27]++;
  cov_25xfespcq0().s[171]++;
  try {
    /* istanbul ignore next */
    cov_25xfespcq0().s[172]++;
    (0, _cache.revalidateTag)("wishlists");
    /* istanbul ignore next */
    cov_25xfespcq0().s[173]++;
    (0, _cache.revalidateTag)("shared-wishlist");
    /* istanbul ignore next */
    cov_25xfespcq0().s[174]++;
    (0, _cache.revalidatePath)("/wishlists");
    /* istanbul ignore next */
    cov_25xfespcq0().s[175]++;
    return {
      success: true,
      message: "Wishlist cache refreshed successfully!"
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_25xfespcq0().s[176]++;
    console.error("Error refreshing wishlist cache:", error);
    /* istanbul ignore next */
    cov_25xfespcq0().s[177]++;
    return {
      success: false,
      error: "Failed to refresh cache. Please try again."
    };
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,