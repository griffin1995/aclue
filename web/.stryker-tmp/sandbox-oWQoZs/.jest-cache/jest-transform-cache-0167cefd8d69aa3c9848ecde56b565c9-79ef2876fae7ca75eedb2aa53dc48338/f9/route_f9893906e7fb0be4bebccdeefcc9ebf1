08e61c21e442cb3959b748ca2e6a6b31
"use strict";

/* istanbul ignore next */
function cov_w8qxapg25() {
  var path = "/home/jack/Documents/aclue-preprod/web/src/app/api/newsletter/signup/route.ts";
  var hash = "866ca9a66c84614aaa15e62803b28ad9f64ffd61";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/jack/Documents/aclue-preprod/web/src/app/api/newsletter/signup/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 20
        }
      },
      "6": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "7": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 33
        }
      },
      "8": {
        start: {
          line: 21,
          column: 13
        },
        end: {
          line: 21,
          column: 27
        }
      },
      "9": {
        start: {
          line: 22,
          column: 36
        },
        end: {
          line: 22,
          column: 115
        }
      },
      "10": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 6
        }
      },
      "11": {
        start: {
          line: 45,
          column: 15
        },
        end: {
          line: 45,
          column: 61
        }
      },
      "12": {
        start: {
          line: 47,
          column: 25
        },
        end: {
          line: 50,
          column: 2
        }
      },
      "13": {
        start: {
          line: 48,
          column: 156
        },
        end: {
          line: 48,
          column: 182
        }
      },
      "14": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 198,
          column: 5
        }
      },
      "15": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 71
        }
      },
      "16": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "17": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 61
        }
      },
      "18": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 63,
          column: 15
        }
      },
      "19": {
        start: {
          line: 66,
          column: 21
        },
        end: {
          line: 66,
          column: 41
        }
      },
      "20": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 70,
          column: 11
        }
      },
      "21": {
        start: {
          line: 71,
          column: 33
        },
        end: {
          line: 71,
          column: 65
        }
      },
      "22": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "23": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 92
        }
      },
      "24": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 81,
          column: 15
        }
      },
      "25": {
        start: {
          line: 83,
          column: 34
        },
        end: {
          line: 83,
          column: 55
        }
      },
      "26": {
        start: {
          line: 85,
          column: 26
        },
        end: {
          line: 85,
          column: 72
        }
      },
      "27": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 80
        }
      },
      "28": {
        start: {
          line: 88,
          column: 55
        },
        end: {
          line: 113,
          column: 10
        }
      },
      "29": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "30": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 72
        }
      },
      "31": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 123,
          column: 15
        }
      },
      "32": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 69
        }
      },
      "33": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 164,
          column: 9
        }
      },
      "34": {
        start: {
          line: 131,
          column: 47
        },
        end: {
          line: 154,
          column: 14
        }
      },
      "35": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 160,
          column: 13
        }
      },
      "36": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 79
        }
      },
      "37": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 159,
          column: 70
        }
      },
      "38": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 69
        }
      },
      "39": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 177,
          column: 11
        }
      },
      "40": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 70
        }
      },
      "41": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "42": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 188,
          column: 15
        }
      },
      "43": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 197,
          column: 11
        }
      },
      "44": {
        start: {
          line: 201,
          column: 4
        },
        end: {
          line: 217,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 10
          }
        },
        loc: {
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 10
          },
          end: {
            line: 15,
            column: 11
          }
        },
        loc: {
          start: {
            line: 15,
            column: 21
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 33
          }
        },
        loc: {
          start: {
            line: 23,
            column: 39
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 48,
            column: 147
          },
          end: {
            line: 48,
            column: 148
          }
        },
        loc: {
          start: {
            line: 48,
            column: 156
          },
          end: {
            line: 48,
            column: 182
          }
        },
        line: 48
      },
      "5": {
        name: "POST",
        decl: {
          start: {
            line: 51,
            column: 15
          },
          end: {
            line: 51,
            column: 19
          }
        },
        loc: {
          start: {
            line: 51,
            column: 29
          },
          end: {
            line: 199,
            column: 1
          }
        },
        line: 51
      },
      "6": {
        name: "GET",
        decl: {
          start: {
            line: 200,
            column: 15
          },
          end: {
            line: 200,
            column: 18
          }
        },
        loc: {
          start: {
            line: 200,
            column: 21
          },
          end: {
            line: 218,
            column: 1
          }
        },
        line: 200
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 35
          },
          end: {
            line: 24,
            column: 38
          }
        }, {
          start: {
            line: 24,
            column: 41
          },
          end: {
            line: 26,
            column: 5
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 24,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 24,
            column: 14
          }
        }, {
          start: {
            line: 24,
            column: 18
          },
          end: {
            line: 24,
            column: 32
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "3": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "4": {
        loc: {
          start: {
            line: 85,
            column: 26
          },
          end: {
            line: 85,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 26
          },
          end: {
            line: 85,
            column: 59
          }
        }, {
          start: {
            line: 85,
            column: 63
          },
          end: {
            line: 85,
            column: 72
          }
        }],
        line: 85
      },
      "5": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "6": {
        loc: {
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 160,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 160,
            column: 13
          }
        }, {
          start: {
            line: 158,
            column: 19
          },
          end: {
            line: 160,
            column: 13
          }
        }],
        line: 155
      },
      "7": {
        loc: {
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "8": {
        loc: {
          start: {
            line: 194,
            column: 21
          },
          end: {
            line: 194,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 194,
            column: 62
          },
          end: {
            line: 194,
            column: 75
          }
        }, {
          start: {
            line: 194,
            column: 78
          },
          end: {
            line: 194,
            column: 87
          }
        }],
        line: 194
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/jack/Documents/aclue-preprod/web/src/app/api/newsletter/signup/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server'\nimport { Resend } from 'resend'\nimport { z } from 'zod'\nimport WelcomeEmail from '@/components/emails/WelcomeEmail'\n\n/**\n * Newsletter Signup API Route - Direct Resend Integration\n * \n * This API route handles newsletter signups using Resend directly from Next.js,\n * bypassing the FastAPI backend for improved reliability and performance.\n * \n * Features:\n * - Direct Resend SDK integration\n * - React email templates with aclue branding\n * - Input validation with Zod\n * - Comprehensive error handling\n * - Source tracking for analytics\n * - British English content and responses\n * \n * Based on official Resend documentation patterns:\n * https://resend.com/docs/send-with-nextjs\n */\n\n// Initialize Resend client\nconst resend = new Resend(process.env.RESEND_API_KEY)\n\n// Input validation schema\nconst newsletterSchema = z.object({\n  email: z\n    .string()\n    .min(1, 'Email is required')\n    .email('Please enter a valid email address')\n    .max(320, 'Email address is too long')\n    .transform(email => email.toLowerCase().trim()),\n  source: z.string().optional().default('maintenance_page_direct'),\n})\n\n/**\n * POST /api/newsletter/signup\n * \n * Handles newsletter signup requests with direct Resend integration.\n * Sends welcome email using React email template.\n */\nexport async function POST(request: NextRequest) {\n  try {\n    console.log('\uD83D\uDCE7 Newsletter signup API route called')\n\n    // Check if Resend API key is configured\n    if (!process.env.RESEND_API_KEY) {\n      console.error('\u274C RESEND_API_KEY not configured')\n      return NextResponse.json(\n        { \n          success: false, \n          error: 'Email service not configured. Please try again later.',\n          code: 'CONFIGURATION_ERROR'\n        },\n        { status: 500 }\n      )\n    }\n\n    // Parse and validate request body\n    const body = await request.json()\n    console.log('\uD83D\uDCCB Newsletter signup data:', { email: body.email, source: body.source })\n\n    const validationResult = newsletterSchema.safeParse(body)\n\n    if (!validationResult.success) {\n      console.error('\u274C Newsletter validation failed:', validationResult.error.errors)\n      return NextResponse.json(\n        {\n          success: false,\n          error: 'Invalid email address format',\n          code: 'VALIDATION_ERROR',\n          details: validationResult.error.errors,\n        },\n        { status: 400 }\n      )\n    }\n\n    const { email, source } = validationResult.data\n\n    // Get user agent for tracking\n    const userAgent = request.headers.get('user-agent') || 'Unknown'\n    \n    console.log('\uD83C\uDF10 Sending welcome email via Resend to:', email)\n\n    // Send welcome email using Resend\n    const { data: emailData, error: emailError } = await resend.emails.send({\n      from: 'aclue <noreply@aclue.app>',\n      to: [email],\n      subject: 'Welcome to aclue - AI-Powered Gift Discovery! \uD83C\uDF81',\n      react: WelcomeEmail({ email, source }),\n      // Also provide HTML fallback for email clients that don't support React\n      html: `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n          <div style=\"background: linear-gradient(135deg, #3b82f6, #8b5cf6); color: white; padding: 30px; text-align: center;\">\n            <h2>Welcome to aclue! \uD83D\uDE80</h2>\n            <p>AI-Powered Gift Discovery</p>\n          </div>\n          <div style=\"padding: 30px; background: #f8fafc;\">\n            <h3>Thank you for joining our community!</h3>\n            <p>You're among the first to experience how AI can revolutionise gift-giving.</p>\n            <p>We'll keep you updated on our progress and notify you when our AI is ready to transform your gift-giving experience.</p>\n            <p>Excited to have you on board,<br>The aclue Team</p>\n          </div>\n        </div>\n      `,\n    })\n\n    if (emailError) {\n      console.error('\u274C Resend email sending failed:', emailError)\n      return NextResponse.json(\n        {\n          success: false,\n          error: 'Failed to send welcome email. Please try again.',\n          code: 'EMAIL_SEND_ERROR',\n          details: emailError,\n        },\n        { status: 500 }\n      )\n    }\n\n    console.log('\u2705 Welcome email sent successfully:', emailData)\n\n    // Optional: Store subscriber in database\n    // This could be added later if local storage is needed\n    // await storeNewsletterSubscriber(email, source, userAgent)\n\n    // Send admin notification (optional)\n    try {\n      const { error: adminEmailError } = await resend.emails.send({\n        from: 'aclue <noreply@aclue.app>',\n        to: ['contact@aclue.app'],\n        subject: `New Newsletter Signup: ${email}`,\n        html: `\n          <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n            <div style=\"background: #1f2937; color: white; padding: 20px; text-align: center;\">\n              <h2>\uD83C\uDF89 New Newsletter Signup - aclue</h2>\n            </div>\n            <div style=\"padding: 20px; background: #f9fafb;\">\n              <p>A new user has signed up for the aclue newsletter!</p>\n              <div style=\"background: white; padding: 15px; border-left: 4px solid #3b82f6; margin: 15px 0;\">\n                <p><strong>Email:</strong> ${email}</p>\n                <p><strong>Source:</strong> ${source}</p>\n                <p><strong>Timestamp:</strong> ${new Date().toISOString()}</p>\n                <p><strong>User Agent:</strong> ${userAgent}</p>\n              </div>\n              <p>The subscriber has been automatically sent a welcome email.</p>\n            </div>\n          </div>\n        `,\n      })\n\n      if (adminEmailError) {\n        console.warn('\u26A0\uFE0F Admin notification failed:', adminEmailError)\n        // Don't fail the main request if admin notification fails\n      } else {\n        console.log('\u2705 Admin notification sent successfully')\n      }\n    } catch (adminError) {\n      console.warn('\u26A0\uFE0F Admin notification error:', adminError)\n      // Don't fail the main request if admin notification fails\n    }\n\n    // Return success response\n    return NextResponse.json(\n      {\n        success: true,\n        message: \"Thank you! You're now on our mailing list and will be among the first to experience our AI-powered gift discovery platform.\",\n        code: 'SIGNUP_SUCCESS',\n        data: {\n          email,\n          source,\n          timestamp: new Date().toISOString(),\n        },\n      },\n      { status: 200 }\n    )\n\n  } catch (error: any) {\n    console.error('\uD83D\uDCA5 Newsletter signup error:', error)\n\n    // Enhanced error classification\n    if (error.name === 'SyntaxError') {\n      return NextResponse.json(\n        {\n          success: false,\n          error: 'Invalid request format',\n          code: 'INVALID_JSON',\n        },\n        { status: 400 }\n      )\n    }\n\n    return NextResponse.json(\n      {\n        success: false,\n        error: 'An unexpected error occurred. Please try again.',\n        code: 'UNKNOWN_ERROR',\n        details: process.env.NODE_ENV === 'development' ? error.message : undefined,\n      },\n      { status: 500 }\n    )\n  }\n}\n\n/**\n * GET /api/newsletter/signup\n * \n * Returns information about the newsletter signup endpoint.\n * Useful for health checks and documentation.\n */\nexport async function GET() {\n  return NextResponse.json(\n    {\n      endpoint: '/api/newsletter/signup',\n      method: 'POST',\n      description: 'Newsletter signup with direct Resend integration',\n      version: '1.0.0',\n      status: 'operational',\n      provider: 'Resend',\n      features: [\n        'Direct Resend SDK integration',\n        'React email templates',\n        'Input validation with Zod',\n        'Admin notifications',\n        'Source tracking',\n      ],\n    },\n    { status: 200 }\n  )\n}"],
      names: ["GET", "POST", "resend", "Resend", "process", "env", "RESEND_API_KEY", "newsletterSchema", "z", "object", "email", "string", "min", "max", "transform", "toLowerCase", "trim", "source", "optional", "default", "request", "console", "log", "error", "NextResponse", "json", "success", "code", "status", "body", "validationResult", "safeParse", "errors", "details", "data", "userAgent", "headers", "get", "emailData", "emailError", "emails", "send", "from", "to", "subject", "react", "WelcomeEmail", "html", "adminEmailError", "Date", "toISOString", "warn", "adminError", "message", "timestamp", "name", "NODE_ENV", "undefined", "endpoint", "method", "description", "version", "provider", "features"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "866ca9a66c84614aaa15e62803b28ad9f64ffd61"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_w8qxapg25 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_w8qxapg25();
cov_w8qxapg25().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_w8qxapg25().f[0]++;
  cov_w8qxapg25().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_w8qxapg25().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_w8qxapg25().s[3]++;
_export(exports, {
  GET: function () {
    /* istanbul ignore next */
    cov_w8qxapg25().f[1]++;
    cov_w8qxapg25().s[4]++;
    return GET;
  },
  POST: function () {
    /* istanbul ignore next */
    cov_w8qxapg25().f[2]++;
    cov_w8qxapg25().s[5]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_w8qxapg25().s[6]++, require("next/server"));
const _resend =
/* istanbul ignore next */
(cov_w8qxapg25().s[7]++, require("resend"));
const _zod =
/* istanbul ignore next */
(cov_w8qxapg25().s[8]++, require("zod"));
const _WelcomeEmail =
/* istanbul ignore next */
(/*#__PURE__*/cov_w8qxapg25().s[9]++, _interop_require_default(require("../../../../components/emails/WelcomeEmail")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_w8qxapg25().f[3]++;
  cov_w8qxapg25().s[10]++;
  return /* istanbul ignore next */(cov_w8qxapg25().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_w8qxapg25().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_w8qxapg25().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_w8qxapg25().b[0][1]++, {
    default: obj
  });
}
/**
 * Newsletter Signup API Route - Direct Resend Integration
 * 
 * This API route handles newsletter signups using Resend directly from Next.js,
 * bypassing the FastAPI backend for improved reliability and performance.
 * 
 * Features:
 * - Direct Resend SDK integration
 * - React email templates with aclue branding
 * - Input validation with Zod
 * - Comprehensive error handling
 * - Source tracking for analytics
 * - British English content and responses
 * 
 * Based on official Resend documentation patterns:
 * https://resend.com/docs/send-with-nextjs
 */ // Initialize Resend client
const resend =
/* istanbul ignore next */
(cov_w8qxapg25().s[11]++, new _resend.Resend(process.env.RESEND_API_KEY));
// Input validation schema
const newsletterSchema =
/* istanbul ignore next */
(cov_w8qxapg25().s[12]++, _zod.z.object({
  email: _zod.z.string().min(1, "Email is required").email("Please enter a valid email address").max(320, "Email address is too long").transform(email => {
    /* istanbul ignore next */
    cov_w8qxapg25().f[4]++;
    cov_w8qxapg25().s[13]++;
    return email.toLowerCase().trim();
  }),
  source: _zod.z.string().optional().default("maintenance_page_direct")
}));
async function POST(request) {
  /* istanbul ignore next */
  cov_w8qxapg25().f[5]++;
  cov_w8qxapg25().s[14]++;
  try {
    /* istanbul ignore next */
    cov_w8qxapg25().s[15]++;
    console.log("\uD83D\uDCE7 Newsletter signup API route called");
    // Check if Resend API key is configured
    /* istanbul ignore next */
    cov_w8qxapg25().s[16]++;
    if (!process.env.RESEND_API_KEY) {
      /* istanbul ignore next */
      cov_w8qxapg25().b[2][0]++;
      cov_w8qxapg25().s[17]++;
      console.error("❌ RESEND_API_KEY not configured");
      /* istanbul ignore next */
      cov_w8qxapg25().s[18]++;
      return _server.NextResponse.json({
        success: false,
        error: "Email service not configured. Please try again later.",
        code: "CONFIGURATION_ERROR"
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_w8qxapg25().b[2][1]++;
    }
    // Parse and validate request body
    const body =
    /* istanbul ignore next */
    (cov_w8qxapg25().s[19]++, await request.json());
    /* istanbul ignore next */
    cov_w8qxapg25().s[20]++;
    console.log("\uD83D\uDCCB Newsletter signup data:", {
      email: body.email,
      source: body.source
    });
    const validationResult =
    /* istanbul ignore next */
    (cov_w8qxapg25().s[21]++, newsletterSchema.safeParse(body));
    /* istanbul ignore next */
    cov_w8qxapg25().s[22]++;
    if (!validationResult.success) {
      /* istanbul ignore next */
      cov_w8qxapg25().b[3][0]++;
      cov_w8qxapg25().s[23]++;
      console.error("❌ Newsletter validation failed:", validationResult.error.errors);
      /* istanbul ignore next */
      cov_w8qxapg25().s[24]++;
      return _server.NextResponse.json({
        success: false,
        error: "Invalid email address format",
        code: "VALIDATION_ERROR",
        details: validationResult.error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_w8qxapg25().b[3][1]++;
    }
    const {
      email,
      source
    } =
    /* istanbul ignore next */
    (cov_w8qxapg25().s[25]++, validationResult.data);
    // Get user agent for tracking
    const userAgent =
    /* istanbul ignore next */
    (cov_w8qxapg25().s[26]++,
    /* istanbul ignore next */
    (cov_w8qxapg25().b[4][0]++, request.headers.get("user-agent")) ||
    /* istanbul ignore next */
    (cov_w8qxapg25().b[4][1]++, "Unknown"));
    /* istanbul ignore next */
    cov_w8qxapg25().s[27]++;
    console.log("\uD83C\uDF10 Sending welcome email via Resend to:", email);
    // Send welcome email using Resend
    const {
      data: emailData,
      error: emailError
    } =
    /* istanbul ignore next */
    (cov_w8qxapg25().s[28]++, await resend.emails.send({
      from: "aclue <noreply@aclue.app>",
      to: [email],
      subject: "Welcome to aclue - AI-Powered Gift Discovery! \uD83C\uDF81",
      react: (0, _WelcomeEmail.default)({
        email,
        source
      }),
      // Also provide HTML fallback for email clients that don't support React
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <div style="background: linear-gradient(135deg, #3b82f6, #8b5cf6); color: white; padding: 30px; text-align: center;">
            <h2>Welcome to aclue! 🚀</h2>
            <p>AI-Powered Gift Discovery</p>
          </div>
          <div style="padding: 30px; background: #f8fafc;">
            <h3>Thank you for joining our community!</h3>
            <p>You're among the first to experience how AI can revolutionise gift-giving.</p>
            <p>We'll keep you updated on our progress and notify you when our AI is ready to transform your gift-giving experience.</p>
            <p>Excited to have you on board,<br>The aclue Team</p>
          </div>
        </div>
      `
    }));
    /* istanbul ignore next */
    cov_w8qxapg25().s[29]++;
    if (emailError) {
      /* istanbul ignore next */
      cov_w8qxapg25().b[5][0]++;
      cov_w8qxapg25().s[30]++;
      console.error("❌ Resend email sending failed:", emailError);
      /* istanbul ignore next */
      cov_w8qxapg25().s[31]++;
      return _server.NextResponse.json({
        success: false,
        error: "Failed to send welcome email. Please try again.",
        code: "EMAIL_SEND_ERROR",
        details: emailError
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_w8qxapg25().b[5][1]++;
    }
    cov_w8qxapg25().s[32]++;
    console.log("✅ Welcome email sent successfully:", emailData);
    // Optional: Store subscriber in database
    // This could be added later if local storage is needed
    // await storeNewsletterSubscriber(email, source, userAgent)
    // Send admin notification (optional)
    /* istanbul ignore next */
    cov_w8qxapg25().s[33]++;
    try {
      const {
        error: adminEmailError
      } =
      /* istanbul ignore next */
      (cov_w8qxapg25().s[34]++, await resend.emails.send({
        from: "aclue <noreply@aclue.app>",
        to: ["contact@aclue.app"],
        subject: `New Newsletter Signup: ${email}`,
        html: `
          <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
            <div style="background: #1f2937; color: white; padding: 20px; text-align: center;">
              <h2>🎉 New Newsletter Signup - aclue</h2>
            </div>
            <div style="padding: 20px; background: #f9fafb;">
              <p>A new user has signed up for the aclue newsletter!</p>
              <div style="background: white; padding: 15px; border-left: 4px solid #3b82f6; margin: 15px 0;">
                <p><strong>Email:</strong> ${email}</p>
                <p><strong>Source:</strong> ${source}</p>
                <p><strong>Timestamp:</strong> ${new Date().toISOString()}</p>
                <p><strong>User Agent:</strong> ${userAgent}</p>
              </div>
              <p>The subscriber has been automatically sent a welcome email.</p>
            </div>
          </div>
        `
      }));
      /* istanbul ignore next */
      cov_w8qxapg25().s[35]++;
      if (adminEmailError) {
        /* istanbul ignore next */
        cov_w8qxapg25().b[6][0]++;
        cov_w8qxapg25().s[36]++;
        console.warn("⚠️ Admin notification failed:", adminEmailError);
        // Don't fail the main request if admin notification fails
      } else {
        /* istanbul ignore next */
        cov_w8qxapg25().b[6][1]++;
        cov_w8qxapg25().s[37]++;
        console.log("✅ Admin notification sent successfully");
      }
    } catch (adminError) {
      /* istanbul ignore next */
      cov_w8qxapg25().s[38]++;
      console.warn("⚠️ Admin notification error:", adminError);
      // Don't fail the main request if admin notification fails
    }
    // Return success response
    /* istanbul ignore next */
    cov_w8qxapg25().s[39]++;
    return _server.NextResponse.json({
      success: true,
      message: "Thank you! You're now on our mailing list and will be among the first to experience our AI-powered gift discovery platform.",
      code: "SIGNUP_SUCCESS",
      data: {
        email,
        source,
        timestamp: new Date().toISOString()
      }
    }, {
      status: 200
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_w8qxapg25().s[40]++;
    console.error("\uD83D\uDCA5 Newsletter signup error:", error);
    // Enhanced error classification
    /* istanbul ignore next */
    cov_w8qxapg25().s[41]++;
    if (error.name === "SyntaxError") {
      /* istanbul ignore next */
      cov_w8qxapg25().b[7][0]++;
      cov_w8qxapg25().s[42]++;
      return _server.NextResponse.json({
        success: false,
        error: "Invalid request format",
        code: "INVALID_JSON"
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_w8qxapg25().b[7][1]++;
    }
    cov_w8qxapg25().s[43]++;
    return _server.NextResponse.json({
      success: false,
      error: "An unexpected error occurred. Please try again.",
      code: "UNKNOWN_ERROR",
      details: process.env.NODE_ENV === "development" ?
      /* istanbul ignore next */
      (cov_w8qxapg25().b[8][0]++, error.message) :
      /* istanbul ignore next */
      (cov_w8qxapg25().b[8][1]++, undefined)
    }, {
      status: 500
    });
  }
}
async function GET() {
  /* istanbul ignore next */
  cov_w8qxapg25().f[6]++;
  cov_w8qxapg25().s[44]++;
  return _server.NextResponse.json({
    endpoint: "/api/newsletter/signup",
    method: "POST",
    description: "Newsletter signup with direct Resend integration",
    version: "1.0.0",
    status: "operational",
    provider: "Resend",
    features: ["Direct Resend SDK integration", "React email templates", "Input validation with Zod", "Admin notifications", "Source tracking"]
  }, {
    status: 200
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,