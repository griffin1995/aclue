85497a1af8082526aba844d51654a5a0
"use client";
"use strict";

/* istanbul ignore next */
function cov_27uvwgl88b() {
  var path = "/home/jack/Documents/aclue-preprod/web/src/components/ui/NeuralNetworkBackgroundOptimized.tsx";
  var hash = "b0807e9c71f47b394d22619a9c8b6aaf83596848";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/jack/Documents/aclue-preprod/web/src/components/ui/NeuralNetworkBackgroundOptimized.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 48
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 24
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 21,
          column: 72
        }
      },
      "8": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 51
        }
      },
      "9": {
        start: {
          line: 23,
          column: 39
        },
        end: {
          line: 23,
          column: 51
        }
      },
      "10": {
        start: {
          line: 24,
          column: 28
        },
        end: {
          line: 24,
          column: 41
        }
      },
      "11": {
        start: {
          line: 25,
          column: 27
        },
        end: {
          line: 25,
          column: 40
        }
      },
      "12": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 28,
          column: 20
        }
      },
      "13": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 66
        }
      },
      "14": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "15": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 19
        }
      },
      "16": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "17": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 37,
          column: 10
        }
      },
      "18": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 53
        }
      },
      "19": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "20": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 30
        }
      },
      "21": {
        start: {
          line: 43,
          column: 17
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "22": {
        start: {
          line: 46,
          column: 32
        },
        end: {
          line: 46,
          column: 88
        }
      },
      "23": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "24": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "25": {
        start: {
          line: 49,
          column: 23
        },
        end: {
          line: 49,
          column: 95
        }
      },
      "26": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 54,
          column: 13
        }
      },
      "27": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 57
        }
      },
      "28": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 39
        }
      },
      "29": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 25
        }
      },
      "30": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "31": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 31
        }
      },
      "32": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 18
        }
      },
      "33": {
        start: {
          line: 63,
          column: 41
        },
        end: {
          line: 378,
          column: 1
        }
      },
      "34": {
        start: {
          line: 69,
          column: 22
        },
        end: {
          line: 69,
          column: 46
        }
      },
      "35": {
        start: {
          line: 70,
          column: 25
        },
        end: {
          line: 70,
          column: 45
        }
      },
      "36": {
        start: {
          line: 71,
          column: 21
        },
        end: {
          line: 71,
          column: 43
        }
      },
      "37": {
        start: {
          line: 72,
          column: 29
        },
        end: {
          line: 72,
          column: 50
        }
      },
      "38": {
        start: {
          line: 73,
          column: 26
        },
        end: {
          line: 73,
          column: 47
        }
      },
      "39": {
        start: {
          line: 74,
          column: 19
        },
        end: {
          line: 74,
          column: 41
        }
      },
      "40": {
        start: {
          line: 75,
          column: 27
        },
        end: {
          line: 75,
          column: 56
        }
      },
      "41": {
        start: {
          line: 76,
          column: 31
        },
        end: {
          line: 76,
          column: 60
        }
      },
      "42": {
        start: {
          line: 77,
          column: 25
        },
        end: {
          line: 77,
          column: 49
        }
      },
      "43": {
        start: {
          line: 78,
          column: 40
        },
        end: {
          line: 81,
          column: 6
        }
      },
      "44": {
        start: {
          line: 83,
          column: 23
        },
        end: {
          line: 99,
          column: 22
        }
      },
      "45": {
        start: {
          line: 101,
          column: 21
        },
        end: {
          line: 101,
          column: 77
        }
      },
      "46": {
        start: {
          line: 102,
          column: 22
        },
        end: {
          line: 102,
          column: 116
        }
      },
      "47": {
        start: {
          line: 104,
          column: 28
        },
        end: {
          line: 104,
          column: 49
        }
      },
      "48": {
        start: {
          line: 106,
          column: 22
        },
        end: {
          line: 106,
          column: 40
        }
      },
      "49": {
        start: {
          line: 109,
          column: 25
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "50": {
        start: {
          line: 110,
          column: 22
        },
        end: {
          line: 110,
          column: 47
        }
      },
      "51": {
        start: {
          line: 111,
          column: 22
        },
        end: {
          line: 111,
          column: 47
        }
      },
      "52": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 35
        }
      },
      "53": {
        start: {
          line: 116,
          column: 34
        },
        end: {
          line: 126,
          column: 5
        }
      },
      "54": {
        start: {
          line: 117,
          column: 22
        },
        end: {
          line: 117,
          column: 47
        }
      },
      "55": {
        start: {
          line: 118,
          column: 22
        },
        end: {
          line: 118,
          column: 47
        }
      },
      "56": {
        start: {
          line: 119,
          column: 22
        },
        end: {
          line: 119,
          column: 24
        }
      },
      "57": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "58": {
        start: {
          line: 120,
          column: 21
        },
        end: {
          line: 120,
          column: 23
        }
      },
      "59": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 123,
          column: 13
        }
      },
      "60": {
        start: {
          line: 121,
          column: 25
        },
        end: {
          line: 121,
          column: 27
        }
      },
      "61": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 58
        }
      },
      "62": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 21
        }
      },
      "63": {
        start: {
          line: 129,
          column: 32
        },
        end: {
          line: 140,
          column: 10
        }
      },
      "64": {
        start: {
          line: 130,
          column: 24
        },
        end: {
          line: 130,
          column: 33
        }
      },
      "65": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 138,
          column: 11
        }
      },
      "66": {
        start: {
          line: 132,
          column: 24
        },
        end: {
          line: 132,
          column: 50
        }
      },
      "67": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 135,
          column: 13
        }
      },
      "68": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 37
        }
      },
      "69": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 40
        }
      },
      "70": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 57
        }
      },
      "71": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 41
        }
      },
      "72": {
        start: {
          line: 143,
          column: 24
        },
        end: {
          line: 148,
          column: 10
        }
      },
      "73": {
        start: {
          line: 144,
          column: 18
        },
        end: {
          line: 144,
          column: 47
        }
      },
      "74": {
        start: {
          line: 145,
          column: 18
        },
        end: {
          line: 145,
          column: 47
        }
      },
      "75": {
        start: {
          line: 146,
          column: 18
        },
        end: {
          line: 146,
          column: 47
        }
      },
      "76": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 50
        }
      },
      "77": {
        start: {
          line: 151,
          column: 6
        },
        end: {
          line: 170,
          column: 11
        }
      },
      "78": {
        start: {
          line: 152,
          column: 33
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "79": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 156,
          column: 15
        }
      },
      "80": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 27
        }
      },
      "81": {
        start: {
          line: 161,
          column: 29
        },
        end: {
          line: 164,
          column: 9
        }
      },
      "82": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 38
        }
      },
      "83": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 60
        }
      },
      "84": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 56
        }
      },
      "85": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 169,
          column: 10
        }
      },
      "86": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 38
        }
      },
      "87": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 63
        }
      },
      "88": {
        start: {
          line: 173,
          column: 6
        },
        end: {
          line: 184,
          column: 11
        }
      },
      "89": {
        start: {
          line: 174,
          column: 39
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "90": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 52
        }
      },
      "91": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 180,
          column: 13
        }
      },
      "92": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 178,
          column: 61
        }
      },
      "93": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 179,
          column: 26
        }
      },
      "94": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 78
        }
      },
      "95": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 92
        }
      },
      "96": {
        start: {
          line: 183,
          column: 19
        },
        end: {
          line: 183,
          column: 91
        }
      },
      "97": {
        start: {
          line: 187,
          column: 6
        },
        end: {
          line: 217,
          column: 7
        }
      },
      "98": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 70
        }
      },
      "99": {
        start: {
          line: 188,
          column: 63
        },
        end: {
          line: 188,
          column: 70
        }
      },
      "100": {
        start: {
          line: 189,
          column: 22
        },
        end: {
          line: 189,
          column: 24
        }
      },
      "101": {
        start: {
          line: 190,
          column: 26
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "102": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 207,
          column: 9
        }
      },
      "103": {
        start: {
          line: 195,
          column: 20
        },
        end: {
          line: 195,
          column: 21
        }
      },
      "104": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 206,
          column: 15
        }
      },
      "105": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 208,
          column: 33
        }
      },
      "106": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 28
        }
      },
      "107": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 211,
          column: 43
        }
      },
      "108": {
        start: {
          line: 220,
          column: 30
        },
        end: {
          line: 260,
          column: 6
        }
      },
      "109": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "110": {
        start: {
          line: 223,
          column: 27
        },
        end: {
          line: 223,
          column: 68
        }
      },
      "111": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 38
        }
      },
      "112": {
        start: {
          line: 224,
          column: 24
        },
        end: {
          line: 224,
          column: 38
        }
      },
      "113": {
        start: {
          line: 226,
          column: 28
        },
        end: {
          line: 226,
          column: 30
        }
      },
      "114": {
        start: {
          line: 227,
          column: 26
        },
        end: {
          line: 227,
          column: 35
        }
      },
      "115": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 251,
          column: 11
        }
      },
      "116": {
        start: {
          line: 229,
          column: 34
        },
        end: {
          line: 229,
          column: 71
        }
      },
      "117": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 250,
          column: 15
        }
      },
      "118": {
        start: {
          line: 231,
          column: 36
        },
        end: {
          line: 231,
          column: 77
        }
      },
      "119": {
        start: {
          line: 232,
          column: 16
        },
        end: {
          line: 249,
          column: 19
        }
      },
      "120": {
        start: {
          line: 233,
          column: 20
        },
        end: {
          line: 233,
          column: 53
        }
      },
      "121": {
        start: {
          line: 233,
          column: 46
        },
        end: {
          line: 233,
          column: 53
        }
      },
      "122": {
        start: {
          line: 234,
          column: 36
        },
        end: {
          line: 234,
          column: 61
        }
      },
      "123": {
        start: {
          line: 235,
          column: 20
        },
        end: {
          line: 235,
          column: 55
        }
      },
      "124": {
        start: {
          line: 235,
          column: 48
        },
        end: {
          line: 235,
          column: 55
        }
      },
      "125": {
        start: {
          line: 236,
          column: 20
        },
        end: {
          line: 236,
          column: 43
        }
      },
      "126": {
        start: {
          line: 237,
          column: 31
        },
        end: {
          line: 237,
          column: 48
        }
      },
      "127": {
        start: {
          line: 238,
          column: 31
        },
        end: {
          line: 238,
          column: 48
        }
      },
      "128": {
        start: {
          line: 239,
          column: 37
        },
        end: {
          line: 239,
          column: 65
        }
      },
      "129": {
        start: {
          line: 240,
          column: 20
        },
        end: {
          line: 248,
          column: 21
        }
      },
      "130": {
        start: {
          line: 241,
          column: 40
        },
        end: {
          line: 241,
          column: 86
        }
      },
      "131": {
        start: {
          line: 242,
          column: 24
        },
        end: {
          line: 247,
          column: 27
        }
      },
      "132": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "133": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 67
        }
      },
      "134": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 256,
          column: 27
        }
      },
      "135": {
        start: {
          line: 263,
          column: 22
        },
        end: {
          line: 348,
          column: 6
        }
      },
      "136": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 264,
          column: 92
        }
      },
      "137": {
        start: {
          line: 264,
          column: 85
        },
        end: {
          line: 264,
          column: 92
        }
      },
      "138": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 269,
          column: 9
        }
      },
      "139": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 45
        }
      },
      "140": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 19
        }
      },
      "141": {
        start: {
          line: 270,
          column: 28
        },
        end: {
          line: 270,
          column: 45
        }
      },
      "142": {
        start: {
          line: 271,
          column: 26
        },
        end: {
          line: 271,
          column: 64
        }
      },
      "143": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 276,
          column: 9
        }
      },
      "144": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 66
        }
      },
      "145": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 19
        }
      },
      "146": {
        start: {
          line: 277,
          column: 23
        },
        end: {
          line: 277,
          column: 40
        }
      },
      "147": {
        start: {
          line: 278,
          column: 20
        },
        end: {
          line: 280,
          column: 10
        }
      },
      "148": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 281,
          column: 25
        }
      },
      "149": {
        start: {
          line: 281,
          column: 18
        },
        end: {
          line: 281,
          column: 25
        }
      },
      "150": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 283,
          column: 38
        }
      },
      "151": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 284,
          column: 64
        }
      },
      "152": {
        start: {
          line: 286,
          column: 32
        },
        end: {
          line: 286,
          column: 49
        }
      },
      "153": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 303,
          column: 11
        }
      },
      "154": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 48
        }
      },
      "155": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 48
        }
      },
      "156": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 295,
          column: 13
        }
      },
      "157": {
        start: {
          line: 293,
          column: 16
        },
        end: {
          line: 293,
          column: 30
        }
      },
      "158": {
        start: {
          line: 294,
          column: 16
        },
        end: {
          line: 294,
          column: 73
        }
      },
      "159": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 299,
          column: 13
        }
      },
      "160": {
        start: {
          line: 297,
          column: 16
        },
        end: {
          line: 297,
          column: 30
        }
      },
      "161": {
        start: {
          line: 298,
          column: 16
        },
        end: {
          line: 298,
          column: 74
        }
      },
      "162": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 54
        }
      },
      "163": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 302,
          column: 65
        }
      },
      "164": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 307,
          column: 9
        }
      },
      "165": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 306,
          column: 32
        }
      },
      "166": {
        start: {
          line: 309,
          column: 28
        },
        end: {
          line: 309,
          column: 45
        }
      },
      "167": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 311,
          column: 26
        }
      },
      "168": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 319,
          column: 11
        }
      },
      "169": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 313,
          column: 28
        }
      },
      "170": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 314,
          column: 61
        }
      },
      "171": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 315,
          column: 57
        }
      },
      "172": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 80
        }
      },
      "173": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 318,
          column: 25
        }
      },
      "174": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 331,
          column: 11
        }
      },
      "175": {
        start: {
          line: 322,
          column: 12
        },
        end: {
          line: 322,
          column: 28
        }
      },
      "176": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 323,
          column: 63
        }
      },
      "177": {
        start: {
          line: 325,
          column: 24
        },
        end: {
          line: 325,
          column: 38
        }
      },
      "178": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 326,
          column: 68
        }
      },
      "179": {
        start: {
          line: 326,
          column: 43
        },
        end: {
          line: 326,
          column: 68
        }
      },
      "180": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 327,
          column: 62
        }
      },
      "181": {
        start: {
          line: 327,
          column: 40
        },
        end: {
          line: 327,
          column: 62
        }
      },
      "182": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 329,
          column: 59
        }
      },
      "183": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 330,
          column: 23
        }
      },
      "184": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 47
        }
      },
      "185": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 334,
          column: 32
        }
      },
      "186": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 339,
          column: 9
        }
      },
      "187": {
        start: {
          line: 337,
          column: 33
        },
        end: {
          line: 337,
          column: 42
        }
      },
      "188": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 338,
          column: 61
        }
      },
      "189": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 340,
          column: 62
        }
      },
      "190": {
        start: {
          line: 351,
          column: 6
        },
        end: {
          line: 366,
          column: 7
        }
      },
      "191": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 352,
          column: 92
        }
      },
      "192": {
        start: {
          line: 352,
          column: 85
        },
        end: {
          line: 352,
          column: 92
        }
      },
      "193": {
        start: {
          line: 353,
          column: 23
        },
        end: {
          line: 353,
          column: 40
        }
      },
      "194": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 354,
          column: 40
        }
      },
      "195": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 355,
          column: 42
        }
      },
      "196": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 356,
          column: 53
        }
      },
      "197": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 357,
          column: 18
        }
      },
      "198": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 362,
          column: 10
        }
      },
      "199": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 361,
          column: 13
        }
      },
      "200": {
        start: {
          line: 360,
          column: 16
        },
        end: {
          line: 360,
          column: 59
        }
      },
      "201": {
        start: {
          line: 367,
          column: 4
        },
        end: {
          line: 377,
          column: 7
        }
      },
      "202": {
        start: {
          line: 379,
          column: 17
        },
        end: {
          line: 379,
          column: 49
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 38
          },
          end: {
            line: 13,
            column: 39
          }
        },
        loc: {
          start: {
            line: 13,
            column: 49
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 13
          },
          end: {
            line: 16,
            column: 14
          }
        },
        loc: {
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 33
          }
        },
        loc: {
          start: {
            line: 22,
            column: 47
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 39
          },
          end: {
            line: 26,
            column: 40
          }
        },
        loc: {
          start: {
            line: 26,
            column: 61
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 30,
            column: 9
          },
          end: {
            line: 30,
            column: 34
          }
        },
        loc: {
          start: {
            line: 30,
            column: 53
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 63,
            column: 41
          },
          end: {
            line: 63,
            column: 42
          }
        },
        loc: {
          start: {
            line: 68,
            column: 36
          },
          end: {
            line: 378,
            column: 1
          }
        },
        line: 68
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 109,
            column: 25
          },
          end: {
            line: 109,
            column: 26
          }
        },
        loc: {
          start: {
            line: 109,
            column: 33
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 109
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 116,
            column: 34
          },
          end: {
            line: 116,
            column: 35
          }
        },
        loc: {
          start: {
            line: 116,
            column: 42
          },
          end: {
            line: 126,
            column: 5
          }
        },
        line: 116
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 129,
            column: 56
          },
          end: {
            line: 129,
            column: 57
          }
        },
        loc: {
          start: {
            line: 129,
            column: 60
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 129
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 131,
            column: 33
          },
          end: {
            line: 131,
            column: 34
          }
        },
        loc: {
          start: {
            line: 131,
            column: 41
          },
          end: {
            line: 138,
            column: 9
          }
        },
        line: 131
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 143,
            column: 48
          },
          end: {
            line: 143,
            column: 49
          }
        },
        loc: {
          start: {
            line: 143,
            column: 62
          },
          end: {
            line: 148,
            column: 5
          }
        },
        line: 143
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 151,
            column: 28
          },
          end: {
            line: 151,
            column: 29
          }
        },
        loc: {
          start: {
            line: 151,
            column: 32
          },
          end: {
            line: 170,
            column: 5
          }
        },
        line: 151
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 152,
            column: 33
          },
          end: {
            line: 152,
            column: 34
          }
        },
        loc: {
          start: {
            line: 152,
            column: 37
          },
          end: {
            line: 157,
            column: 9
          }
        },
        line: 152
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 161,
            column: 29
          },
          end: {
            line: 161,
            column: 30
          }
        },
        loc: {
          start: {
            line: 161,
            column: 33
          },
          end: {
            line: 164,
            column: 9
          }
        },
        line: 161
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 166,
            column: 15
          },
          end: {
            line: 166,
            column: 16
          }
        },
        loc: {
          start: {
            line: 166,
            column: 19
          },
          end: {
            line: 169,
            column: 9
          }
        },
        line: 166
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 173,
            column: 28
          },
          end: {
            line: 173,
            column: 29
          }
        },
        loc: {
          start: {
            line: 173,
            column: 32
          },
          end: {
            line: 184,
            column: 5
          }
        },
        line: 173
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 174,
            column: 39
          },
          end: {
            line: 174,
            column: 40
          }
        },
        loc: {
          start: {
            line: 174,
            column: 43
          },
          end: {
            line: 181,
            column: 9
          }
        },
        line: 174
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 183,
            column: 15
          },
          end: {
            line: 183,
            column: 16
          }
        },
        loc: {
          start: {
            line: 183,
            column: 19
          },
          end: {
            line: 183,
            column: 91
          }
        },
        line: 183
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 187,
            column: 28
          },
          end: {
            line: 187,
            column: 29
          }
        },
        loc: {
          start: {
            line: 187,
            column: 32
          },
          end: {
            line: 212,
            column: 5
          }
        },
        line: 187
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 220,
            column: 54
          },
          end: {
            line: 220,
            column: 55
          }
        },
        loc: {
          start: {
            line: 220,
            column: 58
          },
          end: {
            line: 257,
            column: 5
          }
        },
        line: 220
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 228,
            column: 33
          },
          end: {
            line: 228,
            column: 34
          }
        },
        loc: {
          start: {
            line: 228,
            column: 50
          },
          end: {
            line: 251,
            column: 9
          }
        },
        line: 228
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 230,
            column: 34
          },
          end: {
            line: 230,
            column: 35
          }
        },
        loc: {
          start: {
            line: 230,
            column: 45
          },
          end: {
            line: 250,
            column: 13
          }
        },
        line: 230
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 232,
            column: 36
          },
          end: {
            line: 232,
            column: 37
          }
        },
        loc: {
          start: {
            line: 232,
            column: 45
          },
          end: {
            line: 249,
            column: 17
          }
        },
        line: 232
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 263,
            column: 46
          },
          end: {
            line: 263,
            column: 47
          }
        },
        loc: {
          start: {
            line: 263,
            column: 50
          },
          end: {
            line: 341,
            column: 5
          }
        },
        line: 263
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 287,
            column: 33
          },
          end: {
            line: 287,
            column: 34
          }
        },
        loc: {
          start: {
            line: 287,
            column: 41
          },
          end: {
            line: 303,
            column: 9
          }
        },
        line: 287
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 312,
            column: 28
          },
          end: {
            line: 312,
            column: 29
          }
        },
        loc: {
          start: {
            line: 312,
            column: 42
          },
          end: {
            line: 319,
            column: 9
          }
        },
        line: 312
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 321,
            column: 33
          },
          end: {
            line: 321,
            column: 34
          }
        },
        loc: {
          start: {
            line: 321,
            column: 41
          },
          end: {
            line: 331,
            column: 9
          }
        },
        line: 321
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 351,
            column: 28
          },
          end: {
            line: 351,
            column: 29
          }
        },
        loc: {
          start: {
            line: 351,
            column: 32
          },
          end: {
            line: 363,
            column: 5
          }
        },
        line: 351
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 358,
            column: 15
          },
          end: {
            line: 358,
            column: 16
          }
        },
        loc: {
          start: {
            line: 358,
            column: 19
          },
          end: {
            line: 362,
            column: 9
          }
        },
        line: 358
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 29
          },
          end: {
            line: 27,
            column: 45
          }
        }, {
          start: {
            line: 27,
            column: 48
          },
          end: {
            line: 27,
            column: 65
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 20
          }
        }, {
          start: {
            line: 31,
            column: 24
          },
          end: {
            line: 31,
            column: 27
          }
        }, {
          start: {
            line: 31,
            column: 31
          },
          end: {
            line: 31,
            column: 45
          }
        }],
        line: 31
      },
      "4": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "5": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 20
          }
        }, {
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 34,
            column: 47
          }
        }, {
          start: {
            line: 34,
            column: 51
          },
          end: {
            line: 34,
            column: 76
          }
        }],
        line: 34
      },
      "6": {
        loc: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "7": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 13
          }
        }, {
          start: {
            line: 40,
            column: 17
          },
          end: {
            line: 40,
            column: 31
          }
        }],
        line: 40
      },
      "8": {
        loc: {
          start: {
            line: 46,
            column: 32
          },
          end: {
            line: 46,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 32
          },
          end: {
            line: 46,
            column: 53
          }
        }, {
          start: {
            line: 46,
            column: 57
          },
          end: {
            line: 46,
            column: 88
          }
        }],
        line: 46
      },
      "9": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "10": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 48,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 48,
            column: 29
          }
        }, {
          start: {
            line: 48,
            column: 33
          },
          end: {
            line: 48,
            column: 79
          }
        }],
        line: 48
      },
      "11": {
        loc: {
          start: {
            line: 49,
            column: 23
          },
          end: {
            line: 49,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 49,
            column: 47
          },
          end: {
            line: 49,
            column: 88
          }
        }, {
          start: {
            line: 49,
            column: 91
          },
          end: {
            line: 49,
            column: 95
          }
        }],
        line: 49
      },
      "12": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        }, {
          start: {
            line: 52,
            column: 19
          },
          end: {
            line: 54,
            column: 13
          }
        }],
        line: 50
      },
      "13": {
        loc: {
          start: {
            line: 50,
            column: 16
          },
          end: {
            line: 50,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 16
          },
          end: {
            line: 50,
            column: 20
          }
        }, {
          start: {
            line: 50,
            column: 25
          },
          end: {
            line: 50,
            column: 33
          }
        }, {
          start: {
            line: 50,
            column: 37
          },
          end: {
            line: 50,
            column: 45
          }
        }],
        line: 50
      },
      "14": {
        loc: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "15": {
        loc: {
          start: {
            line: 63,
            column: 55
          },
          end: {
            line: 63,
            column: 76
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 63,
            column: 74
          },
          end: {
            line: 63,
            column: 76
          }
        }],
        line: 63
      },
      "16": {
        loc: {
          start: {
            line: 63,
            column: 78
          },
          end: {
            line: 63,
            column: 102
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 63,
            column: 99
          },
          end: {
            line: 63,
            column: 102
          }
        }],
        line: 63
      },
      "17": {
        loc: {
          start: {
            line: 63,
            column: 104
          },
          end: {
            line: 63,
            column: 124
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 63,
            column: 121
          },
          end: {
            line: 63,
            column: 124
          }
        }],
        line: 63
      },
      "18": {
        loc: {
          start: {
            line: 63,
            column: 126
          },
          end: {
            line: 68,
            column: 1
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 63,
            column: 135
          },
          end: {
            line: 68,
            column: 1
          }
        }],
        line: 63
      },
      "19": {
        loc: {
          start: {
            line: 68,
            column: 3
          },
          end: {
            line: 68,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 68,
            column: 21
          },
          end: {
            line: 68,
            column: 31
          }
        }],
        line: 68
      },
      "20": {
        loc: {
          start: {
            line: 101,
            column: 21
          },
          end: {
            line: 101,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 21
          },
          end: {
            line: 101,
            column: 50
          }
        }, {
          start: {
            line: 101,
            column: 54
          },
          end: {
            line: 101,
            column: 77
          }
        }],
        line: 101
      },
      "21": {
        loc: {
          start: {
            line: 102,
            column: 34
          },
          end: {
            line: 102,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 102,
            column: 45
          },
          end: {
            line: 102,
            column: 67
          }
        }, {
          start: {
            line: 102,
            column: 70
          },
          end: {
            line: 102,
            column: 86
          }
        }],
        line: 102
      },
      "22": {
        loc: {
          start: {
            line: 133,
            column: 12
          },
          end: {
            line: 135,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 12
          },
          end: {
            line: 135,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "23": {
        loc: {
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "24": {
        loc: {
          start: {
            line: 176,
            column: 16
          },
          end: {
            line: 176,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 16
          },
          end: {
            line: 176,
            column: 32
          }
        }, {
          start: {
            line: 176,
            column: 36
          },
          end: {
            line: 176,
            column: 70
          }
        }],
        line: 176
      },
      "25": {
        loc: {
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 188,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 188,
            column: 70
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "26": {
        loc: {
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 188,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 188,
            column: 34
          }
        }, {
          start: {
            line: 188,
            column: 38
          },
          end: {
            line: 188,
            column: 61
          }
        }],
        line: 188
      },
      "27": {
        loc: {
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "28": {
        loc: {
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 222,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 222,
            column: 39
          }
        }, {
          start: {
            line: 222,
            column: 43
          },
          end: {
            line: 222,
            column: 74
          }
        }],
        line: 222
      },
      "29": {
        loc: {
          start: {
            line: 224,
            column: 12
          },
          end: {
            line: 224,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 12
          },
          end: {
            line: 224,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "30": {
        loc: {
          start: {
            line: 231,
            column: 36
          },
          end: {
            line: 231,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 36
          },
          end: {
            line: 231,
            column: 71
          }
        }, {
          start: {
            line: 231,
            column: 75
          },
          end: {
            line: 231,
            column: 77
          }
        }],
        line: 231
      },
      "31": {
        loc: {
          start: {
            line: 233,
            column: 20
          },
          end: {
            line: 233,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 20
          },
          end: {
            line: 233,
            column: 53
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "32": {
        loc: {
          start: {
            line: 235,
            column: 20
          },
          end: {
            line: 235,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 20
          },
          end: {
            line: 235,
            column: 55
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "33": {
        loc: {
          start: {
            line: 240,
            column: 20
          },
          end: {
            line: 248,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 20
          },
          end: {
            line: 248,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "34": {
        loc: {
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 253
      },
      "35": {
        loc: {
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 264,
            column: 92
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 264,
            column: 92
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 264
      },
      "36": {
        loc: {
          start: {
            line: 264,
            column: 12
          },
          end: {
            line: 264,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 264,
            column: 12
          },
          end: {
            line: 264,
            column: 30
          }
        }, {
          start: {
            line: 264,
            column: 34
          },
          end: {
            line: 264,
            column: 56
          }
        }, {
          start: {
            line: 264,
            column: 60
          },
          end: {
            line: 264,
            column: 83
          }
        }],
        line: 264
      },
      "37": {
        loc: {
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 269,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 269,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 266
      },
      "38": {
        loc: {
          start: {
            line: 273,
            column: 8
          },
          end: {
            line: 276,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 273,
            column: 8
          },
          end: {
            line: 276,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 273
      },
      "39": {
        loc: {
          start: {
            line: 281,
            column: 8
          },
          end: {
            line: 281,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 8
          },
          end: {
            line: 281,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 281
      },
      "40": {
        loc: {
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 295,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 295,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "41": {
        loc: {
          start: {
            line: 292,
            column: 16
          },
          end: {
            line: 292,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 292,
            column: 16
          },
          end: {
            line: 292,
            column: 27
          }
        }, {
          start: {
            line: 292,
            column: 31
          },
          end: {
            line: 292,
            column: 57
          }
        }],
        line: 292
      },
      "42": {
        loc: {
          start: {
            line: 296,
            column: 12
          },
          end: {
            line: 299,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 12
          },
          end: {
            line: 299,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "43": {
        loc: {
          start: {
            line: 296,
            column: 16
          },
          end: {
            line: 296,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 296,
            column: 16
          },
          end: {
            line: 296,
            column: 27
          }
        }, {
          start: {
            line: 296,
            column: 31
          },
          end: {
            line: 296,
            column: 58
          }
        }],
        line: 296
      },
      "44": {
        loc: {
          start: {
            line: 305,
            column: 8
          },
          end: {
            line: 307,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 305,
            column: 8
          },
          end: {
            line: 307,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 305
      },
      "45": {
        loc: {
          start: {
            line: 326,
            column: 12
          },
          end: {
            line: 326,
            column: 68
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 12
          },
          end: {
            line: 326,
            column: 68
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      },
      "46": {
        loc: {
          start: {
            line: 327,
            column: 12
          },
          end: {
            line: 327,
            column: 62
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 327,
            column: 12
          },
          end: {
            line: 327,
            column: 62
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 327
      },
      "47": {
        loc: {
          start: {
            line: 336,
            column: 8
          },
          end: {
            line: 339,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 336,
            column: 8
          },
          end: {
            line: 339,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 336
      },
      "48": {
        loc: {
          start: {
            line: 352,
            column: 8
          },
          end: {
            line: 352,
            column: 92
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 352,
            column: 8
          },
          end: {
            line: 352,
            column: 92
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 352
      },
      "49": {
        loc: {
          start: {
            line: 352,
            column: 12
          },
          end: {
            line: 352,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 352,
            column: 12
          },
          end: {
            line: 352,
            column: 30
          }
        }, {
          start: {
            line: 352,
            column: 34
          },
          end: {
            line: 352,
            column: 56
          }
        }, {
          start: {
            line: 352,
            column: 60
          },
          end: {
            line: 352,
            column: 83
          }
        }],
        line: 352
      },
      "50": {
        loc: {
          start: {
            line: 359,
            column: 12
          },
          end: {
            line: 361,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 359,
            column: 12
          },
          end: {
            line: 361,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 359
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0],
      "18": [0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0, 0],
      "50": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/jack/Documents/aclue-preprod/web/src/components/ui/NeuralNetworkBackgroundOptimized.tsx"],
      sourcesContent: ["'use client'\n\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\n\ninterface Node {\n  id: number;\n  x: number;\n  y: number;\n  vx: number;\n  vy: number;\n  size: number;\n  opacity: number;\n  pulsePhase: number;\n  type: 'primary' | 'secondary' | 'accent';\n  gridIndex?: number; // For spatial indexing\n}\n\ninterface Connection {\n  from: Node;\n  to: Node;\n  opacity: number;\n  strength: number;\n}\n\ninterface NeuralNetworkBackgroundProps {\n  nodeCount?: number;\n  connectionDistance?: number;\n  animationSpeed?: number;\n  colors?: {\n    primary: string;\n    secondary: string;\n    accent: string;\n    connections: string;\n  };\n  performanceMode?: 'high' | 'balanced' | 'low';\n}\n\n/**\n * Optimized Neural Network Background Component\n *\n * Performance improvements:\n * - Adaptive frame rate based on device capabilities\n * - Spatial indexing for connection calculations\n * - Visibility-based rendering (pauses when tab is hidden)\n * - Mobile-optimized node count\n * - Memory-efficient connection caching\n * - RequestIdleCallback for non-critical updates\n * - Reduced calculations through grid-based spatial partitioning\n */\nexport const NeuralNetworkBackgroundOptimized: React.FC<NeuralNetworkBackgroundProps> = ({\n  nodeCount: defaultNodeCount = 80,\n  connectionDistance = 150,\n  animationSpeed = 0.5,\n  colors = {\n    primary: '#3b82f6',\n    secondary: '#8b5cf6',\n    accent: '#06b6d4',\n    connections: '#3b82f6'\n  },\n  performanceMode = 'balanced'\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const animationRef = useRef<number>();\n  const nodesRef = useRef<Node[]>([]);\n  const lastFrameTimeRef = useRef<number>(0);\n  const frameCountRef = useRef<number>(0);\n  const fpsRef = useRef<number>(60);\n  const spatialGridRef = useRef<Map<string, Node[]>>(new Map());\n  const connectionCacheRef = useRef<Map<string, Connection[]>>(new Map());\n  const isVisibleRef = useRef<boolean>(true);\n\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n\n  // Performance configuration based on mode\n  const perfConfig = {\n    high: { fps: 60, nodeMultiplier: 1, cacheConnections: false },\n    balanced: { fps: 30, nodeMultiplier: 0.7, cacheConnections: true },\n    low: { fps: 15, nodeMultiplier: 0.4, cacheConnections: true }\n  }[performanceMode];\n\n  // Detect mobile and reduce node count\n  const isMobile = typeof window !== 'undefined' && window.innerWidth < 768;\n  const nodeCount = Math.floor(\n    (isMobile ? defaultNodeCount * 0.5 : defaultNodeCount) * perfConfig.nodeMultiplier\n  );\n\n  // Target frame time based on desired FPS\n  const targetFrameTime = 1000 / perfConfig.fps;\n\n  // Grid size for spatial partitioning\n  const GRID_SIZE = connectionDistance;\n\n  /**\n   * Get grid key for spatial indexing\n   */\n  const getGridKey = (x: number, y: number): string => {\n    const gridX = Math.floor(x / GRID_SIZE);\n    const gridY = Math.floor(y / GRID_SIZE);\n    return `${gridX},${gridY}`;\n  };\n\n  /**\n   * Get neighboring grid cells for connection search\n   */\n  const getNeighboringCells = (x: number, y: number): string[] => {\n    const gridX = Math.floor(x / GRID_SIZE);\n    const gridY = Math.floor(y / GRID_SIZE);\n    const cells: string[] = [];\n\n    for (let dx = -1; dx <= 1; dx++) {\n      for (let dy = -1; dy <= 1; dy++) {\n        cells.push(`${gridX + dx},${gridY + dy}`);\n      }\n    }\n\n    return cells;\n  };\n\n  /**\n   * Update spatial grid with node positions\n   */\n  const updateSpatialGrid = useCallback(() => {\n    const newGrid = new Map<string, Node[]>();\n\n    nodesRef.current.forEach(node => {\n      const key = getGridKey(node.x, node.y);\n      if (!newGrid.has(key)) {\n        newGrid.set(key, []);\n      }\n      newGrid.get(key)!.push(node);\n      node.gridIndex = newGrid.get(key)!.length - 1;\n    });\n\n    spatialGridRef.current = newGrid;\n  }, []);\n\n  /**\n   * Convert hex to rgba\n   */\n  const hexToRgba = useCallback((hex: string, alpha: number): string => {\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n    return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n  }, []);\n\n  /**\n   * Handle window resize\n   */\n  useEffect(() => {\n    const updateDimensions = () => {\n      setDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n\n    updateDimensions();\n\n    // Debounced resize handler\n    let resizeTimer: NodeJS.Timeout;\n    const handleResize = () => {\n      clearTimeout(resizeTimer);\n      resizeTimer = setTimeout(updateDimensions, 250);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      clearTimeout(resizeTimer);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  /**\n   * Handle visibility change\n   */\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      isVisibleRef.current = !document.hidden;\n\n      if (!document.hidden && animationRef.current === undefined) {\n        // Resume animation when tab becomes visible\n        lastFrameTimeRef.current = performance.now();\n        animate();\n      }\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () => document.removeEventListener('visibilitychange', handleVisibilityChange);\n  }, []);\n\n  /**\n   * Initialize nodes\n   */\n  useEffect(() => {\n    if (dimensions.width === 0 || dimensions.height === 0) return;\n\n    const nodes: Node[] = [];\n    const nodeTypes: Array<'primary' | 'secondary' | 'accent'> = ['primary', 'secondary', 'accent'];\n\n    for (let i = 0; i < nodeCount; i++) {\n      nodes.push({\n        id: i,\n        x: Math.random() * dimensions.width,\n        y: Math.random() * dimensions.height,\n        vx: (Math.random() - 0.5) * animationSpeed,\n        vy: (Math.random() - 0.5) * animationSpeed,\n        size: Math.random() * 4 + 2,\n        opacity: Math.random() * 0.7 + 0.3,\n        pulsePhase: Math.random() * Math.PI * 2,\n        type: nodeTypes[Math.floor(Math.random() * nodeTypes.length)] as \"primary\" | \"secondary\" | \"accent\"\n      });\n    }\n\n    nodesRef.current = nodes;\n    updateSpatialGrid();\n\n    // Clear connection cache when nodes change\n    connectionCacheRef.current.clear();\n  }, [dimensions, nodeCount, animationSpeed, updateSpatialGrid]);\n\n  /**\n   * Find connections using spatial partitioning\n   */\n  const findConnections = useCallback((): Connection[] => {\n    // Check cache first if enabled\n    if (perfConfig.cacheConnections && frameCountRef.current % 5 !== 0) {\n      const cached = connectionCacheRef.current.get('current');\n      if (cached) return cached;\n    }\n\n    const connections: Connection[] = [];\n    const processed = new Set<string>();\n\n    nodesRef.current.forEach((nodeA, indexA) => {\n      const neighborCells = getNeighboringCells(nodeA.x, nodeA.y);\n\n      neighborCells.forEach(cellKey => {\n        const nodesInCell = spatialGridRef.current.get(cellKey) || [];\n\n        nodesInCell.forEach(nodeB => {\n          if (nodeA.id >= nodeB.id) return; // Avoid duplicates\n\n          const pairKey = `${nodeA.id}-${nodeB.id}`;\n          if (processed.has(pairKey)) return;\n          processed.add(pairKey);\n\n          const dx = nodeA.x - nodeB.x;\n          const dy = nodeA.y - nodeB.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n\n          if (distance < connectionDistance) {\n            const opacity = Math.max(0, 1 - distance / connectionDistance);\n            connections.push({\n              from: nodeA,\n              to: nodeB,\n              opacity: opacity * 0.3,\n              strength: opacity\n            });\n          }\n        });\n      });\n    });\n\n    // Cache connections if enabled\n    if (perfConfig.cacheConnections) {\n      connectionCacheRef.current.set('current', connections);\n    }\n\n    return connections;\n  }, [connectionDistance, perfConfig.cacheConnections]);\n\n  /**\n   * Animation loop\n   */\n  const animate = useCallback(() => {\n    if (!canvasRef.current || dimensions.width === 0 || dimensions.height === 0) return;\n\n    // Pause animation when tab is hidden\n    if (!isVisibleRef.current) {\n      animationRef.current = undefined;\n      return;\n    }\n\n    const currentTime = performance.now();\n    const deltaTime = currentTime - lastFrameTimeRef.current;\n\n    // Frame rate limiting\n    if (deltaTime < targetFrameTime) {\n      animationRef.current = requestAnimationFrame(animate);\n      return;\n    }\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d', { alpha: false });\n    if (!ctx) return;\n\n    // Clear canvas\n    ctx.fillStyle = 'transparent';\n    ctx.fillRect(0, 0, dimensions.width, dimensions.height);\n\n    // Update nodes with frame-independent movement\n    const speedMultiplier = deltaTime / 16.67; // Normalize to 60fps baseline\n\n    nodesRef.current.forEach(node => {\n      // Update position\n      node.x += node.vx * speedMultiplier;\n      node.y += node.vy * speedMultiplier;\n\n      // Bounce off edges\n      if (node.x <= 0 || node.x >= dimensions.width) {\n        node.vx *= -1;\n        node.x = Math.max(0, Math.min(dimensions.width, node.x));\n      }\n      if (node.y <= 0 || node.y >= dimensions.height) {\n        node.vy *= -1;\n        node.y = Math.max(0, Math.min(dimensions.height, node.y));\n      }\n\n      // Update pulse (slower for better performance)\n      node.pulsePhase += 0.01 * speedMultiplier;\n      node.opacity = 0.3 + 0.4 * Math.sin(node.pulsePhase);\n    });\n\n    // Update spatial grid periodically\n    if (frameCountRef.current % 10 === 0) {\n      updateSpatialGrid();\n    }\n\n    // Find and draw connections\n    const connections = findConnections();\n\n    // Draw connections with reduced quality for performance\n    ctx.lineWidth = 1;\n    connections.forEach(connection => {\n      ctx.beginPath();\n      ctx.moveTo(connection.from.x, connection.from.y);\n      ctx.lineTo(connection.to.x, connection.to.y);\n\n      // Simplified gradient for performance\n      ctx.strokeStyle = hexToRgba(colors.connections, connection.opacity);\n      ctx.stroke();\n    });\n\n    // Draw nodes with reduced effects\n    nodesRef.current.forEach(node => {\n      ctx.beginPath();\n      ctx.arc(node.x, node.y, node.size, 0, Math.PI * 2);\n\n      // Get color based on type\n      let color = colors.primary;\n      if (node.type === 'secondary') color = colors.secondary;\n      if (node.type === 'accent') color = colors.accent;\n\n      // Simple fill without gradient for performance\n      ctx.fillStyle = hexToRgba(color, node.opacity);\n      ctx.fill();\n    });\n\n    // Update frame tracking\n    lastFrameTimeRef.current = currentTime;\n    frameCountRef.current++;\n\n    // Calculate actual FPS periodically\n    if (frameCountRef.current % 60 === 0) {\n      const avgFrameTime = deltaTime;\n      fpsRef.current = Math.round(1000 / avgFrameTime);\n    }\n\n    animationRef.current = requestAnimationFrame(animate);\n  }, [\n    dimensions,\n    colors,\n    targetFrameTime,\n    updateSpatialGrid,\n    findConnections,\n    hexToRgba\n  ]);\n\n  /**\n   * Start animation\n   */\n  useEffect(() => {\n    if (!canvasRef.current || dimensions.width === 0 || dimensions.height === 0) return;\n\n    const canvas = canvasRef.current;\n    canvas.width = dimensions.width;\n    canvas.height = dimensions.height;\n\n    lastFrameTimeRef.current = performance.now();\n    animate();\n\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [dimensions, animate]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      className=\"fixed inset-0 w-full h-full pointer-events-none\"\n      style={{\n        zIndex: -1,\n        background: 'radial-gradient(ellipse at center, rgba(59, 130, 246, 0.05) 0%, rgba(139, 92, 246, 0.05) 35%, rgba(6, 182, 212, 0.05) 70%, transparent 100%)',\n        willChange: 'transform',\n        transform: 'translateZ(0)', // Force GPU acceleration\n      }}\n      aria-hidden=\"true\"\n    />\n  );\n};\n\nexport default NeuralNetworkBackgroundOptimized;"],
      names: ["NeuralNetworkBackgroundOptimized", "nodeCount", "defaultNodeCount", "connectionDistance", "animationSpeed", "colors", "primary", "secondary", "accent", "connections", "performanceMode", "canvasRef", "useRef", "animationRef", "nodesRef", "lastFrameTimeRef", "frameCountRef", "fpsRef", "spatialGridRef", "Map", "connectionCacheRef", "isVisibleRef", "dimensions", "setDimensions", "useState", "width", "height", "perfConfig", "high", "fps", "nodeMultiplier", "cacheConnections", "balanced", "low", "isMobile", "window", "innerWidth", "Math", "floor", "targetFrameTime", "GRID_SIZE", "getGridKey", "x", "y", "gridX", "gridY", "getNeighboringCells", "cells", "dx", "dy", "push", "updateSpatialGrid", "useCallback", "newGrid", "current", "forEach", "node", "key", "has", "set", "get", "gridIndex", "length", "hexToRgba", "hex", "alpha", "r", "parseInt", "slice", "g", "b", "useEffect", "updateDimensions", "innerHeight", "resizeTimer", "handleResize", "clearTimeout", "setTimeout", "addEventListener", "removeEventListener", "handleVisibilityChange", "document", "hidden", "undefined", "performance", "now", "animate", "nodes", "nodeTypes", "i", "id", "random", "vx", "vy", "size", "opacity", "pulsePhase", "PI", "type", "clear", "findConnections", "cached", "processed", "Set", "nodeA", "indexA", "neighborCells", "cellKey", "nodesInCell", "nodeB", "pairKey", "add", "distance", "sqrt", "max", "from", "to", "strength", "currentTime", "deltaTime", "requestAnimationFrame", "canvas", "ctx", "getContext", "fillStyle", "fillRect", "speedMultiplier", "min", "sin", "lineWidth", "connection", "beginPath", "moveTo", "lineTo", "strokeStyle", "stroke", "arc", "color", "fill", "avgFrameTime", "round", "cancelAnimationFrame", "ref", "className", "style", "zIndex", "background", "willChange", "transform", "aria-hidden"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b0807e9c71f47b394d22619a9c8b6aaf83596848"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_27uvwgl88b = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_27uvwgl88b();
cov_27uvwgl88b().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_27uvwgl88b().f[0]++;
  cov_27uvwgl88b().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_27uvwgl88b().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_27uvwgl88b().s[3]++;
_export(exports, {
  NeuralNetworkBackgroundOptimized: function () {
    /* istanbul ignore next */
    cov_27uvwgl88b().f[1]++;
    cov_27uvwgl88b().s[4]++;
    return NeuralNetworkBackgroundOptimized;
  },
  default: function () {
    /* istanbul ignore next */
    cov_27uvwgl88b().f[2]++;
    cov_27uvwgl88b().s[5]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_27uvwgl88b().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_27uvwgl88b().s[7]++, _interop_require_wildcard(require("react")));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_27uvwgl88b().f[3]++;
  cov_27uvwgl88b().s[8]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_27uvwgl88b().b[0][0]++;
    cov_27uvwgl88b().s[9]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_27uvwgl88b().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_27uvwgl88b().s[10]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_27uvwgl88b().s[11]++, new WeakMap());
  /* istanbul ignore next */
  cov_27uvwgl88b().s[12]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_27uvwgl88b().f[4]++;
    cov_27uvwgl88b().s[13]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_27uvwgl88b().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_27uvwgl88b().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_27uvwgl88b().f[5]++;
  cov_27uvwgl88b().s[14]++;
  if (
  /* istanbul ignore next */
  (cov_27uvwgl88b().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_27uvwgl88b().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_27uvwgl88b().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_27uvwgl88b().b[2][0]++;
    cov_27uvwgl88b().s[15]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_27uvwgl88b().b[2][1]++;
  }
  cov_27uvwgl88b().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_27uvwgl88b().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_27uvwgl88b().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_27uvwgl88b().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_27uvwgl88b().b[4][0]++;
    cov_27uvwgl88b().s[17]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_27uvwgl88b().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_27uvwgl88b().s[18]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_27uvwgl88b().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_27uvwgl88b().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_27uvwgl88b().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_27uvwgl88b().b[6][0]++;
    cov_27uvwgl88b().s[20]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_27uvwgl88b().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_27uvwgl88b().s[21]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_27uvwgl88b().s[22]++,
  /* istanbul ignore next */
  (cov_27uvwgl88b().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_27uvwgl88b().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_27uvwgl88b().s[23]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_27uvwgl88b().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_27uvwgl88b().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_27uvwgl88b().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_27uvwgl88b().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_27uvwgl88b().s[25]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_27uvwgl88b().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_27uvwgl88b().b[11][1]++, null));
      /* istanbul ignore next */
      cov_27uvwgl88b().s[26]++;
      if (
      /* istanbul ignore next */
      (cov_27uvwgl88b().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_27uvwgl88b().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_27uvwgl88b().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_27uvwgl88b().b[12][0]++;
        cov_27uvwgl88b().s[27]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_27uvwgl88b().b[12][1]++;
        cov_27uvwgl88b().s[28]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_27uvwgl88b().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_27uvwgl88b().s[29]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_27uvwgl88b().s[30]++;
  if (cache) {
    /* istanbul ignore next */
    cov_27uvwgl88b().b[14][0]++;
    cov_27uvwgl88b().s[31]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_27uvwgl88b().b[14][1]++;
  }
  cov_27uvwgl88b().s[32]++;
  return newObj;
}
/* istanbul ignore next */
cov_27uvwgl88b().s[33]++;
const NeuralNetworkBackgroundOptimized = ({
  nodeCount: defaultNodeCount =
  /* istanbul ignore next */
  (cov_27uvwgl88b().b[15][0]++, 80),
  connectionDistance =
  /* istanbul ignore next */
  (cov_27uvwgl88b().b[16][0]++, 150),
  animationSpeed =
  /* istanbul ignore next */
  (cov_27uvwgl88b().b[17][0]++, 0.5),
  colors =
  /* istanbul ignore next */
  (cov_27uvwgl88b().b[18][0]++, {
    primary: "#3b82f6",
    secondary: "#8b5cf6",
    accent: "#06b6d4",
    connections: "#3b82f6"
  }),
  performanceMode =
  /* istanbul ignore next */
  (cov_27uvwgl88b().b[19][0]++, "balanced")
}) => {
  /* istanbul ignore next */
  cov_27uvwgl88b().f[6]++;
  const canvasRef =
  /* istanbul ignore next */
  (cov_27uvwgl88b().s[34]++, (0, _react.useRef)(null));
  const animationRef =
  /* istanbul ignore next */
  (cov_27uvwgl88b().s[35]++, (0, _react.useRef)());
  const nodesRef =
  /* istanbul ignore next */
  (cov_27uvwgl88b().s[36]++, (0, _react.useRef)([]));
  const lastFrameTimeRef =
  /* istanbul ignore next */
  (cov_27uvwgl88b().s[37]++, (0, _react.useRef)(0));
  const frameCountRef =
  /* istanbul ignore next */
  (cov_27uvwgl88b().s[38]++, (0, _react.useRef)(0));
  const fpsRef =
  /* istanbul ignore next */
  (cov_27uvwgl88b().s[39]++, (0, _react.useRef)(60));
  const spatialGridRef =
  /* istanbul ignore next */
  (cov_27uvwgl88b().s[40]++, (0, _react.useRef)(new Map()));
  const connectionCacheRef =
  /* istanbul ignore next */
  (cov_27uvwgl88b().s[41]++, (0, _react.useRef)(new Map()));
  const isVisibleRef =
  /* istanbul ignore next */
  (cov_27uvwgl88b().s[42]++, (0, _react.useRef)(true));
  const [dimensions, setDimensions] =
  /* istanbul ignore next */
  (cov_27uvwgl88b().s[43]++, (0, _react.useState)({
    width: 0,
    height: 0
  }));
  // Performance configuration based on mode
  const perfConfig =
  /* istanbul ignore next */
  (cov_27uvwgl88b().s[44]++, {
    high: {
      fps: 60,
      nodeMultiplier: 1,
      cacheConnections: false
    },
    balanced: {
      fps: 30,
      nodeMultiplier: 0.7,
      cacheConnections: true
    },
    low: {
      fps: 15,
      nodeMultiplier: 0.4,
      cacheConnections: true
    }
  }[performanceMode]);
  // Detect mobile and reduce node count
  const isMobile =
  /* istanbul ignore next */
  (cov_27uvwgl88b().s[45]++,
  /* istanbul ignore next */
  (cov_27uvwgl88b().b[20][0]++, typeof window !== "undefined") &&
  /* istanbul ignore next */
  (cov_27uvwgl88b().b[20][1]++, window.innerWidth < 768));
  const nodeCount =
  /* istanbul ignore next */
  (cov_27uvwgl88b().s[46]++, Math.floor((isMobile ?
  /* istanbul ignore next */
  (cov_27uvwgl88b().b[21][0]++, defaultNodeCount * 0.5) :
  /* istanbul ignore next */
  (cov_27uvwgl88b().b[21][1]++, defaultNodeCount)) * perfConfig.nodeMultiplier));
  // Target frame time based on desired FPS
  const targetFrameTime =
  /* istanbul ignore next */
  (cov_27uvwgl88b().s[47]++, 1000 / perfConfig.fps);
  // Grid size for spatial partitioning
  const GRID_SIZE =
  /* istanbul ignore next */
  (cov_27uvwgl88b().s[48]++, connectionDistance);
  /**
  * Get grid key for spatial indexing
  */
  /* istanbul ignore next */
  cov_27uvwgl88b().s[49]++;
  const getGridKey = (x, y) => {
    /* istanbul ignore next */
    cov_27uvwgl88b().f[7]++;
    const gridX =
    /* istanbul ignore next */
    (cov_27uvwgl88b().s[50]++, Math.floor(x / GRID_SIZE));
    const gridY =
    /* istanbul ignore next */
    (cov_27uvwgl88b().s[51]++, Math.floor(y / GRID_SIZE));
    /* istanbul ignore next */
    cov_27uvwgl88b().s[52]++;
    return `${gridX},${gridY}`;
  };
  /**
  * Get neighboring grid cells for connection search
  */
  /* istanbul ignore next */
  cov_27uvwgl88b().s[53]++;
  const getNeighboringCells = (x, y) => {
    /* istanbul ignore next */
    cov_27uvwgl88b().f[8]++;
    const gridX =
    /* istanbul ignore next */
    (cov_27uvwgl88b().s[54]++, Math.floor(x / GRID_SIZE));
    const gridY =
    /* istanbul ignore next */
    (cov_27uvwgl88b().s[55]++, Math.floor(y / GRID_SIZE));
    const cells =
    /* istanbul ignore next */
    (cov_27uvwgl88b().s[56]++, []);
    /* istanbul ignore next */
    cov_27uvwgl88b().s[57]++;
    for (let dx =
    /* istanbul ignore next */
    (cov_27uvwgl88b().s[58]++, -1); dx <= 1; dx++) {
      /* istanbul ignore next */
      cov_27uvwgl88b().s[59]++;
      for (let dy =
      /* istanbul ignore next */
      (cov_27uvwgl88b().s[60]++, -1); dy <= 1; dy++) {
        /* istanbul ignore next */
        cov_27uvwgl88b().s[61]++;
        cells.push(`${gridX + dx},${gridY + dy}`);
      }
    }
    /* istanbul ignore next */
    cov_27uvwgl88b().s[62]++;
    return cells;
  };
  /**
  * Update spatial grid with node positions
  */
  const updateSpatialGrid =
  /* istanbul ignore next */
  (cov_27uvwgl88b().s[63]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_27uvwgl88b().f[9]++;
    const newGrid =
    /* istanbul ignore next */
    (cov_27uvwgl88b().s[64]++, new Map());
    /* istanbul ignore next */
    cov_27uvwgl88b().s[65]++;
    nodesRef.current.forEach(node => {
      /* istanbul ignore next */
      cov_27uvwgl88b().f[10]++;
      const key =
      /* istanbul ignore next */
      (cov_27uvwgl88b().s[66]++, getGridKey(node.x, node.y));
      /* istanbul ignore next */
      cov_27uvwgl88b().s[67]++;
      if (!newGrid.has(key)) {
        /* istanbul ignore next */
        cov_27uvwgl88b().b[22][0]++;
        cov_27uvwgl88b().s[68]++;
        newGrid.set(key, []);
      } else
      /* istanbul ignore next */
      {
        cov_27uvwgl88b().b[22][1]++;
      }
      cov_27uvwgl88b().s[69]++;
      newGrid.get(key).push(node);
      /* istanbul ignore next */
      cov_27uvwgl88b().s[70]++;
      node.gridIndex = newGrid.get(key).length - 1;
    });
    /* istanbul ignore next */
    cov_27uvwgl88b().s[71]++;
    spatialGridRef.current = newGrid;
  }, []));
  /**
  * Convert hex to rgba
  */
  const hexToRgba =
  /* istanbul ignore next */
  (cov_27uvwgl88b().s[72]++, (0, _react.useCallback)((hex, alpha) => {
    /* istanbul ignore next */
    cov_27uvwgl88b().f[11]++;
    const r =
    /* istanbul ignore next */
    (cov_27uvwgl88b().s[73]++, parseInt(hex.slice(1, 3), 16));
    const g =
    /* istanbul ignore next */
    (cov_27uvwgl88b().s[74]++, parseInt(hex.slice(3, 5), 16));
    const b =
    /* istanbul ignore next */
    (cov_27uvwgl88b().s[75]++, parseInt(hex.slice(5, 7), 16));
    /* istanbul ignore next */
    cov_27uvwgl88b().s[76]++;
    return `rgba(${r}, ${g}, ${b}, ${alpha})`;
  }, []));
  /**
  * Handle window resize
  */
  /* istanbul ignore next */
  cov_27uvwgl88b().s[77]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_27uvwgl88b().f[12]++;
    cov_27uvwgl88b().s[78]++;
    const updateDimensions = () => {
      /* istanbul ignore next */
      cov_27uvwgl88b().f[13]++;
      cov_27uvwgl88b().s[79]++;
      setDimensions({
        width: window.innerWidth,
        height: window.innerHeight
      });
    };
    /* istanbul ignore next */
    cov_27uvwgl88b().s[80]++;
    updateDimensions();
    // Debounced resize handler
    let resizeTimer;
    /* istanbul ignore next */
    cov_27uvwgl88b().s[81]++;
    const handleResize = () => {
      /* istanbul ignore next */
      cov_27uvwgl88b().f[14]++;
      cov_27uvwgl88b().s[82]++;
      clearTimeout(resizeTimer);
      /* istanbul ignore next */
      cov_27uvwgl88b().s[83]++;
      resizeTimer = setTimeout(updateDimensions, 250);
    };
    /* istanbul ignore next */
    cov_27uvwgl88b().s[84]++;
    window.addEventListener("resize", handleResize);
    /* istanbul ignore next */
    cov_27uvwgl88b().s[85]++;
    return () => {
      /* istanbul ignore next */
      cov_27uvwgl88b().f[15]++;
      cov_27uvwgl88b().s[86]++;
      clearTimeout(resizeTimer);
      /* istanbul ignore next */
      cov_27uvwgl88b().s[87]++;
      window.removeEventListener("resize", handleResize);
    };
  }, []);
  /**
  * Handle visibility change
  */
  /* istanbul ignore next */
  cov_27uvwgl88b().s[88]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_27uvwgl88b().f[16]++;
    cov_27uvwgl88b().s[89]++;
    const handleVisibilityChange = () => {
      /* istanbul ignore next */
      cov_27uvwgl88b().f[17]++;
      cov_27uvwgl88b().s[90]++;
      isVisibleRef.current = !document.hidden;
      /* istanbul ignore next */
      cov_27uvwgl88b().s[91]++;
      if (
      /* istanbul ignore next */
      (cov_27uvwgl88b().b[24][0]++, !document.hidden) &&
      /* istanbul ignore next */
      (cov_27uvwgl88b().b[24][1]++, animationRef.current === undefined)) {
        /* istanbul ignore next */
        cov_27uvwgl88b().b[23][0]++;
        cov_27uvwgl88b().s[92]++;
        // Resume animation when tab becomes visible
        lastFrameTimeRef.current = performance.now();
        /* istanbul ignore next */
        cov_27uvwgl88b().s[93]++;
        animate();
      } else
      /* istanbul ignore next */
      {
        cov_27uvwgl88b().b[23][1]++;
      }
    };
    /* istanbul ignore next */
    cov_27uvwgl88b().s[94]++;
    document.addEventListener("visibilitychange", handleVisibilityChange);
    /* istanbul ignore next */
    cov_27uvwgl88b().s[95]++;
    return () => {
      /* istanbul ignore next */
      cov_27uvwgl88b().f[18]++;
      cov_27uvwgl88b().s[96]++;
      return document.removeEventListener("visibilitychange", handleVisibilityChange);
    };
  }, []);
  /**
  * Initialize nodes
  */
  /* istanbul ignore next */
  cov_27uvwgl88b().s[97]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_27uvwgl88b().f[19]++;
    cov_27uvwgl88b().s[98]++;
    if (
    /* istanbul ignore next */
    (cov_27uvwgl88b().b[26][0]++, dimensions.width === 0) ||
    /* istanbul ignore next */
    (cov_27uvwgl88b().b[26][1]++, dimensions.height === 0)) {
      /* istanbul ignore next */
      cov_27uvwgl88b().b[25][0]++;
      cov_27uvwgl88b().s[99]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_27uvwgl88b().b[25][1]++;
    }
    const nodes =
    /* istanbul ignore next */
    (cov_27uvwgl88b().s[100]++, []);
    const nodeTypes =
    /* istanbul ignore next */
    (cov_27uvwgl88b().s[101]++, ["primary", "secondary", "accent"]);
    /* istanbul ignore next */
    cov_27uvwgl88b().s[102]++;
    for (let i =
    /* istanbul ignore next */
    (cov_27uvwgl88b().s[103]++, 0); i < nodeCount; i++) {
      /* istanbul ignore next */
      cov_27uvwgl88b().s[104]++;
      nodes.push({
        id: i,
        x: Math.random() * dimensions.width,
        y: Math.random() * dimensions.height,
        vx: (Math.random() - 0.5) * animationSpeed,
        vy: (Math.random() - 0.5) * animationSpeed,
        size: Math.random() * 4 + 2,
        opacity: Math.random() * 0.7 + 0.3,
        pulsePhase: Math.random() * Math.PI * 2,
        type: nodeTypes[Math.floor(Math.random() * nodeTypes.length)]
      });
    }
    /* istanbul ignore next */
    cov_27uvwgl88b().s[105]++;
    nodesRef.current = nodes;
    /* istanbul ignore next */
    cov_27uvwgl88b().s[106]++;
    updateSpatialGrid();
    // Clear connection cache when nodes change
    /* istanbul ignore next */
    cov_27uvwgl88b().s[107]++;
    connectionCacheRef.current.clear();
  }, [dimensions, nodeCount, animationSpeed, updateSpatialGrid]);
  /**
  * Find connections using spatial partitioning
  */
  const findConnections =
  /* istanbul ignore next */
  (cov_27uvwgl88b().s[108]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_27uvwgl88b().f[20]++;
    cov_27uvwgl88b().s[109]++;
    // Check cache first if enabled
    if (
    /* istanbul ignore next */
    (cov_27uvwgl88b().b[28][0]++, perfConfig.cacheConnections) &&
    /* istanbul ignore next */
    (cov_27uvwgl88b().b[28][1]++, frameCountRef.current % 5 !== 0)) {
      /* istanbul ignore next */
      cov_27uvwgl88b().b[27][0]++;
      const cached =
      /* istanbul ignore next */
      (cov_27uvwgl88b().s[110]++, connectionCacheRef.current.get("current"));
      /* istanbul ignore next */
      cov_27uvwgl88b().s[111]++;
      if (cached) {
        /* istanbul ignore next */
        cov_27uvwgl88b().b[29][0]++;
        cov_27uvwgl88b().s[112]++;
        return cached;
      } else
      /* istanbul ignore next */
      {
        cov_27uvwgl88b().b[29][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_27uvwgl88b().b[27][1]++;
    }
    const connections =
    /* istanbul ignore next */
    (cov_27uvwgl88b().s[113]++, []);
    const processed =
    /* istanbul ignore next */
    (cov_27uvwgl88b().s[114]++, new Set());
    /* istanbul ignore next */
    cov_27uvwgl88b().s[115]++;
    nodesRef.current.forEach((nodeA, indexA) => {
      /* istanbul ignore next */
      cov_27uvwgl88b().f[21]++;
      const neighborCells =
      /* istanbul ignore next */
      (cov_27uvwgl88b().s[116]++, getNeighboringCells(nodeA.x, nodeA.y));
      /* istanbul ignore next */
      cov_27uvwgl88b().s[117]++;
      neighborCells.forEach(cellKey => {
        /* istanbul ignore next */
        cov_27uvwgl88b().f[22]++;
        const nodesInCell =
        /* istanbul ignore next */
        (cov_27uvwgl88b().s[118]++,
        /* istanbul ignore next */
        (cov_27uvwgl88b().b[30][0]++, spatialGridRef.current.get(cellKey)) ||
        /* istanbul ignore next */
        (cov_27uvwgl88b().b[30][1]++, []));
        /* istanbul ignore next */
        cov_27uvwgl88b().s[119]++;
        nodesInCell.forEach(nodeB => {
          /* istanbul ignore next */
          cov_27uvwgl88b().f[23]++;
          cov_27uvwgl88b().s[120]++;
          if (nodeA.id >= nodeB.id) {
            /* istanbul ignore next */
            cov_27uvwgl88b().b[31][0]++;
            cov_27uvwgl88b().s[121]++;
            return;
          } else
          /* istanbul ignore next */
          {
            cov_27uvwgl88b().b[31][1]++;
          } // Avoid duplicates
          const pairKey =
          /* istanbul ignore next */
          (cov_27uvwgl88b().s[122]++, `${nodeA.id}-${nodeB.id}`);
          /* istanbul ignore next */
          cov_27uvwgl88b().s[123]++;
          if (processed.has(pairKey)) {
            /* istanbul ignore next */
            cov_27uvwgl88b().b[32][0]++;
            cov_27uvwgl88b().s[124]++;
            return;
          } else
          /* istanbul ignore next */
          {
            cov_27uvwgl88b().b[32][1]++;
          }
          cov_27uvwgl88b().s[125]++;
          processed.add(pairKey);
          const dx =
          /* istanbul ignore next */
          (cov_27uvwgl88b().s[126]++, nodeA.x - nodeB.x);
          const dy =
          /* istanbul ignore next */
          (cov_27uvwgl88b().s[127]++, nodeA.y - nodeB.y);
          const distance =
          /* istanbul ignore next */
          (cov_27uvwgl88b().s[128]++, Math.sqrt(dx * dx + dy * dy));
          /* istanbul ignore next */
          cov_27uvwgl88b().s[129]++;
          if (distance < connectionDistance) {
            /* istanbul ignore next */
            cov_27uvwgl88b().b[33][0]++;
            const opacity =
            /* istanbul ignore next */
            (cov_27uvwgl88b().s[130]++, Math.max(0, 1 - distance / connectionDistance));
            /* istanbul ignore next */
            cov_27uvwgl88b().s[131]++;
            connections.push({
              from: nodeA,
              to: nodeB,
              opacity: opacity * 0.3,
              strength: opacity
            });
          } else
          /* istanbul ignore next */
          {
            cov_27uvwgl88b().b[33][1]++;
          }
        });
      });
    });
    // Cache connections if enabled
    /* istanbul ignore next */
    cov_27uvwgl88b().s[132]++;
    if (perfConfig.cacheConnections) {
      /* istanbul ignore next */
      cov_27uvwgl88b().b[34][0]++;
      cov_27uvwgl88b().s[133]++;
      connectionCacheRef.current.set("current", connections);
    } else
    /* istanbul ignore next */
    {
      cov_27uvwgl88b().b[34][1]++;
    }
    cov_27uvwgl88b().s[134]++;
    return connections;
  }, [connectionDistance, perfConfig.cacheConnections]));
  /**
  * Animation loop
  */
  const animate =
  /* istanbul ignore next */
  (cov_27uvwgl88b().s[135]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_27uvwgl88b().f[24]++;
    cov_27uvwgl88b().s[136]++;
    if (
    /* istanbul ignore next */
    (cov_27uvwgl88b().b[36][0]++, !canvasRef.current) ||
    /* istanbul ignore next */
    (cov_27uvwgl88b().b[36][1]++, dimensions.width === 0) ||
    /* istanbul ignore next */
    (cov_27uvwgl88b().b[36][2]++, dimensions.height === 0)) {
      /* istanbul ignore next */
      cov_27uvwgl88b().b[35][0]++;
      cov_27uvwgl88b().s[137]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_27uvwgl88b().b[35][1]++;
    }
    // Pause animation when tab is hidden
    cov_27uvwgl88b().s[138]++;
    if (!isVisibleRef.current) {
      /* istanbul ignore next */
      cov_27uvwgl88b().b[37][0]++;
      cov_27uvwgl88b().s[139]++;
      animationRef.current = undefined;
      /* istanbul ignore next */
      cov_27uvwgl88b().s[140]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_27uvwgl88b().b[37][1]++;
    }
    const currentTime =
    /* istanbul ignore next */
    (cov_27uvwgl88b().s[141]++, performance.now());
    const deltaTime =
    /* istanbul ignore next */
    (cov_27uvwgl88b().s[142]++, currentTime - lastFrameTimeRef.current);
    // Frame rate limiting
    /* istanbul ignore next */
    cov_27uvwgl88b().s[143]++;
    if (deltaTime < targetFrameTime) {
      /* istanbul ignore next */
      cov_27uvwgl88b().b[38][0]++;
      cov_27uvwgl88b().s[144]++;
      animationRef.current = requestAnimationFrame(animate);
      /* istanbul ignore next */
      cov_27uvwgl88b().s[145]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_27uvwgl88b().b[38][1]++;
    }
    const canvas =
    /* istanbul ignore next */
    (cov_27uvwgl88b().s[146]++, canvasRef.current);
    const ctx =
    /* istanbul ignore next */
    (cov_27uvwgl88b().s[147]++, canvas.getContext("2d", {
      alpha: false
    }));
    /* istanbul ignore next */
    cov_27uvwgl88b().s[148]++;
    if (!ctx) {
      /* istanbul ignore next */
      cov_27uvwgl88b().b[39][0]++;
      cov_27uvwgl88b().s[149]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_27uvwgl88b().b[39][1]++;
    }
    // Clear canvas
    cov_27uvwgl88b().s[150]++;
    ctx.fillStyle = "transparent";
    /* istanbul ignore next */
    cov_27uvwgl88b().s[151]++;
    ctx.fillRect(0, 0, dimensions.width, dimensions.height);
    // Update nodes with frame-independent movement
    const speedMultiplier =
    /* istanbul ignore next */
    (cov_27uvwgl88b().s[152]++, deltaTime / 16.67); // Normalize to 60fps baseline
    /* istanbul ignore next */
    cov_27uvwgl88b().s[153]++;
    nodesRef.current.forEach(node => {
      /* istanbul ignore next */
      cov_27uvwgl88b().f[25]++;
      cov_27uvwgl88b().s[154]++;
      // Update position
      node.x += node.vx * speedMultiplier;
      /* istanbul ignore next */
      cov_27uvwgl88b().s[155]++;
      node.y += node.vy * speedMultiplier;
      // Bounce off edges
      /* istanbul ignore next */
      cov_27uvwgl88b().s[156]++;
      if (
      /* istanbul ignore next */
      (cov_27uvwgl88b().b[41][0]++, node.x <= 0) ||
      /* istanbul ignore next */
      (cov_27uvwgl88b().b[41][1]++, node.x >= dimensions.width)) {
        /* istanbul ignore next */
        cov_27uvwgl88b().b[40][0]++;
        cov_27uvwgl88b().s[157]++;
        node.vx *= -1;
        /* istanbul ignore next */
        cov_27uvwgl88b().s[158]++;
        node.x = Math.max(0, Math.min(dimensions.width, node.x));
      } else
      /* istanbul ignore next */
      {
        cov_27uvwgl88b().b[40][1]++;
      }
      cov_27uvwgl88b().s[159]++;
      if (
      /* istanbul ignore next */
      (cov_27uvwgl88b().b[43][0]++, node.y <= 0) ||
      /* istanbul ignore next */
      (cov_27uvwgl88b().b[43][1]++, node.y >= dimensions.height)) {
        /* istanbul ignore next */
        cov_27uvwgl88b().b[42][0]++;
        cov_27uvwgl88b().s[160]++;
        node.vy *= -1;
        /* istanbul ignore next */
        cov_27uvwgl88b().s[161]++;
        node.y = Math.max(0, Math.min(dimensions.height, node.y));
      } else
      /* istanbul ignore next */
      {
        cov_27uvwgl88b().b[42][1]++;
      }
      // Update pulse (slower for better performance)
      cov_27uvwgl88b().s[162]++;
      node.pulsePhase += 0.01 * speedMultiplier;
      /* istanbul ignore next */
      cov_27uvwgl88b().s[163]++;
      node.opacity = 0.3 + 0.4 * Math.sin(node.pulsePhase);
    });
    // Update spatial grid periodically
    /* istanbul ignore next */
    cov_27uvwgl88b().s[164]++;
    if (frameCountRef.current % 10 === 0) {
      /* istanbul ignore next */
      cov_27uvwgl88b().b[44][0]++;
      cov_27uvwgl88b().s[165]++;
      updateSpatialGrid();
    } else
    /* istanbul ignore next */
    {
      cov_27uvwgl88b().b[44][1]++;
    }
    // Find and draw connections
    const connections =
    /* istanbul ignore next */
    (cov_27uvwgl88b().s[166]++, findConnections());
    // Draw connections with reduced quality for performance
    /* istanbul ignore next */
    cov_27uvwgl88b().s[167]++;
    ctx.lineWidth = 1;
    /* istanbul ignore next */
    cov_27uvwgl88b().s[168]++;
    connections.forEach(connection => {
      /* istanbul ignore next */
      cov_27uvwgl88b().f[26]++;
      cov_27uvwgl88b().s[169]++;
      ctx.beginPath();
      /* istanbul ignore next */
      cov_27uvwgl88b().s[170]++;
      ctx.moveTo(connection.from.x, connection.from.y);
      /* istanbul ignore next */
      cov_27uvwgl88b().s[171]++;
      ctx.lineTo(connection.to.x, connection.to.y);
      // Simplified gradient for performance
      /* istanbul ignore next */
      cov_27uvwgl88b().s[172]++;
      ctx.strokeStyle = hexToRgba(colors.connections, connection.opacity);
      /* istanbul ignore next */
      cov_27uvwgl88b().s[173]++;
      ctx.stroke();
    });
    // Draw nodes with reduced effects
    /* istanbul ignore next */
    cov_27uvwgl88b().s[174]++;
    nodesRef.current.forEach(node => {
      /* istanbul ignore next */
      cov_27uvwgl88b().f[27]++;
      cov_27uvwgl88b().s[175]++;
      ctx.beginPath();
      /* istanbul ignore next */
      cov_27uvwgl88b().s[176]++;
      ctx.arc(node.x, node.y, node.size, 0, Math.PI * 2);
      // Get color based on type
      let color =
      /* istanbul ignore next */
      (cov_27uvwgl88b().s[177]++, colors.primary);
      /* istanbul ignore next */
      cov_27uvwgl88b().s[178]++;
      if (node.type === "secondary") {
        /* istanbul ignore next */
        cov_27uvwgl88b().b[45][0]++;
        cov_27uvwgl88b().s[179]++;
        color = colors.secondary;
      } else
      /* istanbul ignore next */
      {
        cov_27uvwgl88b().b[45][1]++;
      }
      cov_27uvwgl88b().s[180]++;
      if (node.type === "accent") {
        /* istanbul ignore next */
        cov_27uvwgl88b().b[46][0]++;
        cov_27uvwgl88b().s[181]++;
        color = colors.accent;
      } else
      /* istanbul ignore next */
      {
        cov_27uvwgl88b().b[46][1]++;
      }
      // Simple fill without gradient for performance
      cov_27uvwgl88b().s[182]++;
      ctx.fillStyle = hexToRgba(color, node.opacity);
      /* istanbul ignore next */
      cov_27uvwgl88b().s[183]++;
      ctx.fill();
    });
    // Update frame tracking
    /* istanbul ignore next */
    cov_27uvwgl88b().s[184]++;
    lastFrameTimeRef.current = currentTime;
    /* istanbul ignore next */
    cov_27uvwgl88b().s[185]++;
    frameCountRef.current++;
    // Calculate actual FPS periodically
    /* istanbul ignore next */
    cov_27uvwgl88b().s[186]++;
    if (frameCountRef.current % 60 === 0) {
      /* istanbul ignore next */
      cov_27uvwgl88b().b[47][0]++;
      const avgFrameTime =
      /* istanbul ignore next */
      (cov_27uvwgl88b().s[187]++, deltaTime);
      /* istanbul ignore next */
      cov_27uvwgl88b().s[188]++;
      fpsRef.current = Math.round(1000 / avgFrameTime);
    } else
    /* istanbul ignore next */
    {
      cov_27uvwgl88b().b[47][1]++;
    }
    cov_27uvwgl88b().s[189]++;
    animationRef.current = requestAnimationFrame(animate);
  }, [dimensions, colors, targetFrameTime, updateSpatialGrid, findConnections, hexToRgba]));
  /**
  * Start animation
  */
  /* istanbul ignore next */
  cov_27uvwgl88b().s[190]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_27uvwgl88b().f[28]++;
    cov_27uvwgl88b().s[191]++;
    if (
    /* istanbul ignore next */
    (cov_27uvwgl88b().b[49][0]++, !canvasRef.current) ||
    /* istanbul ignore next */
    (cov_27uvwgl88b().b[49][1]++, dimensions.width === 0) ||
    /* istanbul ignore next */
    (cov_27uvwgl88b().b[49][2]++, dimensions.height === 0)) {
      /* istanbul ignore next */
      cov_27uvwgl88b().b[48][0]++;
      cov_27uvwgl88b().s[192]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_27uvwgl88b().b[48][1]++;
    }
    const canvas =
    /* istanbul ignore next */
    (cov_27uvwgl88b().s[193]++, canvasRef.current);
    /* istanbul ignore next */
    cov_27uvwgl88b().s[194]++;
    canvas.width = dimensions.width;
    /* istanbul ignore next */
    cov_27uvwgl88b().s[195]++;
    canvas.height = dimensions.height;
    /* istanbul ignore next */
    cov_27uvwgl88b().s[196]++;
    lastFrameTimeRef.current = performance.now();
    /* istanbul ignore next */
    cov_27uvwgl88b().s[197]++;
    animate();
    /* istanbul ignore next */
    cov_27uvwgl88b().s[198]++;
    return () => {
      /* istanbul ignore next */
      cov_27uvwgl88b().f[29]++;
      cov_27uvwgl88b().s[199]++;
      if (animationRef.current) {
        /* istanbul ignore next */
        cov_27uvwgl88b().b[50][0]++;
        cov_27uvwgl88b().s[200]++;
        cancelAnimationFrame(animationRef.current);
      } else
      /* istanbul ignore next */
      {
        cov_27uvwgl88b().b[50][1]++;
      }
    };
  }, [dimensions, animate]);
  /* istanbul ignore next */
  cov_27uvwgl88b().s[201]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("canvas", {
    ref: canvasRef,
    className: "fixed inset-0 w-full h-full pointer-events-none",
    style: {
      zIndex: -1,
      background: "radial-gradient(ellipse at center, rgba(59, 130, 246, 0.05) 0%, rgba(139, 92, 246, 0.05) 35%, rgba(6, 182, 212, 0.05) 70%, transparent 100%)",
      willChange: "transform",
      transform: "translateZ(0)"
    },
    "aria-hidden": "true"
  });
};
const _default =
/* istanbul ignore next */
(cov_27uvwgl88b().s[202]++, NeuralNetworkBackgroundOptimized);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,