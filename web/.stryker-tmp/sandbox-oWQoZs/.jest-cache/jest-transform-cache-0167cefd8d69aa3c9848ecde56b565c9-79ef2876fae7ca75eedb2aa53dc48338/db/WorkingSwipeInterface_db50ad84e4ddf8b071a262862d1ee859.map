{"version":3,"names":["cov_154dpwd66p","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","WorkingSwipeInterface","default","_default","sessionType","onSessionComplete","className","isLoading","setIsLoading","_react","useState","products","setProducts","currentIndex","setCurrentIndex","fetchProducts","response","_api","api","getProducts","limit","data","error","console","id","title","description","price","currency","image_url","brand","useEffect","loadProducts","handleKeyPress","event","length","key","preventDefault","handleSwipe","window","addEventListener","removeEventListener","direction","log","completed","totalSwipes","resetSession","currentProduct","_jsxruntime","jsxs","jsx","_lucidereact","Gift","onClick","RotateCcw","src","alt","toFixed","affiliate_url","href","target","rel","style","backgroundColor"],"sources":["/home/jack/Documents/aclue-preprod/web/src/components/swipe/WorkingSwipeInterface.tsx"],"sourcesContent":["/**\n * WorkingSwipeInterface Component\n * \n * Production-ready swipe interface for product discovery and preference collection.\n * This component was specifically created to resolve rendering issues with the original\n * SwipeInterface that had complex dependencies and animation conflicts.\n * \n * Key Features:\n *   - Stable, dependency-minimal implementation\n *   - Real Amazon product integration with fallback mock data\n *   - Tinder-style swipe gestures (left: dislike, right: like)\n *   - Session progress tracking and completion handling\n *   - Responsive design with proper CSS layout\n *   - Loading states and error handling\n * \n * Critical CSS Requirements (from CLAUDE.md):\n *   - Main container: min-h-96 (prevents flex-1 collapse)\n *   - Product cards: absolute inset-4 positioning\n *   - Avoids framer-motion and complex animations\n * \n * Usage:\n *   <WorkingSwipeInterface \n *     sessionType=\"discovery\"\n *     onSessionComplete={(session) => handleComplete(session)}\n *     onRecommendationsReady={() => navigateToRecommendations()}\n *   />\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { Gift, RotateCcw } from 'lucide-react';\nimport { api } from '@/lib/api';\n\n// ==============================================================================\n// TYPE DEFINITIONS\n// ==============================================================================\n\n/**\n * Props interface for WorkingSwipeInterface component.\n * \n * Provides configuration options for different swipe session types\n * and callback handlers for session lifecycle events.\n */\ninterface WorkingSwipeInterfaceProps {\n  sessionType?: string;                           // Type of swipe session (\"discovery\", \"onboarding\", \"gift_selection\")\n  onSessionComplete?: (session: any) => void;     // Called when user completes swipe session\n  onRecommendationsReady?: () => void;            // Called when recommendations should be generated\n  className?: string;                             // Additional CSS classes for styling\n}\n\n/**\n * WorkingSwipeInterface functional component.\n * \n * Manages product data fetching, swipe state, and user interactions\n * for the core product discovery experience.\n */\nexport const WorkingSwipeInterface: React.FC<WorkingSwipeInterfaceProps> = ({\n  sessionType = 'discovery',      // Default to general discovery session\n  onSessionComplete,              // Optional session completion callback\n  className = '',                 // Optional additional styling\n}) => {\n  // ===========================================================================\n  // COMPONENT STATE\n  // ===========================================================================\n  \n  const [isLoading, setIsLoading] = useState(true);     // Loading state for initial data fetch\n  const [products, setProducts] = useState<any[]>([]);  // Array of products to swipe through\n  const [currentIndex, setCurrentIndex] = useState(0);  // Index of currently displayed product\n\n  // ===========================================================================\n  // DATA FETCHING FUNCTIONS\n  // ===========================================================================\n  \n  /**\n   * Fetch real Amazon products from the backend API.\n   * \n   * Attempts to load real product data from the backend. If the API call fails\n   * (e.g., backend not running, network issues), falls back to mock data to\n   * ensure the component remains functional during development.\n   * \n   * API Integration:\n   *   - Calls /api/v1/products/ endpoint with limit parameter\n   *   - Uses absolute URL for development (localhost:8000)\n   *   - In production, would use relative URLs with proxy\n   * \n   * Error Handling:\n   *   - Network errors: Logs error and returns mock data\n   *   - API errors: Throws error and falls back to mock data\n   *   - Malformed response: Handles gracefully with fallback\n   * \n   * Performance:\n   *   - Limits to 5 products for optimal swipe session length\n   *   - Async/await pattern for clean error handling\n   *   - Mock data fallback ensures UI never breaks\n   * \n   * Returns:\n   *   Promise<Product[]>: Array of product objects for swiping\n   */\n  const fetchProducts = async () => {\n    try {\n      // Attempt to fetch real products from backend API using authenticated client\n      const response = await api.products.getProducts({ limit: 5 });\n      return response.data || response; // Handle both wrapped and direct responses\n    } catch (error) {\n      console.error('Failed to fetch products from API, using mock data:', error);\n      // Fallback to local mock data for development reliability\n      return [\n        // ===========================================================================\n        // MOCK PRODUCT DATA\n        // ===========================================================================\n        // High-quality mock products for development and testing\n        \n        {\n          id: '1',\n          title: 'Wireless Bluetooth Headphones',\n          description: 'Premium noise-cancelling headphones with 30-hour battery life',\n          price: 79.99,\n          currency: 'GBP',\n          image_url: 'https://picsum.photos/400/300?random=1',\n          brand: 'AudioTech'\n        },\n        {\n          id: '2',\n          title: 'Smart Fitness Watch',\n          description: 'Advanced smartwatch with health monitoring features',\n          price: 199.99,\n          currency: 'GBP',\n          image_url: 'https://picsum.photos/400/300?random=2',\n          brand: 'FitTech'\n        },\n        {\n          id: '3',\n          title: 'Coffee Bean Gift Set',\n          description: 'Premium coffee beans from around the world',\n          price: 45.00,\n          currency: 'GBP',\n          image_url: 'https://picsum.photos/400/300?random=3',\n          brand: 'RoastMaster'\n        }\n      ];\n    }\n  };\n\n  // ===========================================================================\n  // COMPONENT INITIALIZATION\n  // ===========================================================================\n  \n  /**\n   * Initialize component with product data on mount.\n   * \n   * Loads products asynchronously and manages loading state for smooth UX.\n   * Uses empty dependency array to run only once on component mount.\n   */\n  useEffect(() => {\n    const loadProducts = async () => {\n      setIsLoading(true);               // Show loading spinner\n      const products = await fetchProducts();  // Fetch from API or fallback to mock\n      setProducts(products);            // Set products for swipe interface\n      setIsLoading(false);              // Hide loading spinner\n    };\n    \n    loadProducts();\n  }, []);\n\n  // ===========================================================================\n  // KEYBOARD INTERACTION HANDLING\n  // ===========================================================================\n  \n  /**\n   * Setup keyboard event handlers for accessibility and power users.\n   * \n   * Provides keyboard shortcuts for swipe actions:\n   *   - Left Arrow: Dislike current product\n   *   - Right Arrow / Space: Like current product\n   *   - Prevents default browser behavior\n   * \n   * Accessibility Benefits:\n   *   - Keyboard navigation for users who can't use mouse/touch\n   *   - Faster interaction for power users\n   *   - Consistent with common UI patterns\n   */\n  useEffect(() => {\n    const handleKeyPress = (event: KeyboardEvent) => {\n      // Don't handle keys during loading or when no products available\n      if (isLoading || products.length === 0) return;\n      \n      switch (event.key) {\n        case 'ArrowLeft':\n          event.preventDefault();       // Prevent browser navigation\n          handleSwipe('left');          // Dislike current product\n          break;\n        case 'ArrowRight':\n          event.preventDefault();       // Prevent browser navigation\n          handleSwipe('right');         // Like current product\n          break;\n        case ' ':                       // Spacebar (common like action)\n        case 'Spacebar':\n          event.preventDefault();       // Prevent page scroll\n          handleSwipe('right');         // Like current product\n          break;\n      }\n    };\n\n    // Add global keyboard listener\n    window.addEventListener('keydown', handleKeyPress);\n    \n    // Cleanup listener on unmount to prevent memory leaks\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [isLoading, products.length, currentIndex]);\n\n  // ===========================================================================\n  // SWIPE INTERACTION HANDLERS\n  // ===========================================================================\n\n  /**\n   * Handle swipe gesture or button click for product preference.\n   * \n   * Records user preference and advances to next product. When session\n   * is complete, triggers callback for parent component handling.\n   * \n   * Future Enhancements:\n   *   - Send preference data to backend API\n   *   - Track swipe timing and hesitation for ML insights\n   *   - Add haptic feedback for mobile devices\n   * \n   * @param direction - Swipe direction ('left' for dislike, 'right' for like)\n   */\n  const handleSwipe = (direction: 'left' | 'right') => {\n    console.log(`Swiped ${direction} on product`, products[currentIndex]?.title);\n    \n    // TODO: Send swipe data to backend for preference learning\n    // await fetch('/api/v1/swipes/', {\n    //   method: 'POST',\n    //   body: JSON.stringify({\n    //     product_id: currentProduct.id,\n    //     direction: direction === 'left' ? 'dislike' : 'like',\n    //     session_id: sessionId\n    //   })\n    // });\n    \n    if (currentIndex < products.length - 1) {\n      // Move to next product\n      setCurrentIndex(currentIndex + 1);\n    } else {\n      // Session complete - trigger callback for parent handling\n      if (onSessionComplete) {\n        onSessionComplete({ \n          completed: true,\n          totalSwipes: products.length,\n          sessionType: sessionType\n        });\n      }\n    }\n  };\n\n  /**\n   * Reset swipe session to beginning.\n   * \n   * Allows users to restart the session without reloading the component.\n   * Useful for testing different preference patterns or if user wants\n   * to re-evaluate products.\n   */\n  const resetSession = () => {\n    setCurrentIndex(0);\n  };\n\n  const currentProduct = products[currentIndex];\n\n  return (\n    <div className={`relative w-full h-full flex flex-col ${className}`}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 bg-white/80 backdrop-blur-sm border-b border-gray-200\">\n        <div className=\"flex items-center gap-3\">\n          <Gift className=\"w-6 h-6 text-primary-600\" />\n          <div>\n            <h2 className=\"font-semibold text-gray-900\">Discover Products</h2>\n            <p className=\"text-sm text-gray-600\">\n              {currentIndex + 1} of {products.length}\n            </p>\n          </div>\n        </div>\n        <button\n          onClick={resetSession}\n          className=\"p-2 text-gray-600 hover:text-primary-600 transition-colors\"\n          title=\"Reset session\"\n        >\n          <RotateCcw className=\"w-5 h-5\" />\n        </button>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"flex-1 relative overflow-hidden bg-gradient-to-br from-primary-50 to-secondary-50 min-h-96\">\n        {isLoading ? (\n          // Loading state\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <div className=\"text-center\">\n              <div className=\"w-12 h-12 border-4 border-primary-200 border-t-primary-600 rounded-full animate-spin mx-auto\" />\n              <p className=\"mt-4 text-gray-600\">Loading products...</p>\n            </div>\n          </div>\n        ) : currentProduct ? (\n          // Product card\n          <div className=\"absolute inset-4\">\n            <div className=\"w-full h-full bg-white rounded-2xl shadow-2xl overflow-hidden\">\n              {/* Product Image */}\n              <div className=\"relative w-full h-2/3\">\n                <img\n                  src={currentProduct.image_url}\n                  alt={currentProduct.title}\n                  className=\"w-full h-full object-cover\"\n                />\n                <div className=\"absolute inset-0 bg-gradient-to-t from-black/30 via-transparent to-transparent\" />\n              </div>\n\n              {/* Product Information */}\n              <div className=\"p-6 h-1/3 flex flex-col justify-between\">\n                <div className=\"flex-1\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 line-clamp-2\">\n                    {currentProduct.title}\n                  </h3>\n                  <p className=\"text-sm text-gray-600 mt-1\">{currentProduct.brand}</p>\n                  <p className=\"text-sm text-gray-600 mt-2 line-clamp-2\">\n                    {currentProduct.description}\n                  </p>\n                  <div className=\"flex items-center justify-between mt-3\">\n                    <span className=\"text-xl font-bold text-gray-900\">\n                      £{currentProduct.price.toFixed(2)}\n                    </span>\n                    {currentProduct.affiliate_url && (\n                      <a\n                        href={currentProduct.affiliate_url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"text-xs bg-amazon-orange text-white px-2 py-1 rounded hover:bg-amazon-orange-dark transition-colors\"\n                        style={{ backgroundColor: '#FF9900' }}\n                      >\n                        View on Amazon\n                      </a>\n                    )}\n                  </div>\n                </div>\n\n                {/* Action Buttons */}\n                <div className=\"flex items-center justify-center gap-4 mt-4\">\n                  <button\n                    onClick={() => handleSwipe('left')}\n                    className=\"w-12 h-12 bg-gray-100 hover:bg-red-100 rounded-full flex items-center justify-center transition-colors group\"\n                  >\n                    <span className=\"text-2xl group-hover:text-red-500\">✕</span>\n                  </button>\n                  <button\n                    onClick={() => handleSwipe('right')}\n                    className=\"w-12 h-12 bg-gray-100 hover:bg-green-100 rounded-full flex items-center justify-center transition-colors group\"\n                  >\n                    <span className=\"text-2xl group-hover:text-green-500\">♥</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          // Session complete\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <div className=\"text-center max-w-md\">\n              <div className=\"w-16 h-16 bg-primary-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Gift className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                Session Complete!\n              </h3>\n              <p className=\"text-gray-600 mb-6\">\n                Great job! We've learned about your preferences.\n              </p>\n              <button\n                onClick={resetSession}\n                className=\"px-6 py-3 bg-primary-600 text-white rounded-lg font-medium hover:bg-primary-700 transition-colors\"\n              >\n                Start New Session\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Instructions */}\n      {currentProduct && currentIndex < 3 && (\n        <div className=\"absolute bottom-20 left-1/2 transform -translate-x-1/2 bg-black/80 text-white px-4 py-2 rounded-lg text-sm text-center max-w-xs\">\n          <p>← Dislike • → Like</p>\n          <p className=\"text-xs opacity-75 mt-1\">Or use the buttons below</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WorkingSwipeInterface;"],"mappings":"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","ignoreList":[]}