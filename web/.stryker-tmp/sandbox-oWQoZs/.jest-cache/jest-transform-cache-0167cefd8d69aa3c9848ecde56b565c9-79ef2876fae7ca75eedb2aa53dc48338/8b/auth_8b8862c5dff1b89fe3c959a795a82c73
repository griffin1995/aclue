88dd0a2c6dcae49cce8cf3a103378ddb
"use server";
"use strict";

/* istanbul ignore next */
function cov_1s5qs2clsc() {
  var path = "/home/jack/Documents/aclue-preprod/web/src/app/actions/auth.ts";
  var hash = "7172168db248b5eca0f895eae7196eb3f9c86ffb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/jack/Documents/aclue-preprod/web/src/app/actions/auth.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 34,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 30
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 31
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 27
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 28
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 34
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 30
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 27
        }
      },
      "11": {
        start: {
          line: 35,
          column: 20
        },
        end: {
          line: 35,
          column: 46
        }
      },
      "12": {
        start: {
          line: 36,
          column: 17
        },
        end: {
          line: 36,
          column: 40
        }
      },
      "13": {
        start: {
          line: 37,
          column: 13
        },
        end: {
          line: 37,
          column: 27
        }
      },
      "14": {
        start: {
          line: 69,
          column: 24
        },
        end: {
          line: 73,
          column: 2
        }
      },
      "15": {
        start: {
          line: 70,
          column: 156
        },
        end: {
          line: 70,
          column: 182
        }
      },
      "16": {
        start: {
          line: 76,
          column: 27
        },
        end: {
          line: 84,
          column: 2
        }
      },
      "17": {
        start: {
          line: 79,
          column: 156
        },
        end: {
          line: 79,
          column: 182
        }
      },
      "18": {
        start: {
          line: 80,
          column: 131
        },
        end: {
          line: 80,
          column: 153
        }
      },
      "19": {
        start: {
          line: 80,
          column: 229
        },
        end: {
          line: 80,
          column: 251
        }
      },
      "20": {
        start: {
          line: 80,
          column: 327
        },
        end: {
          line: 80,
          column: 346
        }
      },
      "21": {
        start: {
          line: 83,
          column: 51
        },
        end: {
          line: 83,
          column: 63
        }
      },
      "22": {
        start: {
          line: 87,
          column: 24
        },
        end: {
          line: 106,
          column: 1
        }
      },
      "23": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 108,
          column: 65
        }
      },
      "24": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 209,
          column: 5
        }
      },
      "25": {
        start: {
          line: 111,
          column: 24
        },
        end: {
          line: 115,
          column: 9
        }
      },
      "26": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 119,
          column: 11
        }
      },
      "27": {
        start: {
          line: 121,
          column: 33
        },
        end: {
          line: 121,
          column: 63
        }
      },
      "28": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "29": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 87
        }
      },
      "30": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 129,
          column: 14
        }
      },
      "31": {
        start: {
          line: 131,
          column: 30
        },
        end: {
          line: 131,
          column: 51
        }
      },
      "32": {
        start: {
          line: 133,
          column: 29
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "33": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 88
        }
      },
      "34": {
        start: {
          line: 138,
          column: 25
        },
        end: {
          line: 147,
          column: 10
        }
      },
      "35": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "36": {
        start: {
          line: 149,
          column: 30
        },
        end: {
          line: 151,
          column: 19
        }
      },
      "37": {
        start: {
          line: 149,
          column: 63
        },
        end: {
          line: 151,
          column: 17
        }
      },
      "38": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 81
        }
      },
      "39": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 158,
          column: 14
        }
      },
      "40": {
        start: {
          line: 160,
          column: 25
        },
        end: {
          line: 160,
          column: 46
        }
      },
      "41": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 74
        }
      },
      "42": {
        start: {
          line: 163,
          column: 30
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "43": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 171,
          column: 11
        }
      },
      "44": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 175,
          column: 11
        }
      },
      "45": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 180,
          column: 11
        }
      },
      "46": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 77
        }
      },
      "47": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 48
        }
      },
      "48": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 65
        }
      },
      "49": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 193,
          column: 9
        }
      },
      "50": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 192,
          column: 14
        }
      },
      "51": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 200,
          column: 9
        }
      },
      "52": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 199,
          column: 14
        }
      },
      "53": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 208,
          column: 10
        }
      },
      "54": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 212,
          column: 72
        }
      },
      "55": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 317,
          column: 5
        }
      },
      "56": {
        start: {
          line: 215,
          column: 24
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "57": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 229,
          column: 11
        }
      },
      "58": {
        start: {
          line: 231,
          column: 33
        },
        end: {
          line: 231,
          column: 66
        }
      },
      "59": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 240,
          column: 9
        }
      },
      "60": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 94
        }
      },
      "61": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 239,
          column: 14
        }
      },
      "62": {
        start: {
          line: 241,
          column: 30
        },
        end: {
          line: 241,
          column: 51
        }
      },
      "63": {
        start: {
          line: 243,
          column: 32
        },
        end: {
          line: 250,
          column: 9
        }
      },
      "64": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 69
        }
      },
      "65": {
        start: {
          line: 252,
          column: 25
        },
        end: {
          line: 261,
          column: 10
        }
      },
      "66": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 273,
          column: 9
        }
      },
      "67": {
        start: {
          line: 263,
          column: 30
        },
        end: {
          line: 265,
          column: 19
        }
      },
      "68": {
        start: {
          line: 263,
          column: 63
        },
        end: {
          line: 265,
          column: 17
        }
      },
      "69": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 266,
          column: 88
        }
      },
      "70": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 272,
          column: 14
        }
      },
      "71": {
        start: {
          line: 274,
          column: 25
        },
        end: {
          line: 274,
          column: 46
        }
      },
      "72": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 275,
          column: 81
        }
      },
      "73": {
        start: {
          line: 277,
          column: 30
        },
        end: {
          line: 277,
          column: 50
        }
      },
      "74": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 281,
          column: 11
        }
      },
      "75": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 285,
          column: 11
        }
      },
      "76": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 289,
          column: 11
        }
      },
      "77": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 290,
          column: 84
        }
      },
      "78": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 48
        }
      },
      "79": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 72
        }
      },
      "80": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 301,
          column: 9
        }
      },
      "81": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 300,
          column: 14
        }
      },
      "82": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 308,
          column: 9
        }
      },
      "83": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 307,
          column: 14
        }
      },
      "84": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 316,
          column: 10
        }
      },
      "85": {
        start: {
          line: 320,
          column: 4
        },
        end: {
          line: 320,
          column: 66
        }
      },
      "86": {
        start: {
          line: 321,
          column: 4
        },
        end: {
          line: 351,
          column: 5
        }
      },
      "87": {
        start: {
          line: 323,
          column: 28
        },
        end: {
          line: 323,
          column: 95
        }
      },
      "88": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 339,
          column: 9
        }
      },
      "89": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 338,
          column: 13
        }
      },
      "90": {
        start: {
          line: 327,
          column: 16
        },
        end: {
          line: 327,
          column: 71
        }
      },
      "91": {
        start: {
          line: 328,
          column: 16
        },
        end: {
          line: 335,
          column: 19
        }
      },
      "92": {
        start: {
          line: 337,
          column: 16
        },
        end: {
          line: 337,
          column: 103
        }
      },
      "93": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 341,
          column: 68
        }
      },
      "94": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 342,
          column: 72
        }
      },
      "95": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 343,
          column: 73
        }
      },
      "96": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 344,
          column: 65
        }
      },
      "97": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 345,
          column: 62
        }
      },
      "98": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 347,
          column: 66
        }
      },
      "99": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 350,
          column: 39
        }
      },
      "100": {
        start: {
          line: 354,
          column: 4
        },
        end: {
          line: 392,
          column: 5
        }
      },
      "101": {
        start: {
          line: 356,
          column: 27
        },
        end: {
          line: 356,
          column: 87
        }
      },
      "102": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 364,
          column: 9
        }
      },
      "103": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 363,
          column: 13
        }
      },
      "104": {
        start: {
          line: 359,
          column: 33
        },
        end: {
          line: 359,
          column: 55
        }
      },
      "105": {
        start: {
          line: 360,
          column: 16
        },
        end: {
          line: 360,
          column: 32
        }
      },
      "106": {
        start: {
          line: 362,
          column: 16
        },
        end: {
          line: 362,
          column: 81
        }
      },
      "107": {
        start: {
          line: 366,
          column: 28
        },
        end: {
          line: 366,
          column: 95
        }
      },
      "108": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 369,
          column: 9
        }
      },
      "109": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 368,
          column: 24
        }
      },
      "110": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 370,
          column: 77
        }
      },
      "111": {
        start: {
          line: 371,
          column: 25
        },
        end: {
          line: 377,
          column: 10
        }
      },
      "112": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 381,
          column: 9
        }
      },
      "113": {
        start: {
          line: 379,
          column: 12
        },
        end: {
          line: 379,
          column: 80
        }
      },
      "114": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 380,
          column: 24
        }
      },
      "115": {
        start: {
          line: 382,
          column: 25
        },
        end: {
          line: 382,
          column: 46
        }
      },
      "116": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 387,
          column: 11
        }
      },
      "117": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 388,
          column: 24
        }
      },
      "118": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 390,
          column: 69
        }
      },
      "119": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 391,
          column: 20
        }
      },
      "120": {
        start: {
          line: 395,
          column: 4
        },
        end: {
          line: 395,
          column: 66
        }
      },
      "121": {
        start: {
          line: 396,
          column: 4
        },
        end: {
          line: 460,
          column: 5
        }
      },
      "122": {
        start: {
          line: 397,
          column: 29
        },
        end: {
          line: 397,
          column: 97
        }
      },
      "123": {
        start: {
          line: 398,
          column: 8
        },
        end: {
          line: 404,
          column: 9
        }
      },
      "124": {
        start: {
          line: 399,
          column: 12
        },
        end: {
          line: 403,
          column: 14
        }
      },
      "125": {
        start: {
          line: 405,
          column: 8
        },
        end: {
          line: 405,
          column: 70
        }
      },
      "126": {
        start: {
          line: 406,
          column: 25
        },
        end: {
          line: 416,
          column: 10
        }
      },
      "127": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 428,
          column: 9
        }
      },
      "128": {
        start: {
          line: 418,
          column: 12
        },
        end: {
          line: 418,
          column: 70
        }
      },
      "129": {
        start: {
          line: 420,
          column: 12
        },
        end: {
          line: 420,
          column: 76
        }
      },
      "130": {
        start: {
          line: 421,
          column: 12
        },
        end: {
          line: 421,
          column: 77
        }
      },
      "131": {
        start: {
          line: 422,
          column: 12
        },
        end: {
          line: 422,
          column: 69
        }
      },
      "132": {
        start: {
          line: 423,
          column: 12
        },
        end: {
          line: 427,
          column: 14
        }
      },
      "133": {
        start: {
          line: 429,
          column: 25
        },
        end: {
          line: 429,
          column: 46
        }
      },
      "134": {
        start: {
          line: 430,
          column: 8
        },
        end: {
          line: 430,
          column: 68
        }
      },
      "135": {
        start: {
          line: 432,
          column: 8
        },
        end: {
          line: 435,
          column: 11
        }
      },
      "136": {
        start: {
          line: 436,
          column: 8
        },
        end: {
          line: 441,
          column: 9
        }
      },
      "137": {
        start: {
          line: 437,
          column: 12
        },
        end: {
          line: 440,
          column: 15
        }
      },
      "138": {
        start: {
          line: 442,
          column: 8
        },
        end: {
          line: 445,
          column: 10
        }
      },
      "139": {
        start: {
          line: 447,
          column: 8
        },
        end: {
          line: 447,
          column: 66
        }
      },
      "140": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 449,
          column: 72
        }
      },
      "141": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 450,
          column: 73
        }
      },
      "142": {
        start: {
          line: 451,
          column: 8
        },
        end: {
          line: 451,
          column: 65
        }
      },
      "143": {
        start: {
          line: 452,
          column: 8
        },
        end: {
          line: 459,
          column: 10
        }
      },
      "144": {
        start: {
          line: 463,
          column: 17
        },
        end: {
          line: 463,
          column: 39
        }
      },
      "145": {
        start: {
          line: 464,
          column: 4
        },
        end: {
          line: 464,
          column: 25
        }
      },
      "146": {
        start: {
          line: 467,
          column: 17
        },
        end: {
          line: 467,
          column: 39
        }
      },
      "147": {
        start: {
          line: 468,
          column: 4
        },
        end: {
          line: 470,
          column: 5
        }
      },
      "148": {
        start: {
          line: 469,
          column: 8
        },
        end: {
          line: 469,
          column: 49
        }
      },
      "149": {
        start: {
          line: 471,
          column: 4
        },
        end: {
          line: 471,
          column: 16
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 20
          },
          end: {
            line: 13,
            column: 21
          }
        },
        loc: {
          start: {
            line: 13,
            column: 31
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 21
          },
          end: {
            line: 16,
            column: 22
          }
        },
        loc: {
          start: {
            line: 16,
            column: 32
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 17
          },
          end: {
            line: 19,
            column: 18
          }
        },
        loc: {
          start: {
            line: 19,
            column: 28
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 18
          },
          end: {
            line: 22,
            column: 19
          }
        },
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 25,
            column: 25
          }
        },
        loc: {
          start: {
            line: 25,
            column: 35
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 20
          },
          end: {
            line: 28,
            column: 21
          }
        },
        loc: {
          start: {
            line: 28,
            column: 31
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 31,
            column: 17
          },
          end: {
            line: 31,
            column: 18
          }
        },
        loc: {
          start: {
            line: 31,
            column: 28
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 70,
            column: 147
          },
          end: {
            line: 70,
            column: 148
          }
        },
        loc: {
          start: {
            line: 70,
            column: 156
          },
          end: {
            line: 70,
            column: 182
          }
        },
        line: 70
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 79,
            column: 147
          },
          end: {
            line: 79,
            column: 148
          }
        },
        loc: {
          start: {
            line: 79,
            column: 156
          },
          end: {
            line: 79,
            column: 182
          }
        },
        line: 79
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 80,
            column: 119
          },
          end: {
            line: 80,
            column: 120
          }
        },
        loc: {
          start: {
            line: 80,
            column: 131
          },
          end: {
            line: 80,
            column: 153
          }
        },
        line: 80
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 80,
            column: 217
          },
          end: {
            line: 80,
            column: 218
          }
        },
        loc: {
          start: {
            line: 80,
            column: 229
          },
          end: {
            line: 80,
            column: 251
          }
        },
        line: 80
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 80,
            column: 315
          },
          end: {
            line: 80,
            column: 316
          }
        },
        loc: {
          start: {
            line: 80,
            column: 327
          },
          end: {
            line: 80,
            column: 346
          }
        },
        line: 80
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 83,
            column: 44
          },
          end: {
            line: 83,
            column: 45
          }
        },
        loc: {
          start: {
            line: 83,
            column: 51
          },
          end: {
            line: 83,
            column: 63
          }
        },
        line: 83
      },
      "14": {
        name: "loginAction",
        decl: {
          start: {
            line: 107,
            column: 15
          },
          end: {
            line: 107,
            column: 26
          }
        },
        loc: {
          start: {
            line: 107,
            column: 37
          },
          end: {
            line: 210,
            column: 1
          }
        },
        line: 107
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 149,
            column: 58
          },
          end: {
            line: 149,
            column: 59
          }
        },
        loc: {
          start: {
            line: 149,
            column: 63
          },
          end: {
            line: 151,
            column: 17
          }
        },
        line: 149
      },
      "16": {
        name: "registerAction",
        decl: {
          start: {
            line: 211,
            column: 15
          },
          end: {
            line: 211,
            column: 29
          }
        },
        loc: {
          start: {
            line: 211,
            column: 40
          },
          end: {
            line: 318,
            column: 1
          }
        },
        line: 211
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 263,
            column: 58
          },
          end: {
            line: 263,
            column: 59
          }
        },
        loc: {
          start: {
            line: 263,
            column: 63
          },
          end: {
            line: 265,
            column: 17
          }
        },
        line: 263
      },
      "18": {
        name: "logoutAction",
        decl: {
          start: {
            line: 319,
            column: 15
          },
          end: {
            line: 319,
            column: 27
          }
        },
        loc: {
          start: {
            line: 319,
            column: 30
          },
          end: {
            line: 352,
            column: 1
          }
        },
        line: 319
      },
      "19": {
        name: "getCurrentUser",
        decl: {
          start: {
            line: 353,
            column: 15
          },
          end: {
            line: 353,
            column: 29
          }
        },
        loc: {
          start: {
            line: 353,
            column: 32
          },
          end: {
            line: 393,
            column: 1
          }
        },
        line: 353
      },
      "20": {
        name: "refreshTokenAction",
        decl: {
          start: {
            line: 394,
            column: 15
          },
          end: {
            line: 394,
            column: 33
          }
        },
        loc: {
          start: {
            line: 394,
            column: 36
          },
          end: {
            line: 461,
            column: 1
          }
        },
        line: 394
      },
      "21": {
        name: "isAuthenticated",
        decl: {
          start: {
            line: 462,
            column: 15
          },
          end: {
            line: 462,
            column: 30
          }
        },
        loc: {
          start: {
            line: 462,
            column: 33
          },
          end: {
            line: 465,
            column: 1
          }
        },
        line: 462
      },
      "22": {
        name: "requireAuth",
        decl: {
          start: {
            line: 466,
            column: 15
          },
          end: {
            line: 466,
            column: 26
          }
        },
        loc: {
          start: {
            line: 466,
            column: 29
          },
          end: {
            line: 472,
            column: 1
          }
        },
        line: 466
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 103,
            column: 17
          },
          end: {
            line: 103,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 17
          },
          end: {
            line: 103,
            column: 48
          }
        }, {
          start: {
            line: 103,
            column: 52
          },
          end: {
            line: 103,
            column: 75
          }
        }],
        line: 103
      },
      "1": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "2": {
        loc: {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "3": {
        loc: {
          start: {
            line: 155,
            column: 23
          },
          end: {
            line: 155,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 23
          },
          end: {
            line: 155,
            column: 39
          }
        }, {
          start: {
            line: 155,
            column: 43
          },
          end: {
            line: 155,
            column: 70
          }
        }],
        line: 155
      },
      "4": {
        loc: {
          start: {
            line: 156,
            column: 22
          },
          end: {
            line: 156,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 156,
            column: 48
          },
          end: {
            line: 156,
            column: 69
          }
        }, {
          start: {
            line: 156,
            column: 72
          },
          end: {
            line: 156,
            column: 84
          }
        }],
        line: 156
      },
      "5": {
        loc: {
          start: {
            line: 165,
            column: 20
          },
          end: {
            line: 165,
            column: 130
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 48
          },
          end: {
            line: 165,
            column: 88
          }
        }, {
          start: {
            line: 165,
            column: 91
          },
          end: {
            line: 165,
            column: 130
          }
        }],
        line: 165
      },
      "6": {
        loc: {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 193,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 193,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "7": {
        loc: {
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 200,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 200,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "8": {
        loc: {
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 240,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 240,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "9": {
        loc: {
          start: {
            line: 248,
            column: 27
          },
          end: {
            line: 248,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 27
          },
          end: {
            line: 248,
            column: 54
          }
        }, {
          start: {
            line: 248,
            column: 58
          },
          end: {
            line: 248,
            column: 67
          }
        }],
        line: 248
      },
      "10": {
        loc: {
          start: {
            line: 262,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "11": {
        loc: {
          start: {
            line: 269,
            column: 23
          },
          end: {
            line: 269,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 269,
            column: 23
          },
          end: {
            line: 269,
            column: 39
          }
        }, {
          start: {
            line: 269,
            column: 43
          },
          end: {
            line: 269,
            column: 64
          }
        }],
        line: 269
      },
      "12": {
        loc: {
          start: {
            line: 270,
            column: 22
          },
          end: {
            line: 270,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 270,
            column: 48
          },
          end: {
            line: 270,
            column: 62
          }
        }, {
          start: {
            line: 270,
            column: 65
          },
          end: {
            line: 270,
            column: 85
          }
        }],
        line: 270
      },
      "13": {
        loc: {
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 301,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 301,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "14": {
        loc: {
          start: {
            line: 302,
            column: 8
          },
          end: {
            line: 308,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 302,
            column: 8
          },
          end: {
            line: 308,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 302
      },
      "15": {
        loc: {
          start: {
            line: 325,
            column: 8
          },
          end: {
            line: 339,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 325,
            column: 8
          },
          end: {
            line: 339,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 325
      },
      "16": {
        loc: {
          start: {
            line: 357,
            column: 8
          },
          end: {
            line: 364,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 357,
            column: 8
          },
          end: {
            line: 364,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 357
      },
      "17": {
        loc: {
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 369,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 369,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "18": {
        loc: {
          start: {
            line: 378,
            column: 8
          },
          end: {
            line: 381,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 378,
            column: 8
          },
          end: {
            line: 381,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 378
      },
      "19": {
        loc: {
          start: {
            line: 398,
            column: 8
          },
          end: {
            line: 404,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 398,
            column: 8
          },
          end: {
            line: 404,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 398
      },
      "20": {
        loc: {
          start: {
            line: 417,
            column: 8
          },
          end: {
            line: 428,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 417,
            column: 8
          },
          end: {
            line: 428,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 417
      },
      "21": {
        loc: {
          start: {
            line: 436,
            column: 8
          },
          end: {
            line: 441,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 436,
            column: 8
          },
          end: {
            line: 441,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 436
      },
      "22": {
        loc: {
          start: {
            line: 468,
            column: 4
          },
          end: {
            line: 470,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 468,
            column: 4
          },
          end: {
            line: 470,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 468
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/jack/Documents/aclue-preprod/web/src/app/actions/auth.ts"],
      sourcesContent: ["'use server'\n\nimport { redirect } from 'next/navigation'\nimport { cookies } from 'next/headers'\nimport { z } from 'zod'\n\n/**\n * Enhanced Authentication Server Actions - Phase 3: Tier 1 Migration\n *\n * Enterprise-grade server-side authentication for 85% server components migration.\n * Provides secure JWT handling, session management, and authentication flows\n * with enhanced security features and full Supabase compatibility.\n *\n * Security Features:\n * - HTTP-only secure cookies for JWT storage\n * - CSRF protection with secure headers\n * - Server-side session validation\n * - Automatic token refresh handling\n * - Rate limiting and brute force protection\n * - Enhanced error handling and logging\n *\n * Performance Features:\n * - Server-side form processing\n * - Optimised authentication flows\n * - Minimal client-side JavaScript\n * - Efficient session management\n *\n * Supabase Integration:\n * - Compatible with existing user_metadata pattern\n * - Maintains test user: john.doe@example.com / password123\n * - Preserves existing API structure\n * - Seamless migration from Pages Router auth\n */\n\n// =============================================================================\n// ENHANCED TYPE DEFINITIONS & VALIDATION SCHEMAS\n// =============================================================================\n\n/**\n * Login form validation schema with enterprise security requirements\n */\nconst loginSchema = z.object({\n  email: z\n    .string()\n    .min(1, 'Email is required')\n    .email('Please enter a valid email address')\n    .max(320, 'Email address is too long')\n    .transform(email => email.toLowerCase().trim()),\n  password: z\n    .string()\n    .min(1, 'Password is required')\n    .min(8, 'Password must be at least 8 characters')\n    .max(128, 'Password is too long'),\n  remember_me: z.boolean().optional().default(false),\n})\n\n/**\n * Registration form validation schema with comprehensive validation\n */\nconst registerSchema = z.object({\n  first_name: z\n    .string()\n    .min(1, 'First name is required')\n    .min(2, 'First name must be at least 2 characters')\n    .max(50, 'First name must not exceed 50 characters')\n    .regex(/^[a-zA-Z\\s'-]+$/, 'First name contains invalid characters'),\n  last_name: z\n    .string()\n    .min(1, 'Last name is required')\n    .min(2, 'Last name must be at least 2 characters')\n    .max(50, 'Last name must not exceed 50 characters')\n    .regex(/^[a-zA-Z\\s'-]+$/, 'Last name contains invalid characters'),\n  email: z\n    .string()\n    .min(1, 'Email is required')\n    .email('Please enter a valid email address')\n    .max(320, 'Email address is too long')\n    .transform(email => email.toLowerCase().trim()),\n  password: z\n    .string()\n    .min(8, 'Password must be at least 8 characters')\n    .max(128, 'Password is too long')\n    .refine(password => /[A-Z]/.test(password), 'Password must contain at least one uppercase letter')\n    .refine(password => /[a-z]/.test(password), 'Password must contain at least one lowercase letter')\n    .refine(password => /\\d/.test(password), 'Password must contain at least one number'),\n  date_of_birth: z.string().optional(),\n  marketing_consent: z.boolean().optional().default(false),\n  terms_accepted: z.boolean().refine(val => val === true, 'You must accept the terms and conditions'),\n})\n\nexport type LoginFormData = z.infer<typeof loginSchema>\nexport type RegisterFormData = z.infer<typeof registerSchema>\n\n/**\n * Enhanced authentication result with comprehensive error handling\n */\nexport interface AuthResult {\n  success: boolean\n  error?: string\n  code?: string\n  details?: Record<string, any>\n  user?: {\n    id: string\n    email: string\n    first_name: string\n    last_name: string\n    subscription_tier: string\n    created_at: string\n    updated_at: string\n  }\n}\n\n/**\n * Session data interface for server-side session management\n */\nexport interface SessionData {\n  user: AuthResult['user']\n  accessToken: string\n  refreshToken: string\n  expiresAt: number\n  issuedAt: number\n}\n\n/**\n * Security configuration for enhanced authentication\n */\nconst AUTH_CONFIG = {\n  cookies: {\n    accessToken: 'auth_access_token',\n    refreshToken: 'auth_refresh_token',\n    user: 'auth_user_data',\n  },\n  security: {\n    httpOnly: true,\n    secure: process.env.NODE_ENV === 'production',\n    sameSite: 'lax' as const,\n    maxAge: {\n      accessToken: 60 * 60, // 1 hour\n      refreshToken: 60 * 60 * 24 * 7, // 7 days\n    },\n  },\n  api: {\n    baseUrl: process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000',\n    timeout: 10000, // 10 seconds\n  },\n} as const\n\n// =============================================================================\n// ENHANCED SERVER ACTIONS - SECURITY-FIRST IMPLEMENTATION\n// =============================================================================\n\n/**\n * Enhanced server action for secure user login\n * @param formData - Validated form data from login form\n */\nexport async function loginAction(formData: FormData): Promise<AuthResult> {\n  console.log('\uD83D\uDD10 Server-side login action started')\n\n  try {\n    // Extract and validate form data using Zod schema\n    const rawData = {\n      email: formData.get('email') as string,\n      password: formData.get('password') as string,\n      remember_me: formData.get('remember_me') === 'on',\n    }\n\n    console.log('\uD83D\uDCCB Login form data:', { email: rawData.email, remember_me: rawData.remember_me })\n\n    // Validate using Zod schema for enterprise-grade validation\n    const validationResult = loginSchema.safeParse(rawData)\n\n    if (!validationResult.success) {\n      console.error('\u274C Login validation failed:', validationResult.error.errors)\n      return {\n        success: false,\n        error: 'Invalid form data',\n        code: 'VALIDATION_ERROR',\n        details: validationResult.error.errors,\n      }\n    }\n\n    const validatedData = validationResult.data\n\n    // Call backend API with enhanced error handling\n    const loginPayload = {\n      email: validatedData.email,\n      password: validatedData.password,\n    }\n\n    console.log('\uD83C\uDF10 Calling backend login API:', AUTH_CONFIG.api.baseUrl)\n\n    const response = await fetch(`${AUTH_CONFIG.api.baseUrl}/api/v1/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'User-Agent': 'aclue-Web-Server/1.0',\n      },\n      body: JSON.stringify(loginPayload),\n      signal: AbortSignal.timeout(AUTH_CONFIG.api.timeout),\n    })\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({ detail: 'Authentication failed' }))\n      console.error('\u274C Backend login failed:', response.status, errorData)\n\n      return {\n        success: false,\n        error: errorData.detail || 'Invalid email or password',\n        code: response.status === 401 ? 'INVALID_CREDENTIALS' : 'AUTH_ERROR',\n        details: errorData,\n      }\n    }\n\n    const authData = await response.json()\n    console.log('\u2705 Backend login successful, setting secure cookies')\n\n    // Enhanced secure cookie management\n    const cookieOptions = {\n      ...AUTH_CONFIG.security,\n      maxAge: validatedData.remember_me\n        ? AUTH_CONFIG.security.maxAge.refreshToken\n        : AUTH_CONFIG.security.maxAge.accessToken,\n    }\n\n    // Set secure authentication cookies\n    cookies().set(AUTH_CONFIG.cookies.accessToken, authData.access_token, {\n      ...cookieOptions,\n      maxAge: AUTH_CONFIG.security.maxAge.accessToken,\n    })\n\n    cookies().set(AUTH_CONFIG.cookies.refreshToken, authData.refresh_token, {\n      ...cookieOptions,\n      maxAge: AUTH_CONFIG.security.maxAge.refreshToken,\n    })\n\n    // Store user data in secure cookie for immediate access\n    cookies().set(AUTH_CONFIG.cookies.user, JSON.stringify(authData.user), {\n      ...cookieOptions,\n      maxAge: AUTH_CONFIG.security.maxAge.refreshToken,\n    })\n\n    console.log('\uD83D\uDE80 Login complete, redirecting to dashboard')\n\n    // Server-side redirect to dashboard\n    redirect('/dashboard')\n\n  } catch (error: any) {\n    console.error('\uD83D\uDCA5 Login action error:', error)\n\n    // Enhanced error classification\n    if (error.name === 'AbortError') {\n      return {\n        success: false,\n        error: 'Request timeout. Please try again.',\n        code: 'TIMEOUT_ERROR',\n      }\n    }\n\n    if (error.message?.includes('fetch')) {\n      return {\n        success: false,\n        error: 'Unable to connect to authentication service. Please check your connection.',\n        code: 'NETWORK_ERROR',\n      }\n    }\n\n    return {\n      success: false,\n      error: 'An unexpected error occurred. Please try again.',\n      code: 'UNKNOWN_ERROR',\n      details: { message: error.message },\n    }\n  }\n}\n\n/**\n * Enhanced server action for secure user registration\n * @param formData - Validated form data from registration form\n */\nexport async function registerAction(formData: FormData): Promise<AuthResult> {\n  console.log('\uD83D\uDCDD Server-side registration action started')\n\n  try {\n    // Extract form data\n    const rawData = {\n      first_name: formData.get('first_name') as string,\n      last_name: formData.get('last_name') as string,\n      email: formData.get('email') as string,\n      password: formData.get('password') as string,\n      date_of_birth: formData.get('date_of_birth') as string,\n      marketing_consent: formData.get('marketing_consent') === 'on',\n      terms_accepted: formData.get('terms_accepted') === 'on',\n    }\n\n    console.log('\uD83D\uDCCB Registration form data:', {\n      email: rawData.email,\n      first_name: rawData.first_name,\n      marketing_consent: rawData.marketing_consent,\n      terms_accepted: rawData.terms_accepted,\n    })\n\n    // Validate using Zod schema\n    const validationResult = registerSchema.safeParse(rawData)\n\n    if (!validationResult.success) {\n      console.error('\u274C Registration validation failed:', validationResult.error.errors)\n      return {\n        success: false,\n        error: 'Invalid form data',\n        code: 'VALIDATION_ERROR',\n        details: validationResult.error.errors,\n      }\n    }\n\n    const validatedData = validationResult.data\n\n    // Prepare registration payload\n    const registerPayload = {\n      first_name: validatedData.first_name,\n      last_name: validatedData.last_name,\n      email: validatedData.email,\n      password: validatedData.password,\n      date_of_birth: validatedData.date_of_birth || undefined,\n      marketing_consent: validatedData.marketing_consent,\n    }\n\n    console.log('\uD83C\uDF10 Calling backend registration API')\n\n    const response = await fetch(`${AUTH_CONFIG.api.baseUrl}/api/v1/auth/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'User-Agent': 'aclue-Web-Server/1.0',\n      },\n      body: JSON.stringify(registerPayload),\n      signal: AbortSignal.timeout(AUTH_CONFIG.api.timeout),\n    })\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({ detail: 'Registration failed' }))\n      console.error('\u274C Backend registration failed:', response.status, errorData)\n\n      return {\n        success: false,\n        error: errorData.detail || 'Registration failed',\n        code: response.status === 409 ? 'EMAIL_EXISTS' : 'REGISTRATION_ERROR',\n        details: errorData,\n      }\n    }\n\n    const authData = await response.json()\n    console.log('\u2705 Backend registration successful, setting secure cookies')\n\n    // Set secure authentication cookies\n    const cookieOptions = AUTH_CONFIG.security\n\n    cookies().set(AUTH_CONFIG.cookies.accessToken, authData.access_token, {\n      ...cookieOptions,\n      maxAge: AUTH_CONFIG.security.maxAge.accessToken,\n    })\n\n    cookies().set(AUTH_CONFIG.cookies.refreshToken, authData.refresh_token, {\n      ...cookieOptions,\n      maxAge: AUTH_CONFIG.security.maxAge.refreshToken,\n    })\n\n    cookies().set(AUTH_CONFIG.cookies.user, JSON.stringify(authData.user), {\n      ...cookieOptions,\n      maxAge: AUTH_CONFIG.security.maxAge.refreshToken,\n    })\n\n    console.log('\uD83D\uDE80 Registration complete, redirecting to dashboard')\n\n    // Server-side redirect to dashboard\n    redirect('/dashboard')\n\n  } catch (error: any) {\n    console.error('\uD83D\uDCA5 Registration action error:', error)\n\n    if (error.name === 'AbortError') {\n      return {\n        success: false,\n        error: 'Request timeout. Please try again.',\n        code: 'TIMEOUT_ERROR',\n      }\n    }\n\n    if (error.message?.includes('fetch')) {\n      return {\n        success: false,\n        error: 'Unable to connect to registration service. Please check your connection.',\n        code: 'NETWORK_ERROR',\n      }\n    }\n\n    return {\n      success: false,\n      error: 'An unexpected error occurred during registration. Please try again.',\n      code: 'UNKNOWN_ERROR',\n      details: { message: error.message },\n    }\n  }\n}\n\n/**\n * Enhanced server action for secure user logout\n */\nexport async function logoutAction(): Promise<void> {\n  console.log('\uD83D\uDEAA Server-side logout action started')\n\n  try {\n    // Get current tokens for API logout call\n    const accessToken = cookies().get(AUTH_CONFIG.cookies.accessToken)?.value\n\n    // Call backend logout API if token exists\n    if (accessToken) {\n      try {\n        console.log('\uD83C\uDF10 Calling backend logout API')\n        await fetch(`${AUTH_CONFIG.api.baseUrl}/api/v1/auth/logout`, {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${accessToken}`,\n            'Content-Type': 'application/json',\n          },\n          signal: AbortSignal.timeout(5000), // 5 second timeout for logout\n        })\n      } catch (apiError) {\n        console.warn('\u26A0\uFE0F Backend logout API failed, proceeding with local cleanup:', apiError)\n      }\n    }\n\n    // Clear all authentication cookies securely\n    console.log('\uD83E\uDDF9 Clearing authentication cookies')\n\n    cookies().delete(AUTH_CONFIG.cookies.accessToken)\n    cookies().delete(AUTH_CONFIG.cookies.refreshToken)\n    cookies().delete(AUTH_CONFIG.cookies.user)\n\n    console.log('\u2705 Logout complete, redirecting to home')\n\n  } catch (error) {\n    console.error('\uD83D\uDCA5 Logout action error:', error)\n  } finally {\n    // Always redirect to home, even if logout fails\n    redirect('/')\n  }\n}\n\n/**\n * Enhanced server function to get current user from secure session\n */\nexport async function getCurrentUser(): Promise<AuthResult['user'] | null> {\n  try {\n    // First, try to get user from secure cookie (fastest)\n    const userCookie = cookies().get(AUTH_CONFIG.cookies.user)?.value\n\n    if (userCookie) {\n      try {\n        const userData = JSON.parse(userCookie)\n        return userData\n      } catch (parseError) {\n        console.warn('\u26A0\uFE0F Invalid user cookie data, falling back to API')\n      }\n    }\n\n    // Fallback to API validation if no cookie or invalid cookie\n    const accessToken = cookies().get(AUTH_CONFIG.cookies.accessToken)?.value\n\n    if (!accessToken) {\n      return null\n    }\n\n    console.log('\uD83D\uDD0D Validating user session with backend API')\n\n    const response = await fetch(`${AUTH_CONFIG.api.baseUrl}/api/v1/auth/me`, {\n      headers: {\n        'Authorization': `Bearer ${accessToken}`,\n        'Accept': 'application/json',\n      },\n      signal: AbortSignal.timeout(AUTH_CONFIG.api.timeout),\n    })\n\n    if (!response.ok) {\n      console.warn('\u26A0\uFE0F User session validation failed:', response.status)\n      return null\n    }\n\n    const userData = await response.json()\n\n    // Update user cookie with fresh data\n    cookies().set(AUTH_CONFIG.cookies.user, JSON.stringify(userData), {\n      ...AUTH_CONFIG.security,\n      maxAge: AUTH_CONFIG.security.maxAge.refreshToken,\n    })\n\n    return userData\n\n  } catch (error: any) {\n    console.error('\uD83D\uDCA5 Get current user error:', error)\n    return null\n  }\n}\n\n/**\n * Enhanced server function for automatic token refresh\n */\nexport async function refreshTokenAction(): Promise<AuthResult> {\n  console.log('\uD83D\uDD04 Server-side token refresh started')\n\n  try {\n    const refreshToken = cookies().get(AUTH_CONFIG.cookies.refreshToken)?.value\n\n    if (!refreshToken) {\n      return {\n        success: false,\n        error: 'No refresh token available',\n        code: 'NO_REFRESH_TOKEN',\n      }\n    }\n\n    console.log('\uD83C\uDF10 Calling backend token refresh API')\n\n    const response = await fetch(`${AUTH_CONFIG.api.baseUrl}/api/v1/auth/refresh`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      },\n      body: JSON.stringify({ refresh_token: refreshToken }),\n      signal: AbortSignal.timeout(AUTH_CONFIG.api.timeout),\n    })\n\n    if (!response.ok) {\n      console.error('\u274C Token refresh failed:', response.status)\n\n      // Clear invalid cookies\n      cookies().delete(AUTH_CONFIG.cookies.accessToken)\n      cookies().delete(AUTH_CONFIG.cookies.refreshToken)\n      cookies().delete(AUTH_CONFIG.cookies.user)\n\n      return {\n        success: false,\n        error: 'Session expired. Please log in again.',\n        code: 'REFRESH_FAILED',\n      }\n    }\n\n    const authData = await response.json()\n    console.log('\u2705 Token refresh successful, updating cookies')\n\n    // Update cookies with new tokens\n    cookies().set(AUTH_CONFIG.cookies.accessToken, authData.access_token, {\n      ...AUTH_CONFIG.security,\n      maxAge: AUTH_CONFIG.security.maxAge.accessToken,\n    })\n\n    if (authData.refresh_token) {\n      cookies().set(AUTH_CONFIG.cookies.refreshToken, authData.refresh_token, {\n        ...AUTH_CONFIG.security,\n        maxAge: AUTH_CONFIG.security.maxAge.refreshToken,\n      })\n    }\n\n    return {\n      success: true,\n      user: authData.user,\n    }\n\n  } catch (error: any) {\n    console.error('\uD83D\uDCA5 Token refresh error:', error)\n\n    // Clear potentially invalid cookies\n    cookies().delete(AUTH_CONFIG.cookies.accessToken)\n    cookies().delete(AUTH_CONFIG.cookies.refreshToken)\n    cookies().delete(AUTH_CONFIG.cookies.user)\n\n    return {\n      success: false,\n      error: 'Token refresh failed. Please log in again.',\n      code: 'REFRESH_ERROR',\n      details: { message: error.message },\n    }\n  }\n}\n\n/**\n * Server function to check if user is authenticated\n */\nexport async function isAuthenticated(): Promise<boolean> {\n  const user = await getCurrentUser()\n  return user !== null\n}\n\n/**\n * Server function to require authentication (throws redirect if not authenticated)\n */\nexport async function requireAuth(): Promise<AuthResult['user']> {\n  const user = await getCurrentUser()\n\n  if (!user) {\n    redirect('/auth/login')\n  }\n\n  return user\n}"],
      names: ["getCurrentUser", "isAuthenticated", "loginAction", "logoutAction", "refreshTokenAction", "registerAction", "requireAuth", "loginSchema", "z", "object", "email", "string", "min", "max", "transform", "toLowerCase", "trim", "password", "remember_me", "boolean", "optional", "default", "registerSchema", "first_name", "regex", "last_name", "refine", "test", "date_of_birth", "marketing_consent", "terms_accepted", "val", "AUTH_CONFIG", "cookies", "accessToken", "refreshToken", "user", "security", "httpOnly", "secure", "process", "env", "NODE_ENV", "sameSite", "maxAge", "api", "baseUrl", "NEXT_PUBLIC_API_URL", "timeout", "formData", "console", "log", "rawData", "get", "validationResult", "safeParse", "success", "error", "errors", "code", "details", "validatedData", "data", "loginPayload", "response", "fetch", "method", "headers", "body", "JSON", "stringify", "signal", "AbortSignal", "ok", "errorData", "json", "catch", "detail", "status", "authData", "cookieOptions", "set", "access_token", "refresh_token", "redirect", "name", "message", "includes", "registerPayload", "undefined", "value", "apiError", "warn", "delete", "userCookie", "userData", "parse", "parseError"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7172168db248b5eca0f895eae7196eb3f9c86ffb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1s5qs2clsc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1s5qs2clsc();
cov_1s5qs2clsc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1s5qs2clsc().f[0]++;
  cov_1s5qs2clsc().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1s5qs2clsc().s[3]++;
_export(exports, {
  getCurrentUser: function () {
    /* istanbul ignore next */
    cov_1s5qs2clsc().f[1]++;
    cov_1s5qs2clsc().s[4]++;
    return getCurrentUser;
  },
  isAuthenticated: function () {
    /* istanbul ignore next */
    cov_1s5qs2clsc().f[2]++;
    cov_1s5qs2clsc().s[5]++;
    return isAuthenticated;
  },
  loginAction: function () {
    /* istanbul ignore next */
    cov_1s5qs2clsc().f[3]++;
    cov_1s5qs2clsc().s[6]++;
    return loginAction;
  },
  logoutAction: function () {
    /* istanbul ignore next */
    cov_1s5qs2clsc().f[4]++;
    cov_1s5qs2clsc().s[7]++;
    return logoutAction;
  },
  refreshTokenAction: function () {
    /* istanbul ignore next */
    cov_1s5qs2clsc().f[5]++;
    cov_1s5qs2clsc().s[8]++;
    return refreshTokenAction;
  },
  registerAction: function () {
    /* istanbul ignore next */
    cov_1s5qs2clsc().f[6]++;
    cov_1s5qs2clsc().s[9]++;
    return registerAction;
  },
  requireAuth: function () {
    /* istanbul ignore next */
    cov_1s5qs2clsc().f[7]++;
    cov_1s5qs2clsc().s[10]++;
    return requireAuth;
  }
});
const _navigation =
/* istanbul ignore next */
(cov_1s5qs2clsc().s[11]++, require("next/navigation"));
const _headers =
/* istanbul ignore next */
(cov_1s5qs2clsc().s[12]++, require("next/headers"));
const _zod =
/* istanbul ignore next */
(cov_1s5qs2clsc().s[13]++, require("zod"));
/**
 * Enhanced Authentication Server Actions - Phase 3: Tier 1 Migration
 *
 * Enterprise-grade server-side authentication for 85% server components migration.
 * Provides secure JWT handling, session management, and authentication flows
 * with enhanced security features and full Supabase compatibility.
 *
 * Security Features:
 * - HTTP-only secure cookies for JWT storage
 * - CSRF protection with secure headers
 * - Server-side session validation
 * - Automatic token refresh handling
 * - Rate limiting and brute force protection
 * - Enhanced error handling and logging
 *
 * Performance Features:
 * - Server-side form processing
 * - Optimised authentication flows
 * - Minimal client-side JavaScript
 * - Efficient session management
 *
 * Supabase Integration:
 * - Compatible with existing user_metadata pattern
 * - Maintains test user: john.doe@example.com / password123
 * - Preserves existing API structure
 * - Seamless migration from Pages Router auth
 */ // =============================================================================
// ENHANCED TYPE DEFINITIONS & VALIDATION SCHEMAS
// =============================================================================
/**
 * Login form validation schema with enterprise security requirements
 */
const loginSchema =
/* istanbul ignore next */
(cov_1s5qs2clsc().s[14]++, _zod.z.object({
  email: _zod.z.string().min(1, "Email is required").email("Please enter a valid email address").max(320, "Email address is too long").transform(email => {
    /* istanbul ignore next */
    cov_1s5qs2clsc().f[8]++;
    cov_1s5qs2clsc().s[15]++;
    return email.toLowerCase().trim();
  }),
  password: _zod.z.string().min(1, "Password is required").min(8, "Password must be at least 8 characters").max(128, "Password is too long"),
  remember_me: _zod.z.boolean().optional().default(false)
}));
/**
 * Registration form validation schema with comprehensive validation
 */
const registerSchema =
/* istanbul ignore next */
(cov_1s5qs2clsc().s[16]++, _zod.z.object({
  first_name: _zod.z.string().min(1, "First name is required").min(2, "First name must be at least 2 characters").max(50, "First name must not exceed 50 characters").regex(/^[a-zA-Z\s'-]+$/, "First name contains invalid characters"),
  last_name: _zod.z.string().min(1, "Last name is required").min(2, "Last name must be at least 2 characters").max(50, "Last name must not exceed 50 characters").regex(/^[a-zA-Z\s'-]+$/, "Last name contains invalid characters"),
  email: _zod.z.string().min(1, "Email is required").email("Please enter a valid email address").max(320, "Email address is too long").transform(email => {
    /* istanbul ignore next */
    cov_1s5qs2clsc().f[9]++;
    cov_1s5qs2clsc().s[17]++;
    return email.toLowerCase().trim();
  }),
  password: _zod.z.string().min(8, "Password must be at least 8 characters").max(128, "Password is too long").refine(password => {
    /* istanbul ignore next */
    cov_1s5qs2clsc().f[10]++;
    cov_1s5qs2clsc().s[18]++;
    return /[A-Z]/.test(password);
  }, "Password must contain at least one uppercase letter").refine(password => {
    /* istanbul ignore next */
    cov_1s5qs2clsc().f[11]++;
    cov_1s5qs2clsc().s[19]++;
    return /[a-z]/.test(password);
  }, "Password must contain at least one lowercase letter").refine(password => {
    /* istanbul ignore next */
    cov_1s5qs2clsc().f[12]++;
    cov_1s5qs2clsc().s[20]++;
    return /\d/.test(password);
  }, "Password must contain at least one number"),
  date_of_birth: _zod.z.string().optional(),
  marketing_consent: _zod.z.boolean().optional().default(false),
  terms_accepted: _zod.z.boolean().refine(val => {
    /* istanbul ignore next */
    cov_1s5qs2clsc().f[13]++;
    cov_1s5qs2clsc().s[21]++;
    return val === true;
  }, "You must accept the terms and conditions")
}));
/**
 * Security configuration for enhanced authentication
 */
const AUTH_CONFIG =
/* istanbul ignore next */
(cov_1s5qs2clsc().s[22]++, {
  cookies: {
    accessToken: "auth_access_token",
    refreshToken: "auth_refresh_token",
    user: "auth_user_data"
  },
  security: {
    httpOnly: true,
    secure: process.env.NODE_ENV === "production",
    sameSite: "lax",
    maxAge: {
      accessToken: 60 * 60,
      refreshToken: 60 * 60 * 24 * 7
    }
  },
  api: {
    baseUrl:
    /* istanbul ignore next */
    (cov_1s5qs2clsc().b[0][0]++, process.env.NEXT_PUBLIC_API_URL) ||
    /* istanbul ignore next */
    (cov_1s5qs2clsc().b[0][1]++, "http://localhost:8000"),
    timeout: 10000
  }
});
async function loginAction(formData) {
  /* istanbul ignore next */
  cov_1s5qs2clsc().f[14]++;
  cov_1s5qs2clsc().s[23]++;
  console.log("\uD83D\uDD10 Server-side login action started");
  /* istanbul ignore next */
  cov_1s5qs2clsc().s[24]++;
  try {
    // Extract and validate form data using Zod schema
    const rawData =
    /* istanbul ignore next */
    (cov_1s5qs2clsc().s[25]++, {
      email: formData.get("email"),
      password: formData.get("password"),
      remember_me: formData.get("remember_me") === "on"
    });
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[26]++;
    console.log("\uD83D\uDCCB Login form data:", {
      email: rawData.email,
      remember_me: rawData.remember_me
    });
    // Validate using Zod schema for enterprise-grade validation
    const validationResult =
    /* istanbul ignore next */
    (cov_1s5qs2clsc().s[27]++, loginSchema.safeParse(rawData));
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[28]++;
    if (!validationResult.success) {
      /* istanbul ignore next */
      cov_1s5qs2clsc().b[1][0]++;
      cov_1s5qs2clsc().s[29]++;
      console.error("❌ Login validation failed:", validationResult.error.errors);
      /* istanbul ignore next */
      cov_1s5qs2clsc().s[30]++;
      return {
        success: false,
        error: "Invalid form data",
        code: "VALIDATION_ERROR",
        details: validationResult.error.errors
      };
    } else
    /* istanbul ignore next */
    {
      cov_1s5qs2clsc().b[1][1]++;
    }
    const validatedData =
    /* istanbul ignore next */
    (cov_1s5qs2clsc().s[31]++, validationResult.data);
    // Call backend API with enhanced error handling
    const loginPayload =
    /* istanbul ignore next */
    (cov_1s5qs2clsc().s[32]++, {
      email: validatedData.email,
      password: validatedData.password
    });
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[33]++;
    console.log("\uD83C\uDF10 Calling backend login API:", AUTH_CONFIG.api.baseUrl);
    const response =
    /* istanbul ignore next */
    (cov_1s5qs2clsc().s[34]++, await fetch(`${AUTH_CONFIG.api.baseUrl}/api/v1/auth/login`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json",
        "User-Agent": "aclue-Web-Server/1.0"
      },
      body: JSON.stringify(loginPayload),
      signal: AbortSignal.timeout(AUTH_CONFIG.api.timeout)
    }));
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[35]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_1s5qs2clsc().b[2][0]++;
      const errorData =
      /* istanbul ignore next */
      (cov_1s5qs2clsc().s[36]++, await response.json().catch(() => {
        /* istanbul ignore next */
        cov_1s5qs2clsc().f[15]++;
        cov_1s5qs2clsc().s[37]++;
        return {
          detail: "Authentication failed"
        };
      }));
      /* istanbul ignore next */
      cov_1s5qs2clsc().s[38]++;
      console.error("❌ Backend login failed:", response.status, errorData);
      /* istanbul ignore next */
      cov_1s5qs2clsc().s[39]++;
      return {
        success: false,
        error:
        /* istanbul ignore next */
        (cov_1s5qs2clsc().b[3][0]++, errorData.detail) ||
        /* istanbul ignore next */
        (cov_1s5qs2clsc().b[3][1]++, "Invalid email or password"),
        code: response.status === 401 ?
        /* istanbul ignore next */
        (cov_1s5qs2clsc().b[4][0]++, "INVALID_CREDENTIALS") :
        /* istanbul ignore next */
        (cov_1s5qs2clsc().b[4][1]++, "AUTH_ERROR"),
        details: errorData
      };
    } else
    /* istanbul ignore next */
    {
      cov_1s5qs2clsc().b[2][1]++;
    }
    const authData =
    /* istanbul ignore next */
    (cov_1s5qs2clsc().s[40]++, await response.json());
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[41]++;
    console.log("✅ Backend login successful, setting secure cookies");
    // Enhanced secure cookie management
    const cookieOptions =
    /* istanbul ignore next */
    (cov_1s5qs2clsc().s[42]++, {
      ...AUTH_CONFIG.security,
      maxAge: validatedData.remember_me ?
      /* istanbul ignore next */
      (cov_1s5qs2clsc().b[5][0]++, AUTH_CONFIG.security.maxAge.refreshToken) :
      /* istanbul ignore next */
      (cov_1s5qs2clsc().b[5][1]++, AUTH_CONFIG.security.maxAge.accessToken)
    });
    // Set secure authentication cookies
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[43]++;
    (0, _headers.cookies)().set(AUTH_CONFIG.cookies.accessToken, authData.access_token, {
      ...cookieOptions,
      maxAge: AUTH_CONFIG.security.maxAge.accessToken
    });
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[44]++;
    (0, _headers.cookies)().set(AUTH_CONFIG.cookies.refreshToken, authData.refresh_token, {
      ...cookieOptions,
      maxAge: AUTH_CONFIG.security.maxAge.refreshToken
    });
    // Store user data in secure cookie for immediate access
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[45]++;
    (0, _headers.cookies)().set(AUTH_CONFIG.cookies.user, JSON.stringify(authData.user), {
      ...cookieOptions,
      maxAge: AUTH_CONFIG.security.maxAge.refreshToken
    });
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[46]++;
    console.log("\uD83D\uDE80 Login complete, redirecting to dashboard");
    // Server-side redirect to dashboard
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[47]++;
    (0, _navigation.redirect)("/dashboard");
  } catch (error) {
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[48]++;
    console.error("\uD83D\uDCA5 Login action error:", error);
    // Enhanced error classification
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[49]++;
    if (error.name === "AbortError") {
      /* istanbul ignore next */
      cov_1s5qs2clsc().b[6][0]++;
      cov_1s5qs2clsc().s[50]++;
      return {
        success: false,
        error: "Request timeout. Please try again.",
        code: "TIMEOUT_ERROR"
      };
    } else
    /* istanbul ignore next */
    {
      cov_1s5qs2clsc().b[6][1]++;
    }
    cov_1s5qs2clsc().s[51]++;
    if (error.message?.includes("fetch")) {
      /* istanbul ignore next */
      cov_1s5qs2clsc().b[7][0]++;
      cov_1s5qs2clsc().s[52]++;
      return {
        success: false,
        error: "Unable to connect to authentication service. Please check your connection.",
        code: "NETWORK_ERROR"
      };
    } else
    /* istanbul ignore next */
    {
      cov_1s5qs2clsc().b[7][1]++;
    }
    cov_1s5qs2clsc().s[53]++;
    return {
      success: false,
      error: "An unexpected error occurred. Please try again.",
      code: "UNKNOWN_ERROR",
      details: {
        message: error.message
      }
    };
  }
}
async function registerAction(formData) {
  /* istanbul ignore next */
  cov_1s5qs2clsc().f[16]++;
  cov_1s5qs2clsc().s[54]++;
  console.log("\uD83D\uDCDD Server-side registration action started");
  /* istanbul ignore next */
  cov_1s5qs2clsc().s[55]++;
  try {
    // Extract form data
    const rawData =
    /* istanbul ignore next */
    (cov_1s5qs2clsc().s[56]++, {
      first_name: formData.get("first_name"),
      last_name: formData.get("last_name"),
      email: formData.get("email"),
      password: formData.get("password"),
      date_of_birth: formData.get("date_of_birth"),
      marketing_consent: formData.get("marketing_consent") === "on",
      terms_accepted: formData.get("terms_accepted") === "on"
    });
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[57]++;
    console.log("\uD83D\uDCCB Registration form data:", {
      email: rawData.email,
      first_name: rawData.first_name,
      marketing_consent: rawData.marketing_consent,
      terms_accepted: rawData.terms_accepted
    });
    // Validate using Zod schema
    const validationResult =
    /* istanbul ignore next */
    (cov_1s5qs2clsc().s[58]++, registerSchema.safeParse(rawData));
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[59]++;
    if (!validationResult.success) {
      /* istanbul ignore next */
      cov_1s5qs2clsc().b[8][0]++;
      cov_1s5qs2clsc().s[60]++;
      console.error("❌ Registration validation failed:", validationResult.error.errors);
      /* istanbul ignore next */
      cov_1s5qs2clsc().s[61]++;
      return {
        success: false,
        error: "Invalid form data",
        code: "VALIDATION_ERROR",
        details: validationResult.error.errors
      };
    } else
    /* istanbul ignore next */
    {
      cov_1s5qs2clsc().b[8][1]++;
    }
    const validatedData =
    /* istanbul ignore next */
    (cov_1s5qs2clsc().s[62]++, validationResult.data);
    // Prepare registration payload
    const registerPayload =
    /* istanbul ignore next */
    (cov_1s5qs2clsc().s[63]++, {
      first_name: validatedData.first_name,
      last_name: validatedData.last_name,
      email: validatedData.email,
      password: validatedData.password,
      date_of_birth:
      /* istanbul ignore next */
      (cov_1s5qs2clsc().b[9][0]++, validatedData.date_of_birth) ||
      /* istanbul ignore next */
      (cov_1s5qs2clsc().b[9][1]++, undefined),
      marketing_consent: validatedData.marketing_consent
    });
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[64]++;
    console.log("\uD83C\uDF10 Calling backend registration API");
    const response =
    /* istanbul ignore next */
    (cov_1s5qs2clsc().s[65]++, await fetch(`${AUTH_CONFIG.api.baseUrl}/api/v1/auth/register`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json",
        "User-Agent": "aclue-Web-Server/1.0"
      },
      body: JSON.stringify(registerPayload),
      signal: AbortSignal.timeout(AUTH_CONFIG.api.timeout)
    }));
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[66]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_1s5qs2clsc().b[10][0]++;
      const errorData =
      /* istanbul ignore next */
      (cov_1s5qs2clsc().s[67]++, await response.json().catch(() => {
        /* istanbul ignore next */
        cov_1s5qs2clsc().f[17]++;
        cov_1s5qs2clsc().s[68]++;
        return {
          detail: "Registration failed"
        };
      }));
      /* istanbul ignore next */
      cov_1s5qs2clsc().s[69]++;
      console.error("❌ Backend registration failed:", response.status, errorData);
      /* istanbul ignore next */
      cov_1s5qs2clsc().s[70]++;
      return {
        success: false,
        error:
        /* istanbul ignore next */
        (cov_1s5qs2clsc().b[11][0]++, errorData.detail) ||
        /* istanbul ignore next */
        (cov_1s5qs2clsc().b[11][1]++, "Registration failed"),
        code: response.status === 409 ?
        /* istanbul ignore next */
        (cov_1s5qs2clsc().b[12][0]++, "EMAIL_EXISTS") :
        /* istanbul ignore next */
        (cov_1s5qs2clsc().b[12][1]++, "REGISTRATION_ERROR"),
        details: errorData
      };
    } else
    /* istanbul ignore next */
    {
      cov_1s5qs2clsc().b[10][1]++;
    }
    const authData =
    /* istanbul ignore next */
    (cov_1s5qs2clsc().s[71]++, await response.json());
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[72]++;
    console.log("✅ Backend registration successful, setting secure cookies");
    // Set secure authentication cookies
    const cookieOptions =
    /* istanbul ignore next */
    (cov_1s5qs2clsc().s[73]++, AUTH_CONFIG.security);
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[74]++;
    (0, _headers.cookies)().set(AUTH_CONFIG.cookies.accessToken, authData.access_token, {
      ...cookieOptions,
      maxAge: AUTH_CONFIG.security.maxAge.accessToken
    });
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[75]++;
    (0, _headers.cookies)().set(AUTH_CONFIG.cookies.refreshToken, authData.refresh_token, {
      ...cookieOptions,
      maxAge: AUTH_CONFIG.security.maxAge.refreshToken
    });
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[76]++;
    (0, _headers.cookies)().set(AUTH_CONFIG.cookies.user, JSON.stringify(authData.user), {
      ...cookieOptions,
      maxAge: AUTH_CONFIG.security.maxAge.refreshToken
    });
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[77]++;
    console.log("\uD83D\uDE80 Registration complete, redirecting to dashboard");
    // Server-side redirect to dashboard
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[78]++;
    (0, _navigation.redirect)("/dashboard");
  } catch (error) {
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[79]++;
    console.error("\uD83D\uDCA5 Registration action error:", error);
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[80]++;
    if (error.name === "AbortError") {
      /* istanbul ignore next */
      cov_1s5qs2clsc().b[13][0]++;
      cov_1s5qs2clsc().s[81]++;
      return {
        success: false,
        error: "Request timeout. Please try again.",
        code: "TIMEOUT_ERROR"
      };
    } else
    /* istanbul ignore next */
    {
      cov_1s5qs2clsc().b[13][1]++;
    }
    cov_1s5qs2clsc().s[82]++;
    if (error.message?.includes("fetch")) {
      /* istanbul ignore next */
      cov_1s5qs2clsc().b[14][0]++;
      cov_1s5qs2clsc().s[83]++;
      return {
        success: false,
        error: "Unable to connect to registration service. Please check your connection.",
        code: "NETWORK_ERROR"
      };
    } else
    /* istanbul ignore next */
    {
      cov_1s5qs2clsc().b[14][1]++;
    }
    cov_1s5qs2clsc().s[84]++;
    return {
      success: false,
      error: "An unexpected error occurred during registration. Please try again.",
      code: "UNKNOWN_ERROR",
      details: {
        message: error.message
      }
    };
  }
}
async function logoutAction() {
  /* istanbul ignore next */
  cov_1s5qs2clsc().f[18]++;
  cov_1s5qs2clsc().s[85]++;
  console.log("\uD83D\uDEAA Server-side logout action started");
  /* istanbul ignore next */
  cov_1s5qs2clsc().s[86]++;
  try {
    // Get current tokens for API logout call
    const accessToken =
    /* istanbul ignore next */
    (cov_1s5qs2clsc().s[87]++, (0, _headers.cookies)().get(AUTH_CONFIG.cookies.accessToken)?.value);
    // Call backend logout API if token exists
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[88]++;
    if (accessToken) {
      /* istanbul ignore next */
      cov_1s5qs2clsc().b[15][0]++;
      cov_1s5qs2clsc().s[89]++;
      try {
        /* istanbul ignore next */
        cov_1s5qs2clsc().s[90]++;
        console.log("\uD83C\uDF10 Calling backend logout API");
        /* istanbul ignore next */
        cov_1s5qs2clsc().s[91]++;
        await fetch(`${AUTH_CONFIG.api.baseUrl}/api/v1/auth/logout`, {
          method: "POST",
          headers: {
            "Authorization": `Bearer ${accessToken}`,
            "Content-Type": "application/json"
          },
          signal: AbortSignal.timeout(5000)
        });
      } catch (apiError) {
        /* istanbul ignore next */
        cov_1s5qs2clsc().s[92]++;
        console.warn("⚠️ Backend logout API failed, proceeding with local cleanup:", apiError);
      }
    } else
    /* istanbul ignore next */
    {
      cov_1s5qs2clsc().b[15][1]++;
    }
    // Clear all authentication cookies securely
    cov_1s5qs2clsc().s[93]++;
    console.log("\uD83E\uDDF9 Clearing authentication cookies");
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[94]++;
    (0, _headers.cookies)().delete(AUTH_CONFIG.cookies.accessToken);
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[95]++;
    (0, _headers.cookies)().delete(AUTH_CONFIG.cookies.refreshToken);
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[96]++;
    (0, _headers.cookies)().delete(AUTH_CONFIG.cookies.user);
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[97]++;
    console.log("✅ Logout complete, redirecting to home");
  } catch (error) {
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[98]++;
    console.error("\uD83D\uDCA5 Logout action error:", error);
  } finally {
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[99]++;
    // Always redirect to home, even if logout fails
    (0, _navigation.redirect)("/");
  }
}
async function getCurrentUser() {
  /* istanbul ignore next */
  cov_1s5qs2clsc().f[19]++;
  cov_1s5qs2clsc().s[100]++;
  try {
    // First, try to get user from secure cookie (fastest)
    const userCookie =
    /* istanbul ignore next */
    (cov_1s5qs2clsc().s[101]++, (0, _headers.cookies)().get(AUTH_CONFIG.cookies.user)?.value);
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[102]++;
    if (userCookie) {
      /* istanbul ignore next */
      cov_1s5qs2clsc().b[16][0]++;
      cov_1s5qs2clsc().s[103]++;
      try {
        const userData =
        /* istanbul ignore next */
        (cov_1s5qs2clsc().s[104]++, JSON.parse(userCookie));
        /* istanbul ignore next */
        cov_1s5qs2clsc().s[105]++;
        return userData;
      } catch (parseError) {
        /* istanbul ignore next */
        cov_1s5qs2clsc().s[106]++;
        console.warn("⚠️ Invalid user cookie data, falling back to API");
      }
    } else
    /* istanbul ignore next */
    {
      cov_1s5qs2clsc().b[16][1]++;
    }
    // Fallback to API validation if no cookie or invalid cookie
    const accessToken =
    /* istanbul ignore next */
    (cov_1s5qs2clsc().s[107]++, (0, _headers.cookies)().get(AUTH_CONFIG.cookies.accessToken)?.value);
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[108]++;
    if (!accessToken) {
      /* istanbul ignore next */
      cov_1s5qs2clsc().b[17][0]++;
      cov_1s5qs2clsc().s[109]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1s5qs2clsc().b[17][1]++;
    }
    cov_1s5qs2clsc().s[110]++;
    console.log("\uD83D\uDD0D Validating user session with backend API");
    const response =
    /* istanbul ignore next */
    (cov_1s5qs2clsc().s[111]++, await fetch(`${AUTH_CONFIG.api.baseUrl}/api/v1/auth/me`, {
      headers: {
        "Authorization": `Bearer ${accessToken}`,
        "Accept": "application/json"
      },
      signal: AbortSignal.timeout(AUTH_CONFIG.api.timeout)
    }));
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[112]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_1s5qs2clsc().b[18][0]++;
      cov_1s5qs2clsc().s[113]++;
      console.warn("⚠️ User session validation failed:", response.status);
      /* istanbul ignore next */
      cov_1s5qs2clsc().s[114]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1s5qs2clsc().b[18][1]++;
    }
    const userData =
    /* istanbul ignore next */
    (cov_1s5qs2clsc().s[115]++, await response.json());
    // Update user cookie with fresh data
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[116]++;
    (0, _headers.cookies)().set(AUTH_CONFIG.cookies.user, JSON.stringify(userData), {
      ...AUTH_CONFIG.security,
      maxAge: AUTH_CONFIG.security.maxAge.refreshToken
    });
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[117]++;
    return userData;
  } catch (error) {
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[118]++;
    console.error("\uD83D\uDCA5 Get current user error:", error);
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[119]++;
    return null;
  }
}
async function refreshTokenAction() {
  /* istanbul ignore next */
  cov_1s5qs2clsc().f[20]++;
  cov_1s5qs2clsc().s[120]++;
  console.log("\uD83D\uDD04 Server-side token refresh started");
  /* istanbul ignore next */
  cov_1s5qs2clsc().s[121]++;
  try {
    const refreshToken =
    /* istanbul ignore next */
    (cov_1s5qs2clsc().s[122]++, (0, _headers.cookies)().get(AUTH_CONFIG.cookies.refreshToken)?.value);
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[123]++;
    if (!refreshToken) {
      /* istanbul ignore next */
      cov_1s5qs2clsc().b[19][0]++;
      cov_1s5qs2clsc().s[124]++;
      return {
        success: false,
        error: "No refresh token available",
        code: "NO_REFRESH_TOKEN"
      };
    } else
    /* istanbul ignore next */
    {
      cov_1s5qs2clsc().b[19][1]++;
    }
    cov_1s5qs2clsc().s[125]++;
    console.log("\uD83C\uDF10 Calling backend token refresh API");
    const response =
    /* istanbul ignore next */
    (cov_1s5qs2clsc().s[126]++, await fetch(`${AUTH_CONFIG.api.baseUrl}/api/v1/auth/refresh`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      },
      body: JSON.stringify({
        refresh_token: refreshToken
      }),
      signal: AbortSignal.timeout(AUTH_CONFIG.api.timeout)
    }));
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[127]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_1s5qs2clsc().b[20][0]++;
      cov_1s5qs2clsc().s[128]++;
      console.error("❌ Token refresh failed:", response.status);
      // Clear invalid cookies
      /* istanbul ignore next */
      cov_1s5qs2clsc().s[129]++;
      (0, _headers.cookies)().delete(AUTH_CONFIG.cookies.accessToken);
      /* istanbul ignore next */
      cov_1s5qs2clsc().s[130]++;
      (0, _headers.cookies)().delete(AUTH_CONFIG.cookies.refreshToken);
      /* istanbul ignore next */
      cov_1s5qs2clsc().s[131]++;
      (0, _headers.cookies)().delete(AUTH_CONFIG.cookies.user);
      /* istanbul ignore next */
      cov_1s5qs2clsc().s[132]++;
      return {
        success: false,
        error: "Session expired. Please log in again.",
        code: "REFRESH_FAILED"
      };
    } else
    /* istanbul ignore next */
    {
      cov_1s5qs2clsc().b[20][1]++;
    }
    const authData =
    /* istanbul ignore next */
    (cov_1s5qs2clsc().s[133]++, await response.json());
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[134]++;
    console.log("✅ Token refresh successful, updating cookies");
    // Update cookies with new tokens
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[135]++;
    (0, _headers.cookies)().set(AUTH_CONFIG.cookies.accessToken, authData.access_token, {
      ...AUTH_CONFIG.security,
      maxAge: AUTH_CONFIG.security.maxAge.accessToken
    });
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[136]++;
    if (authData.refresh_token) {
      /* istanbul ignore next */
      cov_1s5qs2clsc().b[21][0]++;
      cov_1s5qs2clsc().s[137]++;
      (0, _headers.cookies)().set(AUTH_CONFIG.cookies.refreshToken, authData.refresh_token, {
        ...AUTH_CONFIG.security,
        maxAge: AUTH_CONFIG.security.maxAge.refreshToken
      });
    } else
    /* istanbul ignore next */
    {
      cov_1s5qs2clsc().b[21][1]++;
    }
    cov_1s5qs2clsc().s[138]++;
    return {
      success: true,
      user: authData.user
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[139]++;
    console.error("\uD83D\uDCA5 Token refresh error:", error);
    // Clear potentially invalid cookies
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[140]++;
    (0, _headers.cookies)().delete(AUTH_CONFIG.cookies.accessToken);
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[141]++;
    (0, _headers.cookies)().delete(AUTH_CONFIG.cookies.refreshToken);
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[142]++;
    (0, _headers.cookies)().delete(AUTH_CONFIG.cookies.user);
    /* istanbul ignore next */
    cov_1s5qs2clsc().s[143]++;
    return {
      success: false,
      error: "Token refresh failed. Please log in again.",
      code: "REFRESH_ERROR",
      details: {
        message: error.message
      }
    };
  }
}
async function isAuthenticated() {
  /* istanbul ignore next */
  cov_1s5qs2clsc().f[21]++;
  const user =
  /* istanbul ignore next */
  (cov_1s5qs2clsc().s[144]++, await getCurrentUser());
  /* istanbul ignore next */
  cov_1s5qs2clsc().s[145]++;
  return user !== null;
}
async function requireAuth() {
  /* istanbul ignore next */
  cov_1s5qs2clsc().f[22]++;
  const user =
  /* istanbul ignore next */
  (cov_1s5qs2clsc().s[146]++, await getCurrentUser());
  /* istanbul ignore next */
  cov_1s5qs2clsc().s[147]++;
  if (!user) {
    /* istanbul ignore next */
    cov_1s5qs2clsc().b[22][0]++;
    cov_1s5qs2clsc().s[148]++;
    (0, _navigation.redirect)("/auth/login");
  } else
  /* istanbul ignore next */
  {
    cov_1s5qs2clsc().b[22][1]++;
  }
  cov_1s5qs2clsc().s[149]++;
  return user;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,