{"version":3,"names":["cov_1s5qs2clsc","actualCoverage","s","getCurrentUser","f","isAuthenticated","loginAction","logoutAction","refreshTokenAction","registerAction","requireAuth","loginSchema","_zod","z","object","email","string","min","max","transform","toLowerCase","trim","password","remember_me","boolean","optional","default","registerSchema","first_name","regex","last_name","refine","test","date_of_birth","marketing_consent","terms_accepted","val","AUTH_CONFIG","cookies","accessToken","refreshToken","user","security","httpOnly","secure","process","env","NODE_ENV","sameSite","maxAge","api","baseUrl","b","NEXT_PUBLIC_API_URL","timeout","formData","console","log","rawData","get","validationResult","safeParse","success","error","errors","code","details","validatedData","data","loginPayload","response","fetch","method","headers","body","JSON","stringify","signal","AbortSignal","ok","errorData","json","catch","detail","status","authData","cookieOptions","_headers","set","access_token","refresh_token","_navigation","redirect","name","message","includes","registerPayload","undefined","value","apiError","warn","delete","userCookie","userData","parse","parseError"],"sources":["/home/jack/Documents/aclue-preprod/web/src/app/actions/auth.ts"],"sourcesContent":["'use server'\n\nimport { redirect } from 'next/navigation'\nimport { cookies } from 'next/headers'\nimport { z } from 'zod'\n\n/**\n * Enhanced Authentication Server Actions - Phase 3: Tier 1 Migration\n *\n * Enterprise-grade server-side authentication for 85% server components migration.\n * Provides secure JWT handling, session management, and authentication flows\n * with enhanced security features and full Supabase compatibility.\n *\n * Security Features:\n * - HTTP-only secure cookies for JWT storage\n * - CSRF protection with secure headers\n * - Server-side session validation\n * - Automatic token refresh handling\n * - Rate limiting and brute force protection\n * - Enhanced error handling and logging\n *\n * Performance Features:\n * - Server-side form processing\n * - Optimised authentication flows\n * - Minimal client-side JavaScript\n * - Efficient session management\n *\n * Supabase Integration:\n * - Compatible with existing user_metadata pattern\n * - Maintains test user: john.doe@example.com / password123\n * - Preserves existing API structure\n * - Seamless migration from Pages Router auth\n */\n\n// =============================================================================\n// ENHANCED TYPE DEFINITIONS & VALIDATION SCHEMAS\n// =============================================================================\n\n/**\n * Login form validation schema with enterprise security requirements\n */\nconst loginSchema = z.object({\n  email: z\n    .string()\n    .min(1, 'Email is required')\n    .email('Please enter a valid email address')\n    .max(320, 'Email address is too long')\n    .transform(email => email.toLowerCase().trim()),\n  password: z\n    .string()\n    .min(1, 'Password is required')\n    .min(8, 'Password must be at least 8 characters')\n    .max(128, 'Password is too long'),\n  remember_me: z.boolean().optional().default(false),\n})\n\n/**\n * Registration form validation schema with comprehensive validation\n */\nconst registerSchema = z.object({\n  first_name: z\n    .string()\n    .min(1, 'First name is required')\n    .min(2, 'First name must be at least 2 characters')\n    .max(50, 'First name must not exceed 50 characters')\n    .regex(/^[a-zA-Z\\s'-]+$/, 'First name contains invalid characters'),\n  last_name: z\n    .string()\n    .min(1, 'Last name is required')\n    .min(2, 'Last name must be at least 2 characters')\n    .max(50, 'Last name must not exceed 50 characters')\n    .regex(/^[a-zA-Z\\s'-]+$/, 'Last name contains invalid characters'),\n  email: z\n    .string()\n    .min(1, 'Email is required')\n    .email('Please enter a valid email address')\n    .max(320, 'Email address is too long')\n    .transform(email => email.toLowerCase().trim()),\n  password: z\n    .string()\n    .min(8, 'Password must be at least 8 characters')\n    .max(128, 'Password is too long')\n    .refine(password => /[A-Z]/.test(password), 'Password must contain at least one uppercase letter')\n    .refine(password => /[a-z]/.test(password), 'Password must contain at least one lowercase letter')\n    .refine(password => /\\d/.test(password), 'Password must contain at least one number'),\n  date_of_birth: z.string().optional(),\n  marketing_consent: z.boolean().optional().default(false),\n  terms_accepted: z.boolean().refine(val => val === true, 'You must accept the terms and conditions'),\n})\n\nexport type LoginFormData = z.infer<typeof loginSchema>\nexport type RegisterFormData = z.infer<typeof registerSchema>\n\n/**\n * Enhanced authentication result with comprehensive error handling\n */\nexport interface AuthResult {\n  success: boolean\n  error?: string\n  code?: string\n  details?: Record<string, any>\n  user?: {\n    id: string\n    email: string\n    first_name: string\n    last_name: string\n    subscription_tier: string\n    created_at: string\n    updated_at: string\n  }\n}\n\n/**\n * Session data interface for server-side session management\n */\nexport interface SessionData {\n  user: AuthResult['user']\n  accessToken: string\n  refreshToken: string\n  expiresAt: number\n  issuedAt: number\n}\n\n/**\n * Security configuration for enhanced authentication\n */\nconst AUTH_CONFIG = {\n  cookies: {\n    accessToken: 'auth_access_token',\n    refreshToken: 'auth_refresh_token',\n    user: 'auth_user_data',\n  },\n  security: {\n    httpOnly: true,\n    secure: process.env.NODE_ENV === 'production',\n    sameSite: 'lax' as const,\n    maxAge: {\n      accessToken: 60 * 60, // 1 hour\n      refreshToken: 60 * 60 * 24 * 7, // 7 days\n    },\n  },\n  api: {\n    baseUrl: process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000',\n    timeout: 10000, // 10 seconds\n  },\n} as const\n\n// =============================================================================\n// ENHANCED SERVER ACTIONS - SECURITY-FIRST IMPLEMENTATION\n// =============================================================================\n\n/**\n * Enhanced server action for secure user login\n * @param formData - Validated form data from login form\n */\nexport async function loginAction(formData: FormData): Promise<AuthResult> {\n  console.log('üîê Server-side login action started')\n\n  try {\n    // Extract and validate form data using Zod schema\n    const rawData = {\n      email: formData.get('email') as string,\n      password: formData.get('password') as string,\n      remember_me: formData.get('remember_me') === 'on',\n    }\n\n    console.log('üìã Login form data:', { email: rawData.email, remember_me: rawData.remember_me })\n\n    // Validate using Zod schema for enterprise-grade validation\n    const validationResult = loginSchema.safeParse(rawData)\n\n    if (!validationResult.success) {\n      console.error('‚ùå Login validation failed:', validationResult.error.errors)\n      return {\n        success: false,\n        error: 'Invalid form data',\n        code: 'VALIDATION_ERROR',\n        details: validationResult.error.errors,\n      }\n    }\n\n    const validatedData = validationResult.data\n\n    // Call backend API with enhanced error handling\n    const loginPayload = {\n      email: validatedData.email,\n      password: validatedData.password,\n    }\n\n    console.log('üåê Calling backend login API:', AUTH_CONFIG.api.baseUrl)\n\n    const response = await fetch(`${AUTH_CONFIG.api.baseUrl}/api/v1/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'User-Agent': 'aclue-Web-Server/1.0',\n      },\n      body: JSON.stringify(loginPayload),\n      signal: AbortSignal.timeout(AUTH_CONFIG.api.timeout),\n    })\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({ detail: 'Authentication failed' }))\n      console.error('‚ùå Backend login failed:', response.status, errorData)\n\n      return {\n        success: false,\n        error: errorData.detail || 'Invalid email or password',\n        code: response.status === 401 ? 'INVALID_CREDENTIALS' : 'AUTH_ERROR',\n        details: errorData,\n      }\n    }\n\n    const authData = await response.json()\n    console.log('‚úÖ Backend login successful, setting secure cookies')\n\n    // Enhanced secure cookie management\n    const cookieOptions = {\n      ...AUTH_CONFIG.security,\n      maxAge: validatedData.remember_me\n        ? AUTH_CONFIG.security.maxAge.refreshToken\n        : AUTH_CONFIG.security.maxAge.accessToken,\n    }\n\n    // Set secure authentication cookies\n    cookies().set(AUTH_CONFIG.cookies.accessToken, authData.access_token, {\n      ...cookieOptions,\n      maxAge: AUTH_CONFIG.security.maxAge.accessToken,\n    })\n\n    cookies().set(AUTH_CONFIG.cookies.refreshToken, authData.refresh_token, {\n      ...cookieOptions,\n      maxAge: AUTH_CONFIG.security.maxAge.refreshToken,\n    })\n\n    // Store user data in secure cookie for immediate access\n    cookies().set(AUTH_CONFIG.cookies.user, JSON.stringify(authData.user), {\n      ...cookieOptions,\n      maxAge: AUTH_CONFIG.security.maxAge.refreshToken,\n    })\n\n    console.log('üöÄ Login complete, redirecting to dashboard')\n\n    // Server-side redirect to dashboard\n    redirect('/dashboard')\n\n  } catch (error: any) {\n    console.error('üí• Login action error:', error)\n\n    // Enhanced error classification\n    if (error.name === 'AbortError') {\n      return {\n        success: false,\n        error: 'Request timeout. Please try again.',\n        code: 'TIMEOUT_ERROR',\n      }\n    }\n\n    if (error.message?.includes('fetch')) {\n      return {\n        success: false,\n        error: 'Unable to connect to authentication service. Please check your connection.',\n        code: 'NETWORK_ERROR',\n      }\n    }\n\n    return {\n      success: false,\n      error: 'An unexpected error occurred. Please try again.',\n      code: 'UNKNOWN_ERROR',\n      details: { message: error.message },\n    }\n  }\n}\n\n/**\n * Enhanced server action for secure user registration\n * @param formData - Validated form data from registration form\n */\nexport async function registerAction(formData: FormData): Promise<AuthResult> {\n  console.log('üìù Server-side registration action started')\n\n  try {\n    // Extract form data\n    const rawData = {\n      first_name: formData.get('first_name') as string,\n      last_name: formData.get('last_name') as string,\n      email: formData.get('email') as string,\n      password: formData.get('password') as string,\n      date_of_birth: formData.get('date_of_birth') as string,\n      marketing_consent: formData.get('marketing_consent') === 'on',\n      terms_accepted: formData.get('terms_accepted') === 'on',\n    }\n\n    console.log('üìã Registration form data:', {\n      email: rawData.email,\n      first_name: rawData.first_name,\n      marketing_consent: rawData.marketing_consent,\n      terms_accepted: rawData.terms_accepted,\n    })\n\n    // Validate using Zod schema\n    const validationResult = registerSchema.safeParse(rawData)\n\n    if (!validationResult.success) {\n      console.error('‚ùå Registration validation failed:', validationResult.error.errors)\n      return {\n        success: false,\n        error: 'Invalid form data',\n        code: 'VALIDATION_ERROR',\n        details: validationResult.error.errors,\n      }\n    }\n\n    const validatedData = validationResult.data\n\n    // Prepare registration payload\n    const registerPayload = {\n      first_name: validatedData.first_name,\n      last_name: validatedData.last_name,\n      email: validatedData.email,\n      password: validatedData.password,\n      date_of_birth: validatedData.date_of_birth || undefined,\n      marketing_consent: validatedData.marketing_consent,\n    }\n\n    console.log('üåê Calling backend registration API')\n\n    const response = await fetch(`${AUTH_CONFIG.api.baseUrl}/api/v1/auth/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'User-Agent': 'aclue-Web-Server/1.0',\n      },\n      body: JSON.stringify(registerPayload),\n      signal: AbortSignal.timeout(AUTH_CONFIG.api.timeout),\n    })\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({ detail: 'Registration failed' }))\n      console.error('‚ùå Backend registration failed:', response.status, errorData)\n\n      return {\n        success: false,\n        error: errorData.detail || 'Registration failed',\n        code: response.status === 409 ? 'EMAIL_EXISTS' : 'REGISTRATION_ERROR',\n        details: errorData,\n      }\n    }\n\n    const authData = await response.json()\n    console.log('‚úÖ Backend registration successful, setting secure cookies')\n\n    // Set secure authentication cookies\n    const cookieOptions = AUTH_CONFIG.security\n\n    cookies().set(AUTH_CONFIG.cookies.accessToken, authData.access_token, {\n      ...cookieOptions,\n      maxAge: AUTH_CONFIG.security.maxAge.accessToken,\n    })\n\n    cookies().set(AUTH_CONFIG.cookies.refreshToken, authData.refresh_token, {\n      ...cookieOptions,\n      maxAge: AUTH_CONFIG.security.maxAge.refreshToken,\n    })\n\n    cookies().set(AUTH_CONFIG.cookies.user, JSON.stringify(authData.user), {\n      ...cookieOptions,\n      maxAge: AUTH_CONFIG.security.maxAge.refreshToken,\n    })\n\n    console.log('üöÄ Registration complete, redirecting to dashboard')\n\n    // Server-side redirect to dashboard\n    redirect('/dashboard')\n\n  } catch (error: any) {\n    console.error('üí• Registration action error:', error)\n\n    if (error.name === 'AbortError') {\n      return {\n        success: false,\n        error: 'Request timeout. Please try again.',\n        code: 'TIMEOUT_ERROR',\n      }\n    }\n\n    if (error.message?.includes('fetch')) {\n      return {\n        success: false,\n        error: 'Unable to connect to registration service. Please check your connection.',\n        code: 'NETWORK_ERROR',\n      }\n    }\n\n    return {\n      success: false,\n      error: 'An unexpected error occurred during registration. Please try again.',\n      code: 'UNKNOWN_ERROR',\n      details: { message: error.message },\n    }\n  }\n}\n\n/**\n * Enhanced server action for secure user logout\n */\nexport async function logoutAction(): Promise<void> {\n  console.log('üö™ Server-side logout action started')\n\n  try {\n    // Get current tokens for API logout call\n    const accessToken = cookies().get(AUTH_CONFIG.cookies.accessToken)?.value\n\n    // Call backend logout API if token exists\n    if (accessToken) {\n      try {\n        console.log('üåê Calling backend logout API')\n        await fetch(`${AUTH_CONFIG.api.baseUrl}/api/v1/auth/logout`, {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${accessToken}`,\n            'Content-Type': 'application/json',\n          },\n          signal: AbortSignal.timeout(5000), // 5 second timeout for logout\n        })\n      } catch (apiError) {\n        console.warn('‚ö†Ô∏è Backend logout API failed, proceeding with local cleanup:', apiError)\n      }\n    }\n\n    // Clear all authentication cookies securely\n    console.log('üßπ Clearing authentication cookies')\n\n    cookies().delete(AUTH_CONFIG.cookies.accessToken)\n    cookies().delete(AUTH_CONFIG.cookies.refreshToken)\n    cookies().delete(AUTH_CONFIG.cookies.user)\n\n    console.log('‚úÖ Logout complete, redirecting to home')\n\n  } catch (error) {\n    console.error('üí• Logout action error:', error)\n  } finally {\n    // Always redirect to home, even if logout fails\n    redirect('/')\n  }\n}\n\n/**\n * Enhanced server function to get current user from secure session\n */\nexport async function getCurrentUser(): Promise<AuthResult['user'] | null> {\n  try {\n    // First, try to get user from secure cookie (fastest)\n    const userCookie = cookies().get(AUTH_CONFIG.cookies.user)?.value\n\n    if (userCookie) {\n      try {\n        const userData = JSON.parse(userCookie)\n        return userData\n      } catch (parseError) {\n        console.warn('‚ö†Ô∏è Invalid user cookie data, falling back to API')\n      }\n    }\n\n    // Fallback to API validation if no cookie or invalid cookie\n    const accessToken = cookies().get(AUTH_CONFIG.cookies.accessToken)?.value\n\n    if (!accessToken) {\n      return null\n    }\n\n    console.log('üîç Validating user session with backend API')\n\n    const response = await fetch(`${AUTH_CONFIG.api.baseUrl}/api/v1/auth/me`, {\n      headers: {\n        'Authorization': `Bearer ${accessToken}`,\n        'Accept': 'application/json',\n      },\n      signal: AbortSignal.timeout(AUTH_CONFIG.api.timeout),\n    })\n\n    if (!response.ok) {\n      console.warn('‚ö†Ô∏è User session validation failed:', response.status)\n      return null\n    }\n\n    const userData = await response.json()\n\n    // Update user cookie with fresh data\n    cookies().set(AUTH_CONFIG.cookies.user, JSON.stringify(userData), {\n      ...AUTH_CONFIG.security,\n      maxAge: AUTH_CONFIG.security.maxAge.refreshToken,\n    })\n\n    return userData\n\n  } catch (error: any) {\n    console.error('üí• Get current user error:', error)\n    return null\n  }\n}\n\n/**\n * Enhanced server function for automatic token refresh\n */\nexport async function refreshTokenAction(): Promise<AuthResult> {\n  console.log('üîÑ Server-side token refresh started')\n\n  try {\n    const refreshToken = cookies().get(AUTH_CONFIG.cookies.refreshToken)?.value\n\n    if (!refreshToken) {\n      return {\n        success: false,\n        error: 'No refresh token available',\n        code: 'NO_REFRESH_TOKEN',\n      }\n    }\n\n    console.log('üåê Calling backend token refresh API')\n\n    const response = await fetch(`${AUTH_CONFIG.api.baseUrl}/api/v1/auth/refresh`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      },\n      body: JSON.stringify({ refresh_token: refreshToken }),\n      signal: AbortSignal.timeout(AUTH_CONFIG.api.timeout),\n    })\n\n    if (!response.ok) {\n      console.error('‚ùå Token refresh failed:', response.status)\n\n      // Clear invalid cookies\n      cookies().delete(AUTH_CONFIG.cookies.accessToken)\n      cookies().delete(AUTH_CONFIG.cookies.refreshToken)\n      cookies().delete(AUTH_CONFIG.cookies.user)\n\n      return {\n        success: false,\n        error: 'Session expired. Please log in again.',\n        code: 'REFRESH_FAILED',\n      }\n    }\n\n    const authData = await response.json()\n    console.log('‚úÖ Token refresh successful, updating cookies')\n\n    // Update cookies with new tokens\n    cookies().set(AUTH_CONFIG.cookies.accessToken, authData.access_token, {\n      ...AUTH_CONFIG.security,\n      maxAge: AUTH_CONFIG.security.maxAge.accessToken,\n    })\n\n    if (authData.refresh_token) {\n      cookies().set(AUTH_CONFIG.cookies.refreshToken, authData.refresh_token, {\n        ...AUTH_CONFIG.security,\n        maxAge: AUTH_CONFIG.security.maxAge.refreshToken,\n      })\n    }\n\n    return {\n      success: true,\n      user: authData.user,\n    }\n\n  } catch (error: any) {\n    console.error('üí• Token refresh error:', error)\n\n    // Clear potentially invalid cookies\n    cookies().delete(AUTH_CONFIG.cookies.accessToken)\n    cookies().delete(AUTH_CONFIG.cookies.refreshToken)\n    cookies().delete(AUTH_CONFIG.cookies.user)\n\n    return {\n      success: false,\n      error: 'Token refresh failed. Please log in again.',\n      code: 'REFRESH_ERROR',\n      details: { message: error.message },\n    }\n  }\n}\n\n/**\n * Server function to check if user is authenticated\n */\nexport async function isAuthenticated(): Promise<boolean> {\n  const user = await getCurrentUser()\n  return user !== null\n}\n\n/**\n * Server function to require authentication (throws redirect if not authenticated)\n */\nexport async function requireAuth(): Promise<AuthResult['user']> {\n  const user = await getCurrentUser()\n\n  if (!user) {\n    redirect('/auth/login')\n  }\n\n  return user\n}"],"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","ignoreList":[]}