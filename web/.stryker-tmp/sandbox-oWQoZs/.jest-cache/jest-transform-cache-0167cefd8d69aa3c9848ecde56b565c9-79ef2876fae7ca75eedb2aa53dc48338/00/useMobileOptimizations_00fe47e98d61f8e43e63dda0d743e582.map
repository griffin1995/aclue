{"version":3,"names":["default","cov_12n9nmp530","f","s","_default","useHapticFeedback","useMobileOptimizations","useNetworkStatus","optimizations","setOptimizations","_react","useState","isMobile","isTouch","orientation","viewportHeight","isStandalone","hasNotch","devicePixelRatio","useEffect","window","b","updateOptimizations","test","navigator","userAgent","innerWidth","maxTouchPoints","innerHeight","visualViewport","height","matchMedia","matches","standalone","document","referrer","includes","CSS","supports","handleResize","handleOrientationChange","setTimeout","addEventListener","removeEventListener","viewport","querySelector","setAttribute","body","style","overscrollBehavior","documentElement","classList","toggle","remove","vibrate","pattern","lightTap","mediumTap","heavyTap","doubleTap","success","error","isOnline","setIsOnline","connectionType","setConnectionType","updateNetworkStatus","onLine","connection","mozConnection","webkitConnection","effectiveType","type"],"sources":["/home/jack/Documents/aclue-preprod/web/src/hooks/useMobileOptimizations.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\ninterface MobileOptimizations {\n  isMobile: boolean;\n  isTouch: boolean;\n  orientation: 'portrait' | 'landscape';\n  viewportHeight: number;\n  isStandalone: boolean;\n  hasNotch: boolean;\n  devicePixelRatio: number;\n}\n\nexport const useMobileOptimizations = (): MobileOptimizations => {\n  const [optimizations, setOptimizations] = useState<MobileOptimizations>({\n    isMobile: false,\n    isTouch: false,\n    orientation: 'portrait',\n    viewportHeight: 0,\n    isStandalone: false,\n    hasNotch: false,\n    devicePixelRatio: 1,\n  });\n\n  useEffect(() => {\n    if (typeof window === 'undefined') return;\n\n    const updateOptimizations = () => {\n      // Detect mobile device\n      const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n        navigator.userAgent\n      ) || window.innerWidth <= 768;\n\n      // Detect touch capability\n      const isTouch = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n\n      // Detect orientation\n      const orientation = window.innerHeight > window.innerWidth ? 'portrait' : 'landscape';\n\n      // Get viewport height (accounting for mobile browser UI)\n      const viewportHeight = window.visualViewport?.height || window.innerHeight;\n\n      // Detect standalone PWA mode\n      const isStandalone = window.matchMedia('(display-mode: standalone)').matches ||\n                          (navigator as any).standalone ||\n                          document.referrer.includes('android-app://');\n\n      // Detect iPhone X+ notch\n      const hasNotch = CSS.supports('padding-top: env(safe-area-inset-top)') &&\n                      /iPhone/.test(navigator.userAgent);\n\n      // Get device pixel ratio\n      const devicePixelRatio = window.devicePixelRatio || 1;\n\n      setOptimizations({\n        isMobile,\n        isTouch,\n        orientation,\n        viewportHeight,\n        isStandalone,\n        hasNotch,\n        devicePixelRatio,\n      });\n    };\n\n    // Initial setup\n    updateOptimizations();\n\n    // Listen for changes\n    const handleResize = () => updateOptimizations();\n    const handleOrientationChange = () => {\n      setTimeout(updateOptimizations, 100); // Delay to account for orientation change\n    };\n\n    window.addEventListener('resize', handleResize);\n    window.addEventListener('orientationchange', handleOrientationChange);\n    \n    // Listen for visual viewport changes (mobile keyboard, etc.)\n    if (window.visualViewport) {\n      window.visualViewport.addEventListener('resize', updateOptimizations);\n    }\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('orientationchange', handleOrientationChange);\n      \n      if (window.visualViewport) {\n        window.visualViewport.removeEventListener('resize', updateOptimizations);\n      }\n    };\n  }, []);\n\n  // Apply mobile-specific optimizations\n  useEffect(() => {\n    if (typeof window === 'undefined') return;\n\n    // Disable zoom on iOS\n    if (optimizations.isMobile) {\n      const viewport = document.querySelector('meta[name=\"viewport\"]');\n      if (viewport) {\n        viewport.setAttribute(\n          'content',\n          'width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, viewport-fit=cover'\n        );\n      }\n    }\n\n    // Prevent overscroll/bounce on iOS\n    if (/iPad|iPhone|iPod/.test(navigator.userAgent)) {\n      document.body.style.overscrollBehavior = 'none';\n      document.documentElement.style.overscrollBehavior = 'none';\n    }\n\n    // Add mobile-specific CSS classes\n    document.body.classList.toggle('mobile', optimizations.isMobile);\n    document.body.classList.toggle('touch', optimizations.isTouch);\n    document.body.classList.toggle('standalone', optimizations.isStandalone);\n    document.body.classList.toggle('has-notch', optimizations.hasNotch);\n    document.body.classList.toggle('landscape', optimizations.orientation === 'landscape');\n    document.body.classList.toggle('portrait', optimizations.orientation === 'portrait');\n\n    return () => {\n      document.body.classList.remove('mobile', 'touch', 'standalone', 'has-notch', 'landscape', 'portrait');\n    };\n  }, [optimizations]);\n\n  return optimizations;\n};\n\n// Hook for haptic feedback\nexport const useHapticFeedback = () => {\n  const vibrate = (pattern: number | number[]) => {\n    if (typeof window !== 'undefined' && 'vibrate' in navigator) {\n      navigator.vibrate(pattern);\n    }\n  };\n\n  const lightTap = () => vibrate(10);\n  const mediumTap = () => vibrate(50);\n  const heavyTap = () => vibrate(100);\n  const doubleTap = () => vibrate([30, 20, 30]);\n  const success = () => vibrate([50, 50, 50]);\n  const error = () => vibrate([100, 50, 100]);\n\n  return {\n    vibrate,\n    lightTap,\n    mediumTap,\n    heavyTap,\n    doubleTap,\n    success,\n    error,\n  };\n};\n\n// Hook for detecting network status\nexport const useNetworkStatus = () => {\n  const [isOnline, setIsOnline] = useState(true);\n  const [connectionType, setConnectionType] = useState<string>('unknown');\n\n  useEffect(() => {\n    if (typeof window === 'undefined') return;\n\n    const updateNetworkStatus = () => {\n      setIsOnline(navigator.onLine);\n      \n      // Get connection type if available\n      const connection = (navigator as any).connection || \n                        (navigator as any).mozConnection || \n                        (navigator as any).webkitConnection;\n      \n      if (connection) {\n        setConnectionType(connection.effectiveType || connection.type || 'unknown');\n      }\n    };\n\n    updateNetworkStatus();\n\n    window.addEventListener('online', updateNetworkStatus);\n    window.addEventListener('offline', updateNetworkStatus);\n\n    return () => {\n      window.removeEventListener('online', updateNetworkStatus);\n      window.removeEventListener('offline', updateNetworkStatus);\n    };\n  }, []);\n\n  return { isOnline, connectionType };\n};\n\nexport default useMobileOptimizations;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}