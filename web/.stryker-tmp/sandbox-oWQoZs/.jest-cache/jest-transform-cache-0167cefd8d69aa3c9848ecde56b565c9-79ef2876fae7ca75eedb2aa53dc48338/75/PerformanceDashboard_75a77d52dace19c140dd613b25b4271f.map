{"version":3,"names":["cov_14mqxpol0c","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","PerformanceDashboard","default","_default","performanceData","setPerformanceData","_react","useState","backendMetrics","setBackendMetrics","isLoading","setIsLoading","autoRefresh","setAutoRefresh","refreshInterval","setRefreshInterval","lastUpdate","setLastUpdate","Date","fetchFrontendMetrics","useCallback","summary","_performancemonitoring","getPerformanceSummary","fetchBackendMetrics","response","fetch","ok","data","json","error","console","refreshMetrics","useEffect","interval","setInterval","clearInterval","formatMetricValue","value","toFixed","Math","round","getStatusIcon","rating","_jsxruntime","jsx","_lucidereact","CheckCircle","className","AlertTriangle","Activity","exportReport","report","timestamp","toISOString","frontend","backend","blob","Blob","JSON","stringify","url","URL","createObjectURL","a","document","createElement","href","download","now","body","appendChild","click","removeChild","revokeObjectURL","jsxs","RefreshCw","toLocaleTimeString","checked","onChange","e","target","Number","onClick","title","Download","Zap","LCP","MetricCard","description","icon","Clock","FID","CLS","Gauge","FCP","TTFB","Server","bundleSize","HardDrive","endpoints","Object","keys","length","values","reduce","sum","ep","mean","database","mean_time","Database","errors","err","count","system","memory","current_mb","mean_mb","max_mb","style","width","min","cpu","current_percent","mean_percent","max_percent","entries","sort","slice","map","endpoint","metrics","p50","p95","p99","statusColors","good","poor","textColors","iconColors"],"sources":["/home/jack/Documents/aclue-preprod/web/src/components/performance/PerformanceDashboard.tsx"],"sourcesContent":["/**\n * aclue Performance Dashboard Component\n *\n * Real-time performance monitoring dashboard displaying Core Web Vitals,\n * application metrics, and system health indicators.\n *\n * Features:\n *   - Core Web Vitals visualization\n *   - Real-time metrics updates\n *   - Performance trend analysis\n *   - Alert notifications for degradation\n *   - Export capabilities for reports\n */\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { getPerformanceSummary } from '@/lib/performance-monitoring';\nimport {\n  Activity,\n  AlertTriangle,\n  CheckCircle,\n  Clock,\n  Database,\n  Download,\n  Gauge,\n  HardDrive,\n  RefreshCw,\n  Server,\n  Zap\n} from 'lucide-react';\n\ninterface MetricData {\n  value: number;\n  rating: 'good' | 'needs-improvement' | 'poor';\n  timestamp: number;\n}\n\ninterface PerformanceData {\n  LCP?: MetricData;\n  FID?: MetricData;\n  CLS?: MetricData;\n  FCP?: MetricData;\n  TTFB?: MetricData;\n  bundleSize?: MetricData;\n  [key: string]: MetricData | undefined;\n}\n\ninterface BackendMetrics {\n  endpoints: Record<string, {\n    count: number;\n    mean: number;\n    p50: number;\n    p95: number;\n    p99: number;\n  }>;\n  database: {\n    total_queries: number;\n    mean_time: number;\n    slow_queries: number;\n  };\n  system: {\n    memory: {\n      current_mb: number;\n      mean_mb: number;\n      max_mb: number;\n    };\n    cpu: {\n      current_percent: number;\n      mean_percent: number;\n      max_percent: number;\n    };\n  };\n  errors: Record<string, {\n    count: number;\n    types: string[];\n  }>;\n}\n\nexport const PerformanceDashboard: React.FC = () => {\n  const [performanceData, setPerformanceData] = useState<PerformanceData>({});\n  const [backendMetrics, setBackendMetrics] = useState<BackendMetrics | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [autoRefresh, setAutoRefresh] = useState(true);\n  const [refreshInterval, setRefreshInterval] = useState(5000); // 5 seconds\n  const [lastUpdate, setLastUpdate] = useState<Date>(new Date());\n\n  /**\n   * Fetch frontend performance metrics\n   */\n  const fetchFrontendMetrics = useCallback(() => {\n    const summary = getPerformanceSummary();\n    setPerformanceData(summary);\n    setLastUpdate(new Date());\n  }, []);\n\n  /**\n   * Fetch backend performance metrics\n   */\n  const fetchBackendMetrics = useCallback(async () => {\n    try {\n      const response = await fetch('/api/performance/summary');\n      if (response.ok) {\n        const data = await response.json();\n        setBackendMetrics(data);\n      }\n    } catch (error) {\n      console.error('Failed to fetch backend metrics:', error);\n    }\n  }, []);\n\n  /**\n   * Refresh all metrics\n   */\n  const refreshMetrics = useCallback(() => {\n    fetchFrontendMetrics();\n    fetchBackendMetrics();\n    setIsLoading(false);\n  }, [fetchFrontendMetrics, fetchBackendMetrics]);\n\n  /**\n   * Set up auto-refresh\n   */\n  useEffect(() => {\n    // Initial load\n    refreshMetrics();\n\n    // Set up interval if auto-refresh is enabled\n    if (autoRefresh) {\n      const interval = setInterval(refreshMetrics, refreshInterval);\n      return () => clearInterval(interval);\n    }\n    return undefined;\n  }, [autoRefresh, refreshInterval, refreshMetrics]);\n\n  /**\n   * Format metric value for display\n   */\n  const formatMetricValue = (name: string, value: number): string => {\n    if (name === 'CLS') {\n      return value.toFixed(3);\n    }\n    if (name === 'bundleSize') {\n      return `${(value / 1024 / 1024).toFixed(2)}MB`;\n    }\n    return `${Math.round(value)}ms`;\n  };\n\n  /**\n   * Get status color based on rating\n   */\n  // const getStatusColor = (rating: string): string => {\n  //   switch (rating) {\n  //     case 'good':\n  //       return 'text-green-600 bg-green-100';\n  //     case 'needs-improvement':\n  //       return 'text-yellow-600 bg-yellow-100';\n  //     case 'poor':\n  //       return 'text-red-600 bg-red-100';\n  //     default:\n  //       return 'text-gray-600 bg-gray-100';\n  //   }\n  // };\n\n  /**\n   * Get status icon based on rating\n   */\n  const getStatusIcon = (rating: string) => {\n    switch (rating) {\n      case 'good':\n        return <CheckCircle className=\"w-5 h-5\" />;\n      case 'needs-improvement':\n        return <AlertTriangle className=\"w-5 h-5\" />;\n      case 'poor':\n        return <AlertTriangle className=\"w-5 h-5\" />;\n      default:\n        return <Activity className=\"w-5 h-5\" />;\n    }\n  };\n\n  /**\n   * Export performance report\n   */\n  const exportReport = () => {\n    const report = {\n      timestamp: new Date().toISOString(),\n      frontend: performanceData,\n      backend: backendMetrics,\n    };\n\n    const blob = new Blob([JSON.stringify(report, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `performance-report-${Date.now()}.json`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <RefreshCw className=\"w-8 h-8 animate-spin text-blue-500\" />\n        <span className=\"ml-2 text-gray-600\">Loading performance metrics...</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between border-b pb-4\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-gray-900\">Performance Dashboard</h2>\n          <p className=\"text-sm text-gray-500 mt-1\">\n            Last updated: {lastUpdate.toLocaleTimeString()}\n          </p>\n        </div>\n\n        <div className=\"flex items-center space-x-4\">\n          {/* Auto-refresh toggle */}\n          <label className=\"flex items-center space-x-2\">\n            <input\n              type=\"checkbox\"\n              checked={autoRefresh}\n              onChange={(e) => setAutoRefresh(e.target.checked)}\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n            <span className=\"text-sm text-gray-700\">Auto-refresh</span>\n          </label>\n\n          {/* Refresh interval selector */}\n          {autoRefresh && (\n            <select\n              value={refreshInterval}\n              onChange={(e) => setRefreshInterval(Number(e.target.value))}\n              className=\"text-sm border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n            >\n              <option value={5000}>5s</option>\n              <option value={10000}>10s</option>\n              <option value={30000}>30s</option>\n              <option value={60000}>1m</option>\n            </select>\n          )}\n\n          {/* Manual refresh */}\n          <button\n            onClick={refreshMetrics}\n            className=\"p-2 text-gray-600 hover:text-gray-900 transition-colors\"\n            title=\"Refresh now\"\n          >\n            <RefreshCw className=\"w-5 h-5\" />\n          </button>\n\n          {/* Export report */}\n          <button\n            onClick={exportReport}\n            className=\"p-2 text-gray-600 hover:text-gray-900 transition-colors\"\n            title=\"Export report\"\n          >\n            <Download className=\"w-5 h-5\" />\n          </button>\n        </div>\n      </div>\n\n      {/* Core Web Vitals */}\n      <div>\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n          <Zap className=\"w-5 h-5 mr-2\" />\n          Core Web Vitals\n        </h3>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-5 gap-4\">\n          {/* LCP - Largest Contentful Paint */}\n          {performanceData.LCP && (\n            <MetricCard\n              title=\"LCP\"\n              description=\"Largest Contentful Paint\"\n              value={formatMetricValue('LCP', performanceData.LCP.value)}\n              rating={performanceData.LCP.rating}\n              target=\"< 2.5s\"\n              icon={<Clock className=\"w-8 h-8\" />}\n            />\n          )}\n\n          {/* FID - First Input Delay */}\n          {performanceData.FID && (\n            <MetricCard\n              title=\"FID\"\n              description=\"First Input Delay\"\n              value={formatMetricValue('FID', performanceData.FID.value)}\n              rating={performanceData.FID.rating}\n              target=\"< 100ms\"\n              icon={<Activity className=\"w-8 h-8\" />}\n            />\n          )}\n\n          {/* CLS - Cumulative Layout Shift */}\n          {performanceData.CLS && (\n            <MetricCard\n              title=\"CLS\"\n              description=\"Cumulative Layout Shift\"\n              value={formatMetricValue('CLS', performanceData.CLS.value)}\n              rating={performanceData.CLS.rating}\n              target=\"< 0.1\"\n              icon={<Gauge className=\"w-8 h-8\" />}\n            />\n          )}\n\n          {/* FCP - First Contentful Paint */}\n          {performanceData.FCP && (\n            <MetricCard\n              title=\"FCP\"\n              description=\"First Contentful Paint\"\n              value={formatMetricValue('FCP', performanceData.FCP.value)}\n              rating={performanceData.FCP.rating}\n              target=\"< 1.8s\"\n              icon={<Zap className=\"w-8 h-8\" />}\n            />\n          )}\n\n          {/* TTFB - Time to First Byte */}\n          {performanceData.TTFB && (\n            <MetricCard\n              title=\"TTFB\"\n              description=\"Time to First Byte\"\n              value={formatMetricValue('TTFB', performanceData.TTFB.value)}\n              rating={performanceData.TTFB.rating}\n              target=\"< 600ms\"\n              icon={<Server className=\"w-8 h-8\" />}\n            />\n          )}\n        </div>\n      </div>\n\n      {/* Application Metrics */}\n      <div>\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n          <Activity className=\"w-5 h-5 mr-2\" />\n          Application Metrics\n        </h3>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {/* Bundle Size */}\n          {performanceData.bundleSize && (\n            <MetricCard\n              title=\"Bundle Size\"\n              description=\"JavaScript bundle size\"\n              value={formatMetricValue('bundleSize', performanceData.bundleSize.value)}\n              rating={performanceData.bundleSize.rating}\n              target=\"< 500KB\"\n              icon={<HardDrive className=\"w-8 h-8\" />}\n            />\n          )}\n\n          {/* API Response Time */}\n          {backendMetrics?.endpoints && Object.keys(backendMetrics.endpoints).length > 0 && (\n            <MetricCard\n              title=\"API Response\"\n              description=\"Average response time\"\n              value={`${Math.round(\n                Object.values(backendMetrics.endpoints)\n                  .reduce((sum, ep) => sum + ep.mean, 0) /\n                Object.keys(backendMetrics.endpoints).length * 1000\n              )}ms`}\n              rating={\n                Object.values(backendMetrics.endpoints)\n                  .reduce((sum, ep) => sum + ep.mean, 0) /\n                Object.keys(backendMetrics.endpoints).length < 0.2\n                  ? 'good'\n                  : 'needs-improvement'\n              }\n              target=\"< 200ms\"\n              icon={<Server className=\"w-8 h-8\" />}\n            />\n          )}\n\n          {/* Database Performance */}\n          {backendMetrics?.database && (\n            <MetricCard\n              title=\"Database\"\n              description=\"Query response time\"\n              value={`${Math.round(backendMetrics.database.mean_time * 1000)}ms`}\n              rating={\n                backendMetrics.database.mean_time < 0.05\n                  ? 'good'\n                  : backendMetrics.database.mean_time < 0.1\n                  ? 'needs-improvement'\n                  : 'poor'\n              }\n              target=\"< 50ms\"\n              icon={<Database className=\"w-8 h-8\" />}\n            />\n          )}\n\n          {/* Error Rate */}\n          {backendMetrics?.errors && (\n            <MetricCard\n              title=\"Error Rate\"\n              description=\"Application errors\"\n              value={`${Object.values(backendMetrics.errors)\n                .reduce((sum, err) => sum + err.count, 0)} errors`}\n              rating={\n                Object.keys(backendMetrics.errors).length === 0\n                  ? 'good'\n                  : Object.values(backendMetrics.errors)\n                      .reduce((sum, err) => sum + err.count, 0) < 5\n                  ? 'needs-improvement'\n                  : 'poor'\n              }\n              target=\"< 0.1%\"\n              icon={<AlertTriangle className=\"w-8 h-8\" />}\n            />\n          )}\n        </div>\n      </div>\n\n      {/* System Resources */}\n      {backendMetrics?.system && (\n        <div>\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n            <Server className=\"w-5 h-5 mr-2\" />\n            System Resources\n          </h3>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {/* Memory Usage */}\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <h4 className=\"font-medium text-gray-900 mb-4\">Memory Usage</h4>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Current</span>\n                  <span className=\"text-sm font-medium\">\n                    {backendMetrics.system.memory.current_mb.toFixed(2)} MB\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Average</span>\n                  <span className=\"text-sm font-medium\">\n                    {backendMetrics.system.memory.mean_mb.toFixed(2)} MB\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Peak</span>\n                  <span className=\"text-sm font-medium\">\n                    {backendMetrics.system.memory.max_mb.toFixed(2)} MB\n                  </span>\n                </div>\n                <div className=\"mt-4\">\n                  <div className=\"bg-gray-200 rounded-full h-2\">\n                    <div\n                      className=\"bg-blue-500 h-2 rounded-full transition-all\"\n                      style={{\n                        width: `${Math.min(\n                          (backendMetrics.system.memory.current_mb / 512) * 100,\n                          100\n                        )}%`\n                      }}\n                    />\n                  </div>\n                  <p className=\"text-xs text-gray-500 mt-1\">Target: &lt; 512MB</p>\n                </div>\n              </div>\n            </div>\n\n            {/* CPU Usage */}\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <h4 className=\"font-medium text-gray-900 mb-4\">CPU Usage</h4>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Current</span>\n                  <span className=\"text-sm font-medium\">\n                    {backendMetrics.system.cpu.current_percent.toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Average</span>\n                  <span className=\"text-sm font-medium\">\n                    {backendMetrics.system.cpu.mean_percent.toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Peak</span>\n                  <span className=\"text-sm font-medium\">\n                    {backendMetrics.system.cpu.max_percent.toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"mt-4\">\n                  <div className=\"bg-gray-200 rounded-full h-2\">\n                    <div\n                      className={`h-2 rounded-full transition-all ${\n                        backendMetrics.system.cpu.current_percent < 50\n                          ? 'bg-green-500'\n                          : backendMetrics.system.cpu.current_percent < 70\n                          ? 'bg-yellow-500'\n                          : 'bg-red-500'\n                      }`}\n                      style={{\n                        width: `${Math.min(backendMetrics.system.cpu.current_percent, 100)}%`\n                      }}\n                    />\n                  </div>\n                  <p className=\"text-xs text-gray-500 mt-1\">Target: &lt; 70%</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Endpoint Performance */}\n      {backendMetrics?.endpoints && Object.keys(backendMetrics.endpoints).length > 0 && (\n        <div>\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n            <Activity className=\"w-5 h-5 mr-2\" />\n            Endpoint Performance\n          </h3>\n\n          <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Endpoint\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Requests\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Mean\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    P50\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    P95\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    P99\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {Object.entries(backendMetrics.endpoints)\n                  .sort(([, a], [, b]) => b.count - a.count)\n                  .slice(0, 10)\n                  .map(([endpoint, metrics]) => (\n                    <tr key={endpoint}>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                        {endpoint}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {metrics.count}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {Math.round(metrics.mean * 1000)}ms\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {Math.round(metrics.p50 * 1000)}ms\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {Math.round(metrics.p95 * 1000)}ms\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {Math.round(metrics.p99 * 1000)}ms\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n/**\n * Metric Card Component\n */\ninterface MetricCardProps {\n  title: string;\n  description: string;\n  value: string;\n  rating: 'good' | 'needs-improvement' | 'poor';\n  target: string;\n  icon: React.ReactNode;\n}\n\nconst MetricCard: React.FC<MetricCardProps> = ({\n  title,\n  description,\n  value,\n  rating,\n  target,\n  icon,\n}) => {\n  const statusColors = {\n    good: 'bg-green-50 border-green-200',\n    'needs-improvement': 'bg-yellow-50 border-yellow-200',\n    poor: 'bg-red-50 border-red-200',\n  };\n\n  const textColors = {\n    good: 'text-green-800',\n    'needs-improvement': 'text-yellow-800',\n    poor: 'text-red-800',\n  };\n\n  const iconColors = {\n    good: 'text-green-500',\n    'needs-improvement': 'text-yellow-500',\n    poor: 'text-red-500',\n  };\n\n  return (\n    <div className={`rounded-lg border p-4 ${statusColors[rating]}`}>\n      <div className=\"flex items-start justify-between mb-2\">\n        <div className={iconColors[rating]}>{icon}</div>\n        <div className=\"flex items-center\">\n          {rating === 'good' && <CheckCircle className=\"w-4 h-4 text-green-500\" />}\n          {rating === 'needs-improvement' && <AlertTriangle className=\"w-4 h-4 text-yellow-500\" />}\n          {rating === 'poor' && <AlertTriangle className=\"w-4 h-4 text-red-500\" />}\n        </div>\n      </div>\n\n      <h4 className=\"font-semibold text-gray-900\">{title}</h4>\n      <p className=\"text-xs text-gray-600 mt-1\">{description}</p>\n\n      <div className=\"mt-3\">\n        <p className={`text-2xl font-bold ${textColors[rating]}`}>{value}</p>\n        <p className=\"text-xs text-gray-500 mt-1\">Target: {target}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default PerformanceDashboard;"],"mappings":"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","ignoreList":[]}