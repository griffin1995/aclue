{"version":3,"names":["config","cov_1y9n8bnw7y","f","s","middleware","AUTH_CONFIG","cookies","accessToken","refreshToken","user","routes","protected","auth","public","api","baseUrl","b","process","env","NEXT_PUBLIC_API_URL","isProtectedRoute","pathname","some","route","startsWith","isAuthRoute","validateSession","request","get","value","userCookie","length","userData","JSON","parse","id","email","error","console","nextUrl","isValid","log","shouldUseAppRouter","reason","_featureflags","evaluateAppRouterForRequest","loginUrl","URL","url","searchParams","set","_server","NextResponse","redirect","dashboardUrl","response","next","headers","method","matcher"],"sources":["/home/jack/Documents/aclue-preprod/web/src/middleware.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport { cookies } from 'next/headers'\nimport { evaluateAppRouterForRequest } from '@/lib/feature-flags'\n\n/**\n * Enhanced Middleware - Phase 4: Tier 2 Migration\n *\n * Enterprise-grade middleware for App Router authentication and route protection.\n * Provides secure session validation, automatic redirects, and feature flag evaluation.\n *\n * Phase 4 Features:\n * - Product discovery route protection\n * - Search functionality access control\n * - Shopping cart session management\n * - Enhanced performance monitoring\n *\n * Security Features:\n * - Server-side session validation\n * - Protected route enforcement\n * - Automatic token refresh handling\n * - CSRF protection headers\n * - Secure cookie validation\n *\n * Performance Features:\n * - Edge function execution\n * - Minimal processing overhead\n * - Efficient route matching\n * - Feature flag evaluation\n */\n\n// Configuration for middleware\nconst AUTH_CONFIG = {\n  cookies: {\n    accessToken: 'auth_access_token',\n    refreshToken: 'auth_refresh_token',\n    user: 'auth_user_data',\n  },\n  routes: {\n    protected: ['/dashboard', '/profile', '/settings', '/admin', '/cart', '/wishlist'],\n    auth: ['/auth/login', '/auth/register'],\n    public: ['/', '/about', '/contact', '/terms', '/privacy', '/discover', '/search', '/products'],\n  },\n  api: {\n    baseUrl: process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000',\n  },\n} as const\n\n/**\n * Check if a route requires authentication\n */\nfunction isProtectedRoute(pathname: string): boolean {\n  return AUTH_CONFIG.routes.protected.some(route =>\n    pathname.startsWith(route)\n  )\n}\n\n/**\n * Check if a route is an authentication route\n */\nfunction isAuthRoute(pathname: string): boolean {\n  return AUTH_CONFIG.routes.auth.some(route =>\n    pathname.startsWith(route)\n  )\n}\n\n/**\n * Validate user session by checking secure cookies\n */\nasync function validateSession(request: NextRequest): Promise<boolean> {\n  try {\n    const accessToken = request.cookies.get(AUTH_CONFIG.cookies.accessToken)?.value\n    const userCookie = request.cookies.get(AUTH_CONFIG.cookies.user)?.value\n\n    if (!accessToken || !userCookie) {\n      return false\n    }\n\n    // Basic token validation (in production, you might want to verify JWT signature)\n    if (accessToken.length < 10) {\n      return false\n    }\n\n    // Validate user data cookie\n    try {\n      const userData = JSON.parse(userCookie)\n      if (!userData.id || !userData.email) {\n        return false\n      }\n    } catch {\n      return false\n    }\n\n    return true\n  } catch (error) {\n    console.error('Session validation error:', error)\n    return false\n  }\n}\n\n/**\n * Enhanced middleware function\n */\nexport async function middleware(request: NextRequest) {\n  const { pathname } = request.nextUrl\n  const isValid = await validateSession(request)\n\n  console.log(`ðŸ”’ Middleware: ${pathname} - Session valid: ${isValid}`)\n\n  // Feature flag evaluation for App Router migration\n  const { shouldUseAppRouter, reason } = evaluateAppRouterForRequest(pathname)\n\n  if (shouldUseAppRouter) {\n    console.log(`ðŸš€ App Router enabled for ${pathname}: ${reason}`)\n  } else {\n    console.log(`ðŸ“„ Pages Router fallback for ${pathname}: ${reason}`)\n  }\n\n  // Handle protected routes\n  if (isProtectedRoute(pathname)) {\n    if (!isValid) {\n      console.log(`ðŸš« Access denied to protected route: ${pathname}`)\n      const loginUrl = new URL('/auth/login', request.url)\n      loginUrl.searchParams.set('redirect', pathname)\n      return NextResponse.redirect(loginUrl)\n    }\n  }\n\n  // Handle authentication routes (redirect if already authenticated)\n  if (isAuthRoute(pathname)) {\n    if (isValid) {\n      console.log(`ðŸ”„ Redirecting authenticated user from auth route: ${pathname}`)\n      const dashboardUrl = new URL('/dashboard', request.url)\n      return NextResponse.redirect(dashboardUrl)\n    }\n  }\n\n  // Handle App Router feature flag routing\n  if (shouldUseAppRouter) {\n    // For App Router routes (auth routes, root route, etc.)\n    const response = NextResponse.next()\n\n    // Add security headers for enhanced protection\n    response.headers.set('X-Frame-Options', 'DENY')\n    response.headers.set('X-Content-Type-Options', 'nosniff')\n    response.headers.set('Referrer-Policy', 'strict-origin-when-cross-origin')\n    response.headers.set('Permissions-Policy', 'camera=(), microphone=(), geolocation=()')\n\n    console.log(`âœ… App Router serving: ${pathname}`)\n    return response\n  }\n\n  // Default response with security headers\n  const response = NextResponse.next()\n\n  // Add security headers to all responses\n  response.headers.set('X-Frame-Options', 'DENY')\n  response.headers.set('X-Content-Type-Options', 'nosniff')\n  response.headers.set('Referrer-Policy', 'strict-origin-when-cross-origin')\n  response.headers.set('Permissions-Policy', 'camera=(), microphone=(), geolocation=()')\n\n  // Add CSRF protection for form submissions\n  if (request.method === 'POST') {\n    response.headers.set('X-CSRF-Protection', '1')\n  }\n\n  return response\n}\n\n/**\n * Middleware configuration\n */\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except for the ones starting with:\n     * - api (API routes)\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     * - public assets\n     */\n    '/((?!api|_next/static|_next/image|favicon.ico|logo.png|aclue_text_clean.png).*)',\n  ],\n}"],"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","ignoreList":[]}