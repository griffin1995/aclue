c1ed3a4be4e7dc74fe95d972b1609863
/**
 * aclue Application Configuration
 * 
 * Centralised configuration management for the entire aclue application.
 * Provides environment-specific settings, API endpoints, feature flags,
 * and business logic constants.
 * 
 * Configuration Categories:
 *   - Environment: API URLs, deployment settings, analytics keys
 *   - API Endpoints: Complete REST API endpoint definitions
 *   - Application: UI settings, validation rules, error messages
 *   - Amazon Associates: Affiliate program configuration and utilities
 *   - Theme: Design system constants and styling
 * 
 * Environment Variables:
 *   - All sensitive data loaded from environment variables
 *   - Fallback defaults for development
 *   - Production vs development feature toggles
 * 
 * Usage:
 *   import { config, endpoints, appConfig } from '@/config';
 *   const apiUrl = config.apiUrl;
 *   const loginEndpoint = endpoints.auth.login;
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    AffiliateLinksService: function() {
        return AffiliateLinksService;
    },
    amazonConfig: function() {
        return amazonConfig;
    },
    appConfig: function() {
        return appConfig;
    },
    config: function() {
        return config;
    },
    default: function() {
        return _default;
    },
    endpoints: function() {
        return endpoints;
    },
    theme: function() {
        return theme;
    }
});
const config = {
    // Core service URLs
    apiUrl: process.env.NEXT_PUBLIC_API_URL || "https://aclue-backend-production.up.railway.app",
    webUrl: process.env.NEXT_PUBLIC_WEB_URL || "http://localhost:3000",
    // Analytics and monitoring service keys
    mixpanelToken: process.env.NEXT_PUBLIC_MIXPANEL_TOKEN,
    sentryDsn: process.env.NEXT_PUBLIC_SENTRY_DSN,
    googleAnalyticsId: process.env.NEXT_PUBLIC_GA_ID,
    posthogKey: process.env.NEXT_PUBLIC_POSTHOG_KEY,
    posthogHost: process.env.NEXT_PUBLIC_POSTHOG_HOST,
    // Environment detection
    isProduction: process.env.NODE_ENV === "production",
    isDevelopment: process.env.NODE_ENV === "development",
    version: process.env.npm_package_version || "1.0.0",
    // Amazon Associates affiliate program configuration
    amazonAssociateTag: process.env.NEXT_PUBLIC_AMAZON_ASSOCIATE_TAG || "aclue-21",
    amazonRegion: process.env.NEXT_PUBLIC_AMAZON_REGION || "uk",
    amazonApiKey: process.env.NEXT_PUBLIC_AMAZON_API_KEY,
    amazonSecretKey: process.env.NEXT_PUBLIC_AMAZON_SECRET_KEY
};
const endpoints = {
    // ===========================================================================
    // AUTHENTICATION ENDPOINTS
    // ===========================================================================
    // User authentication and session management
    auth: {
        login: "/api/v1/auth/login",
        register: "/api/v1/auth/register",
        refresh: "/api/v1/auth/refresh",
        logout: "/api/v1/auth/logout",
        me: "/api/v1/auth/me",
        forgotPassword: "/api/v1/auth/forgot-password",
        resetPassword: "/api/v1/auth/reset-password",
        verifyEmail: "/api/v1/auth/verify-email"
    },
    // ===========================================================================
    // USER MANAGEMENT ENDPOINTS
    // ===========================================================================
    // User profile and preference management
    users: {
        profile: "/api/v1/users/me",
        updateProfile: "/api/v1/users/me",
        preferences: "/api/v1/users/me/preferences",
        statistics: "/api/v1/users/me/statistics",
        deleteAccount: "/api/v1/users/me"
    },
    // ===========================================================================
    // PRODUCT CATALOG ENDPOINTS
    // ===========================================================================
    // Product search, filtering, and retrieval
    products: {
        list: "/api/v1/products",
        search: "/api/v1/products/search",
        categories: "/api/v1/products/categories",
        featured: "/api/v1/products/featured",
        trending: "/api/v1/products/trending",
        byCategory: (categoryId)=>`/api/v1/products/category/${categoryId}`,
        byId: (id)=>`/api/v1/products/${id}`,
        recommendations: "/api/v1/products/recommendations"
    },
    // ===========================================================================
    // SWIPE INTERACTION ENDPOINTS
    // ===========================================================================
    // User preference collection through swipe gestures
    swipes: {
        sessions: "/api/v1/swipes/sessions",
        createSession: "/api/v1/swipes/sessions",
        currentSession: "/api/v1/swipes/sessions/current",
        interactions: (sessionId)=>`/api/v1/swipes/sessions/${sessionId}/interactions`,
        analytics: "/api/v1/swipes/analytics"
    },
    // ===========================================================================
    // AI RECOMMENDATION ENDPOINTS
    // ===========================================================================
    // Machine learning powered product recommendations
    recommendations: {
        generate: "/api/v1/recommendations/generate",
        list: "/api/v1/recommendations",
        byId: (id)=>`/api/v1/recommendations/${id}`,
        feedback: (id)=>`/api/v1/recommendations/${id}/feedback`,
        refresh: "/api/v1/recommendations/refresh"
    },
    // ===========================================================================
    // GIFT LINK SHARING ENDPOINTS
    // ===========================================================================
    // Social sharing and gift link management
    giftLinks: {
        create: "/api/v1/gift-links",
        list: "/api/v1/gift-links",
        byId: (id)=>`/api/v1/gift-links/${id}`,
        byToken: (token)=>`/api/v1/gift-links/share/${token}`,
        delete: (id)=>`/api/v1/gift-links/${id}`,
        analytics: (id)=>`/api/v1/gift-links/${id}/analytics`
    },
    // ===========================================================================
    // ANALYTICS AND TRACKING ENDPOINTS
    // ===========================================================================
    // User behavior tracking and business analytics
    analytics: {
        track: "/api/v1/analytics/track",
        events: "/api/v1/analytics/events",
        dashboard: "/api/v1/analytics/dashboard"
    },
    // ===========================================================================
    // SYSTEM HEALTH ENDPOINTS
    // ===========================================================================
    // Service monitoring and health checks
    health: "/health"
};
const appConfig = {
    // ===========================================================================
    // BRAND AND MESSAGING
    // ===========================================================================
    name: "aclue",
    description: "A data-led insight layer that transforms how gifts are chosen",
    tagline: "A data-led insight layer that transforms how gifts are chosen",
    // Swipe settings
    swipe: {
        maxSwipesPerSession: 50,
        sessionTimeout: 30 * 60 * 1000,
        cardPreloadCount: 5,
        animationDuration: 300,
        velocityThreshold: 0.5,
        distanceThreshold: 100
    },
    // Pagination
    pagination: {
        defaultPageSize: 20,
        maxPageSize: 100
    },
    // Image settings
    images: {
        defaultProductImage: "/images/placeholder-product.png",
        defaultUserAvatar: "/images/default-avatar.png",
        defaultCategoryIcon: "/images/category-default.svg",
        cloudinaryBaseUrl: "https://res.cloudinary.com/aclue"
    },
    // Animation settings
    animations: {
        defaultDuration: 300,
        defaultEasing: "cubic-bezier(0.4, 0, 0.2, 1)",
        pageTransition: 200
    },
    // Toast notifications
    toast: {
        defaultDuration: 5000,
        position: "top-right"
    },
    // Local storage keys
    storage: {
        authToken: "aclue_auth_token",
        refreshToken: "aclue_refresh_token",
        user: "aclue_user",
        preferences: "aclue_preferences",
        recentSearches: "aclue_recent_searches",
        viewedProducts: "aclue_viewed_products",
        onboardingCompleted: "aclue_onboarding_completed",
        theme: "aclue_theme"
    },
    // Feature flags
    features: {
        socialLogin: true,
        pushNotifications: true,
        darkMode: true,
        analytics: true,
        affiliateLinks: true,
        affiliateTracking: true,
        beta: {
            voiceSearch: false,
            arFeatures: false,
            chatbot: false,
            amazonApiIntegration: false
        }
    },
    // External URLs
    urls: {
        privacyPolicy: "/privacy",
        termsOfService: "/terms",
        contactUs: "/contact",
        help: "/help",
        blog: "/blog",
        careers: "/careers",
        pressKit: "/press",
        apiDocs: `${config.apiUrl}/docs`,
        affiliateDisclosure: "/affiliate-disclosure",
        cookiePolicy: "/cookie-policy"
    },
    // Social media
    social: {
        twitter: "https://twitter.com/aclue",
        facebook: "https://facebook.com/aclue",
        instagram: "https://instagram.com/aclue",
        linkedin: "https://linkedin.com/company/aclue",
        youtube: "https://youtube.com/c/aclue"
    },
    // Contact information
    contact: {
        email: "hello@aclue.app",
        support: "support@aclue.app",
        press: "press@aclue.app",
        partnerships: "partnerships@aclue.app"
    },
    // App store links
    appStore: {
        ios: "https://apps.apple.com/app/aclue",
        android: "https://play.google.com/store/apps/details?id=com.aclue.app"
    },
    // Subscription tiers
    subscriptionTiers: {
        free: {
            name: "Free",
            price: 0,
            features: [
                "Basic recommendations",
                "Limited swipes per day",
                "Email support",
                "Basic analytics"
            ]
        },
        premium: {
            name: "Premium",
            price: 9.99,
            features: [
                "Unlimited swipes",
                "Advanced AI recommendations",
                "Priority support",
                "Advanced analytics",
                "Gift link customization",
                "Export features"
            ]
        },
        enterprise: {
            name: "Enterprise",
            price: 29.99,
            features: [
                "All Premium features",
                "Team collaboration",
                "Bulk gift management",
                "Custom branding",
                "API access",
                "Dedicated support"
            ]
        }
    },
    // Validation rules
    validation: {
        password: {
            minLength: 8,
            requireUppercase: true,
            requireLowercase: true,
            requireNumbers: true,
            requireSpecialChars: true
        },
        email: {
            pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i
        },
        name: {
            minLength: 2,
            maxLength: 50,
            pattern: /^[a-zA-Z\s'.-]+$/
        }
    },
    // Error messages
    errors: {
        network: "Network error. Please check your connection and try again.",
        server: "Server error. Please try again later.",
        unauthorized: "Please log in to continue.",
        forbidden: "You do not have permission to access this resource.",
        notFound: "The requested resource was not found.",
        validation: "Please check your input and try again.",
        unknown: "An unexpected error occurred. Please try again."
    },
    // Success messages
    success: {
        login: "Welcome back!",
        register: "Account created successfully!",
        logout: "Logged out successfully.",
        profileUpdated: "Profile updated successfully.",
        preferencesUpdated: "Preferences updated successfully.",
        giftLinkCreated: "Gift link created successfully!",
        giftLinkShared: "Gift link shared successfully!",
        affiliateLinkGenerated: "Affiliate link generated successfully!"
    }
};
const amazonConfig = {
    // UK Amazon Associates Configuration
    uk: {
        associateTag: "aclue-21",
        baseUrl: "https://amazon.co.uk",
        apiHost: "webservices.amazon.co.uk",
        marketplace: "A1F83G8C2ARO7P",
        region: "eu-west-1",
        currency: "GBP",
        language: "en_GB"
    },
    // Commission rates by category (approximate)
    commissionRates: {
        electronics: 0.01,
        fashion: 0.04,
        homeAndGarden: 0.03,
        sportsAndOutdoors: 0.03,
        books: 0.045,
        toys: 0.03,
        beautyAndPersonalCare: 0.04,
        automotive: 0.045,
        industrial: 0.045,
        outdoorAndGarden: 0.03,
        default: 0.02
    },
    // Product categories for recommendations
    productCategories: {
        "All": "All",
        "Electronics": "Electronics",
        "Fashion": "Fashion",
        "Home & Garden": "Garden",
        "Sports & Outdoors": "SportingGoods",
        "Books": "Books",
        "Toys & Games": "Toys",
        "Beauty & Personal Care": "Beauty",
        "Automotive": "Automotive",
        "Health & Household": "HealthPersonalCare",
        "Tools & Home Improvement": "Tools",
        "Video Games": "VideoGames",
        "Office Products": "OfficeProducts",
        "Kitchen & Dining": "Kitchen",
        "Baby": "Baby",
        "Pet Supplies": "PetSupplies",
        "Industrial & Scientific": "Industrial",
        "Handmade": "Handmade",
        "Arts, Crafts & Sewing": "ArtsAndCrafts",
        "Musical Instruments": "MusicalInstruments"
    },
    // API Configuration
    api: {
        version: "5.0",
        requestsPerSecond: 1,
        timeoutMs: 5000,
        retryAttempts: 3,
        retryDelayMs: 1000
    },
    // Tracking and Analytics
    tracking: {
        enableConversionTracking: true,
        enableClickTracking: true,
        enableImpressionTracking: true,
        sessionTimeoutMinutes: 30,
        attributionWindowDays: 30
    }
};
class AffiliateLinksService {
    /**
   * Generates an Amazon affiliate link with proper tracking
   */ static generateAffiliateLink(productUrl, options = {}) {
        try {
            const url = new URL(productUrl);
            // Ensure we're using the correct Amazon domain
            if (!url.hostname.includes("amazon.co.uk")) {
                // Convert to UK domain if needed
                url.hostname = "amazon.co.uk";
            }
            // Add associate tag
            url.searchParams.set("tag", options.associateTag || amazonConfig.uk.associateTag);
            // Add tracking parameters
            if (options.ref) {
                url.searchParams.set("ref_", options.ref);
            }
            if (options.campaign) {
                url.searchParams.set("campaign", options.campaign);
            }
            if (options.medium) {
                url.searchParams.set("medium", options.medium);
            }
            if (options.source) {
                url.searchParams.set("source", options.source);
            }
            // Add timestamp for tracking
            url.searchParams.set("timestamp", Date.now().toString());
            return url.toString();
        } catch (error) {
            console.error("Error generating affiliate link:", error);
            return productUrl; // Return original URL if generation fails
        }
    }
    /**
   * Generates an Amazon search link with affiliate tracking
   */ static generateSearchLink(searchTerm, category, options = {}) {
        const baseUrl = "https://amazon.co.uk/s";
        const url = new URL(baseUrl);
        url.searchParams.set("k", searchTerm);
        url.searchParams.set("tag", options.associateTag || amazonConfig.uk.associateTag);
        if (category && amazonConfig.productCategories[category]) {
            url.searchParams.set("i", amazonConfig.productCategories[category]);
        }
        if (options.ref) {
            url.searchParams.set("ref", options.ref);
        }
        return url.toString();
    }
    /**
   * Extracts ASIN from Amazon product URL
   */ static extractASIN(productUrl) {
        try {
            // Common ASIN patterns in Amazon URLs
            const asinPatterns = [
                /\/dp\/([A-Z0-9]{10})/,
                /\/gp\/product\/([A-Z0-9]{10})/,
                /\/product\/([A-Z0-9]{10})/,
                /\/ASIN\/([A-Z0-9]{10})/,
                /asin=([A-Z0-9]{10})/i
            ];
            for (const pattern of asinPatterns){
                const match = productUrl.match(pattern);
                if (match && match[1]) {
                    return match[1];
                }
            }
            return null;
        } catch (error) {
            console.error("Error extracting ASIN:", error);
            return null;
        }
    }
    /**
   * Validates if a URL is a valid Amazon product URL
   */ static isValidAmazonUrl(url) {
        try {
            const urlObj = new URL(url);
            const validDomains = [
                "amazon.co.uk",
                "amazon.com",
                "amazon.de",
                "amazon.fr",
                "amazon.it",
                "amazon.es",
                "amazon.ca",
                "amazon.com.au",
                "amazon.co.jp"
            ];
            return validDomains.some((domain)=>urlObj.hostname.includes(domain));
        } catch (error) {
            return false;
        }
    }
    /**
   * Gets commission rate for a given product category
   */ static getCommissionRate(category) {
        const normalizedCategory = category.toLowerCase().replace(/\s+/g, "");
        // Map to commission rates
        const categoryMappings = {
            "electronics": "electronics",
            "fashion": "fashion",
            "clothing": "fashion",
            "homeandgarden": "homeAndGarden",
            "home": "homeAndGarden",
            "garden": "homeAndGarden",
            "sportsandoutdoors": "sportsAndOutdoors",
            "sports": "sportsAndOutdoors",
            "books": "books",
            "toys": "toys",
            "toysgames": "toys",
            "games": "toys",
            "beauty": "beautyAndPersonalCare",
            "beautyandpersonalcare": "beautyAndPersonalCare",
            "personalcare": "beautyAndPersonalCare",
            "automotive": "automotive",
            "industrial": "industrial",
            "outdoor": "outdoorAndGarden"
        };
        const mappedCategory = categoryMappings[normalizedCategory];
        return amazonConfig.commissionRates[mappedCategory] || amazonConfig.commissionRates.default;
    }
}
const theme = {
    colors: {
        primary: "#f03dff",
        secondary: "#0ea5e9",
        success: "#22c55e",
        warning: "#f59e0b",
        error: "#ef4444",
        neutral: "#737373"
    },
    breakpoints: {
        xs: "475px",
        sm: "640px",
        md: "768px",
        lg: "1024px",
        xl: "1280px",
        "2xl": "1536px",
        "3xl": "1600px"
    },
    spacing: {
        xs: "4px",
        sm: "8px",
        md: "16px",
        lg: "24px",
        xl: "32px",
        "2xl": "48px",
        "3xl": "64px"
    },
    borderRadius: {
        sm: "4px",
        md: "8px",
        lg: "12px",
        xl: "16px",
        "2xl": "24px",
        full: "9999px"
    },
    shadows: {
        sm: "0 1px 2px 0 rgba(0, 0, 0, 0.05)",
        md: "0 4px 6px -1px rgba(0, 0, 0, 0.1)",
        lg: "0 10px 15px -3px rgba(0, 0, 0, 0.1)",
        xl: "0 20px 25px -5px rgba(0, 0, 0, 0.1)"
    }
};
const _default = config;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2phY2svRG9jdW1lbnRzL2FjbHVlLXByZXByb2Qvd2ViL3NyYy9jb25maWcvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBhY2x1ZSBBcHBsaWNhdGlvbiBDb25maWd1cmF0aW9uXG4gKiBcbiAqIENlbnRyYWxpc2VkIGNvbmZpZ3VyYXRpb24gbWFuYWdlbWVudCBmb3IgdGhlIGVudGlyZSBhY2x1ZSBhcHBsaWNhdGlvbi5cbiAqIFByb3ZpZGVzIGVudmlyb25tZW50LXNwZWNpZmljIHNldHRpbmdzLCBBUEkgZW5kcG9pbnRzLCBmZWF0dXJlIGZsYWdzLFxuICogYW5kIGJ1c2luZXNzIGxvZ2ljIGNvbnN0YW50cy5cbiAqIFxuICogQ29uZmlndXJhdGlvbiBDYXRlZ29yaWVzOlxuICogICAtIEVudmlyb25tZW50OiBBUEkgVVJMcywgZGVwbG95bWVudCBzZXR0aW5ncywgYW5hbHl0aWNzIGtleXNcbiAqICAgLSBBUEkgRW5kcG9pbnRzOiBDb21wbGV0ZSBSRVNUIEFQSSBlbmRwb2ludCBkZWZpbml0aW9uc1xuICogICAtIEFwcGxpY2F0aW9uOiBVSSBzZXR0aW5ncywgdmFsaWRhdGlvbiBydWxlcywgZXJyb3IgbWVzc2FnZXNcbiAqICAgLSBBbWF6b24gQXNzb2NpYXRlczogQWZmaWxpYXRlIHByb2dyYW0gY29uZmlndXJhdGlvbiBhbmQgdXRpbGl0aWVzXG4gKiAgIC0gVGhlbWU6IERlc2lnbiBzeXN0ZW0gY29uc3RhbnRzIGFuZCBzdHlsaW5nXG4gKiBcbiAqIEVudmlyb25tZW50IFZhcmlhYmxlczpcbiAqICAgLSBBbGwgc2Vuc2l0aXZlIGRhdGEgbG9hZGVkIGZyb20gZW52aXJvbm1lbnQgdmFyaWFibGVzXG4gKiAgIC0gRmFsbGJhY2sgZGVmYXVsdHMgZm9yIGRldmVsb3BtZW50XG4gKiAgIC0gUHJvZHVjdGlvbiB2cyBkZXZlbG9wbWVudCBmZWF0dXJlIHRvZ2dsZXNcbiAqIFxuICogVXNhZ2U6XG4gKiAgIGltcG9ydCB7IGNvbmZpZywgZW5kcG9pbnRzLCBhcHBDb25maWcgfSBmcm9tICdAL2NvbmZpZyc7XG4gKiAgIGNvbnN0IGFwaVVybCA9IGNvbmZpZy5hcGlVcmw7XG4gKiAgIGNvbnN0IGxvZ2luRW5kcG9pbnQgPSBlbmRwb2ludHMuYXV0aC5sb2dpbjtcbiAqL1xuXG5pbXBvcnQgeyBFbnZpcm9ubWVudENvbmZpZyB9IGZyb20gJ0AvdHlwZXMnO1xuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEVOVklST05NRU5UIENPTkZJR1VSQVRJT05cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gUnVudGltZSBlbnZpcm9ubWVudCBzZXR0aW5ncyBsb2FkZWQgZnJvbSBlbnZpcm9ubWVudCB2YXJpYWJsZXNcblxuLyoqXG4gKiBDb3JlIGVudmlyb25tZW50IGNvbmZpZ3VyYXRpb24gZm9yIEFQSSBjb21tdW5pY2F0aW9uIGFuZCBleHRlcm5hbCBzZXJ2aWNlcy5cbiAqIFxuICogQXV0b21hdGljYWxseSBhZGFwdHMgYmV0d2VlbiBkZXZlbG9wbWVudCBhbmQgcHJvZHVjdGlvbiBlbnZpcm9ubWVudHNcbiAqIGJhc2VkIG9uIE5PREVfRU5WIGFuZCBlbnZpcm9ubWVudCB2YXJpYWJsZSBhdmFpbGFiaWxpdHkuXG4gKi9cbmV4cG9ydCBjb25zdCBjb25maWc6IEVudmlyb25tZW50Q29uZmlnID0ge1xuICAvLyBDb3JlIHNlcnZpY2UgVVJMc1xuICBhcGlVcmw6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FQSV9VUkwgfHwgJ2h0dHBzOi8vYWNsdWUtYmFja2VuZC1wcm9kdWN0aW9uLnVwLnJhaWx3YXkuYXBwJywgICAgICAgIC8vIEJhY2tlbmQgQVBJIGJhc2UgVVJMXG4gIHdlYlVybDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfV0VCX1VSTCB8fCAnaHR0cDovL2xvY2FsaG9zdDozMDAwJywgICAgICAgIC8vIEZyb250ZW5kIGFwcGxpY2F0aW9uIFVSTFxuICBcbiAgLy8gQW5hbHl0aWNzIGFuZCBtb25pdG9yaW5nIHNlcnZpY2Uga2V5c1xuICBtaXhwYW5lbFRva2VuOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19NSVhQQU5FTF9UT0tFTiwgICAgICAgICAgICAgICAgICAgICAvLyBNaXhwYW5lbCBhbmFseXRpY3MgKG9wdGlvbmFsKVxuICBzZW50cnlEc246IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NFTlRSWV9EU04sICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBTZW50cnkgZXJyb3IgdHJhY2tpbmcgKG9wdGlvbmFsKVxuICBnb29nbGVBbmFseXRpY3NJZDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfR0FfSUQsICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBHb29nbGUgQW5hbHl0aWNzIElEIChvcHRpb25hbClcbiAgcG9zdGhvZ0tleTogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfUE9TVEhPR19LRVksICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gUG9zdEhvZyBhbmFseXRpY3Mga2V5XG4gIHBvc3Rob2dIb3N0OiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19QT1NUSE9HX0hPU1QsICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFBvc3RIb2cgc2VydmljZSBob3N0XG4gIFxuICAvLyBFbnZpcm9ubWVudCBkZXRlY3Rpb25cbiAgaXNQcm9kdWN0aW9uOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nLCAgICAgICAgICAgICAgICAgICAgICAvLyBQcm9kdWN0aW9uIGVudmlyb25tZW50IGZsYWdcbiAgaXNEZXZlbG9wbWVudDogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcsICAgICAgICAgICAgICAgICAgICAvLyBEZXZlbG9wbWVudCBlbnZpcm9ubWVudCBmbGFnXG4gIHZlcnNpb246IHByb2Nlc3MuZW52Lm5wbV9wYWNrYWdlX3ZlcnNpb24gfHwgJzEuMC4wJywgICAgICAgICAgICAgICAgICAgICAgLy8gQXBwbGljYXRpb24gdmVyc2lvblxuICBcbiAgLy8gQW1hem9uIEFzc29jaWF0ZXMgYWZmaWxpYXRlIHByb2dyYW0gY29uZmlndXJhdGlvblxuICBhbWF6b25Bc3NvY2lhdGVUYWc6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FNQVpPTl9BU1NPQ0lBVEVfVEFHIHx8ICdhY2x1ZS0yMScsIC8vIEFwcHJvdmVkIGFzc29jaWF0ZSB0YWdcbiAgYW1hem9uUmVnaW9uOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BTUFaT05fUkVHSU9OIHx8ICd1aycsICAgICAgICAgICAgICAgICAgICAgICAvLyBUYXJnZXQgbWFya2V0IHJlZ2lvblxuICBhbWF6b25BcGlLZXk6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FNQVpPTl9BUElfS0VZLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFByb2R1Y3QgQWR2ZXJ0aXNpbmcgQVBJIGtleVxuICBhbWF6b25TZWNyZXRLZXk6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FNQVpPTl9TRUNSRVRfS0VZLCAgICAgICAgICAgICAgICAgICAgICAgIC8vIEFQSSBzZWNyZXQga2V5XG59O1xuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEFQSSBFTkRQT0lOVFNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQ29tcGxldGUgUkVTVCBBUEkgZW5kcG9pbnQgZGVmaW5pdGlvbnMgZm9yIGFsbCBiYWNrZW5kIHNlcnZpY2VzXG5cbi8qKlxuICogQ29tcHJlaGVuc2l2ZSBBUEkgZW5kcG9pbnQgY29uZmlndXJhdGlvbi5cbiAqIFxuICogT3JnYW5pc2VzIGFsbCBiYWNrZW5kIEFQSSBlbmRwb2ludHMgYnkgZnVuY3Rpb25hbCBhcmVhIGZvciBlYXN5XG4gKiBtYWludGVuYW5jZSBhbmQgY29uc2lzdGVudCB1c2FnZSBhY3Jvc3MgdGhlIGFwcGxpY2F0aW9uLlxuICogXG4gKiBQYXR0ZXJuOlxuICogICAtIFN0YXRpYyBlbmRwb2ludHM6IERpcmVjdCBzdHJpbmcgcGF0aHNcbiAqICAgLSBEeW5hbWljIGVuZHBvaW50czogRnVuY3Rpb25zIHRoYXQgYWNjZXB0IHBhcmFtZXRlcnNcbiAqICAgLSBDb25zaXN0ZW50IG5hbWluZzogUmVzb3VyY2UtYmFzZWQgb3JnYW5pc2F0aW9uXG4gKi9cbmV4cG9ydCBjb25zdCBlbmRwb2ludHMgPSB7XG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAvLyBBVVRIRU5USUNBVElPTiBFTkRQT0lOVFNcbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gIC8vIFVzZXIgYXV0aGVudGljYXRpb24gYW5kIHNlc3Npb24gbWFuYWdlbWVudFxuICBhdXRoOiB7XG4gICAgbG9naW46ICcvYXBpL3YxL2F1dGgvbG9naW4nLCAgICAgICAgICAgICAgICAgICAgLy8gUE9TVDogQXV0aGVudGljYXRlIHVzZXIgd2l0aCBlbWFpbC9wYXNzd29yZFxuICAgIHJlZ2lzdGVyOiAnL2FwaS92MS9hdXRoL3JlZ2lzdGVyJywgICAgICAgICAgICAgIC8vIFBPU1Q6IENyZWF0ZSBuZXcgdXNlciBhY2NvdW50XG4gICAgcmVmcmVzaDogJy9hcGkvdjEvYXV0aC9yZWZyZXNoJywgICAgICAgICAgICAgICAgLy8gUE9TVDogUmVmcmVzaCBleHBpcmVkIGFjY2VzcyB0b2tlblxuICAgIGxvZ291dDogJy9hcGkvdjEvYXV0aC9sb2dvdXQnLCAgICAgICAgICAgICAgICAgIC8vIFBPU1Q6IEVuZCB1c2VyIHNlc3Npb25cbiAgICBtZTogJy9hcGkvdjEvYXV0aC9tZScsICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBHRVQ6IEdldCBjdXJyZW50IHVzZXIgcHJvZmlsZVxuICAgIGZvcmdvdFBhc3N3b3JkOiAnL2FwaS92MS9hdXRoL2ZvcmdvdC1wYXNzd29yZCcsIC8vIFBPU1Q6IFJlcXVlc3QgcGFzc3dvcmQgcmVzZXRcbiAgICByZXNldFBhc3N3b3JkOiAnL2FwaS92MS9hdXRoL3Jlc2V0LXBhc3N3b3JkJywgICAvLyBQT1NUOiBSZXNldCBwYXNzd29yZCB3aXRoIHRva2VuXG4gICAgdmVyaWZ5RW1haWw6ICcvYXBpL3YxL2F1dGgvdmVyaWZ5LWVtYWlsJywgICAgICAgLy8gUE9TVDogVmVyaWZ5IGVtYWlsIGFkZHJlc3NcbiAgfSxcbiAgXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAvLyBVU0VSIE1BTkFHRU1FTlQgRU5EUE9JTlRTXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAvLyBVc2VyIHByb2ZpbGUgYW5kIHByZWZlcmVuY2UgbWFuYWdlbWVudFxuICB1c2Vyczoge1xuICAgIHByb2ZpbGU6ICcvYXBpL3YxL3VzZXJzL21lJywgICAgICAgICAgICAgICAgICAgIC8vIEdFVDogR2V0IHVzZXIgcHJvZmlsZVxuICAgIHVwZGF0ZVByb2ZpbGU6ICcvYXBpL3YxL3VzZXJzL21lJywgICAgICAgICAgICAgIC8vIFBVVDogVXBkYXRlIHVzZXIgcHJvZmlsZVxuICAgIHByZWZlcmVuY2VzOiAnL2FwaS92MS91c2Vycy9tZS9wcmVmZXJlbmNlcycsICAgIC8vIEdFVC9QVVQ6IFVzZXIgcHJlZmVyZW5jZXNcbiAgICBzdGF0aXN0aWNzOiAnL2FwaS92MS91c2Vycy9tZS9zdGF0aXN0aWNzJywgICAgICAvLyBHRVQ6IFVzZXIgYWN0aXZpdHkgc3RhdGlzdGljc1xuICAgIGRlbGV0ZUFjY291bnQ6ICcvYXBpL3YxL3VzZXJzL21lJywgICAgICAgICAgICAgIC8vIERFTEVURTogUGVybWFuZW50bHkgZGVsZXRlIGFjY291bnRcbiAgfSxcbiAgXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAvLyBQUk9EVUNUIENBVEFMT0cgRU5EUE9JTlRTXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAvLyBQcm9kdWN0IHNlYXJjaCwgZmlsdGVyaW5nLCBhbmQgcmV0cmlldmFsXG4gIHByb2R1Y3RzOiB7XG4gICAgbGlzdDogJy9hcGkvdjEvcHJvZHVjdHMnLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEdFVDogTGlzdCBwcm9kdWN0cyB3aXRoIGZpbHRlcnNcbiAgICBzZWFyY2g6ICcvYXBpL3YxL3Byb2R1Y3RzL3NlYXJjaCcsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gUE9TVDogU2VhcmNoIHByb2R1Y3RzIGJ5IHF1ZXJ5XG4gICAgY2F0ZWdvcmllczogJy9hcGkvdjEvcHJvZHVjdHMvY2F0ZWdvcmllcycsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEdFVDogR2V0IHByb2R1Y3QgY2F0ZWdvcmllc1xuICAgIGZlYXR1cmVkOiAnL2FwaS92MS9wcm9kdWN0cy9mZWF0dXJlZCcsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBHRVQ6IEdldCBmZWF0dXJlZCBwcm9kdWN0c1xuICAgIHRyZW5kaW5nOiAnL2FwaS92MS9wcm9kdWN0cy90cmVuZGluZycsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBHRVQ6IEdldCB0cmVuZGluZyBwcm9kdWN0c1xuICAgIGJ5Q2F0ZWdvcnk6IChjYXRlZ29yeUlkOiBzdHJpbmcpID0+IGAvYXBpL3YxL3Byb2R1Y3RzL2NhdGVnb3J5LyR7Y2F0ZWdvcnlJZH1gLCAvLyBHRVQ6IFByb2R1Y3RzIGJ5IGNhdGVnb3J5XG4gICAgYnlJZDogKGlkOiBzdHJpbmcpID0+IGAvYXBpL3YxL3Byb2R1Y3RzLyR7aWR9YCwgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gR0VUOiBTaW5nbGUgcHJvZHVjdCBkZXRhaWxzXG4gICAgcmVjb21tZW5kYXRpb25zOiAnL2FwaS92MS9wcm9kdWN0cy9yZWNvbW1lbmRhdGlvbnMnLCAgICAgICAgICAgICAgICAgICAgICAgLy8gR0VUOiBQcm9kdWN0IHJlY29tbWVuZGF0aW9uc1xuICB9LFxuICBcbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gIC8vIFNXSVBFIElOVEVSQUNUSU9OIEVORFBPSU5UU1xuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgLy8gVXNlciBwcmVmZXJlbmNlIGNvbGxlY3Rpb24gdGhyb3VnaCBzd2lwZSBnZXN0dXJlc1xuICBzd2lwZXM6IHtcbiAgICBzZXNzaW9uczogJy9hcGkvdjEvc3dpcGVzL3Nlc3Npb25zJywgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gR0VUOiBMaXN0IHVzZXIncyBzd2lwZSBzZXNzaW9uc1xuICAgIGNyZWF0ZVNlc3Npb246ICcvYXBpL3YxL3N3aXBlcy9zZXNzaW9ucycsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBQT1NUOiBTdGFydCBuZXcgc3dpcGUgc2Vzc2lvblxuICAgIGN1cnJlbnRTZXNzaW9uOiAnL2FwaS92MS9zd2lwZXMvc2Vzc2lvbnMvY3VycmVudCcsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBHRVQ6IEdldCBhY3RpdmUgc2Vzc2lvblxuICAgIGludGVyYWN0aW9uczogKHNlc3Npb25JZDogc3RyaW5nKSA9PiBgL2FwaS92MS9zd2lwZXMvc2Vzc2lvbnMvJHtzZXNzaW9uSWR9L2ludGVyYWN0aW9uc2AsIC8vIFBPU1Q6IFJlY29yZCBzd2lwZSBpbnRlcmFjdGlvblxuICAgIGFuYWx5dGljczogJy9hcGkvdjEvc3dpcGVzL2FuYWx5dGljcycsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBHRVQ6IFN3aXBlIGFuYWx5dGljcyBkYXRhXG4gIH0sXG4gIFxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgLy8gQUkgUkVDT01NRU5EQVRJT04gRU5EUE9JTlRTXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAvLyBNYWNoaW5lIGxlYXJuaW5nIHBvd2VyZWQgcHJvZHVjdCByZWNvbW1lbmRhdGlvbnNcbiAgcmVjb21tZW5kYXRpb25zOiB7XG4gICAgZ2VuZXJhdGU6ICcvYXBpL3YxL3JlY29tbWVuZGF0aW9ucy9nZW5lcmF0ZScsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFBPU1Q6IEdlbmVyYXRlIG5ldyByZWNvbW1lbmRhdGlvbnNcbiAgICBsaXN0OiAnL2FwaS92MS9yZWNvbW1lbmRhdGlvbnMnLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gR0VUOiBHZXQgdXNlcidzIHJlY29tbWVuZGF0aW9uc1xuICAgIGJ5SWQ6IChpZDogc3RyaW5nKSA9PiBgL2FwaS92MS9yZWNvbW1lbmRhdGlvbnMvJHtpZH1gLCAgICAgICAgICAgICAgICAgICAgIC8vIEdFVDogU2luZ2xlIHJlY29tbWVuZGF0aW9uIGRldGFpbHNcbiAgICBmZWVkYmFjazogKGlkOiBzdHJpbmcpID0+IGAvYXBpL3YxL3JlY29tbWVuZGF0aW9ucy8ke2lkfS9mZWVkYmFja2AsICAgICAgICAvLyBQT1NUOiBQcm92aWRlIHJlY29tbWVuZGF0aW9uIGZlZWRiYWNrXG4gICAgcmVmcmVzaDogJy9hcGkvdjEvcmVjb21tZW5kYXRpb25zL3JlZnJlc2gnLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFBPU1Q6IFJlZnJlc2ggcmVjb21tZW5kYXRpb24gbGlzdFxuICB9LFxuICBcbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gIC8vIEdJRlQgTElOSyBTSEFSSU5HIEVORFBPSU5UU1xuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgLy8gU29jaWFsIHNoYXJpbmcgYW5kIGdpZnQgbGluayBtYW5hZ2VtZW50XG4gIGdpZnRMaW5rczoge1xuICAgIGNyZWF0ZTogJy9hcGkvdjEvZ2lmdC1saW5rcycsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBQT1NUOiBDcmVhdGUgc2hhcmVhYmxlIGdpZnQgbGlua1xuICAgIGxpc3Q6ICcvYXBpL3YxL2dpZnQtbGlua3MnLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBHRVQ6IExpc3QgdXNlcidzIGdpZnQgbGlua3NcbiAgICBieUlkOiAoaWQ6IHN0cmluZykgPT4gYC9hcGkvdjEvZ2lmdC1saW5rcy8ke2lkfWAsICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBHRVQ6IEdpZnQgbGluayBkZXRhaWxzXG4gICAgYnlUb2tlbjogKHRva2VuOiBzdHJpbmcpID0+IGAvYXBpL3YxL2dpZnQtbGlua3Mvc2hhcmUvJHt0b2tlbn1gLCAgICAgICAgICAgLy8gR0VUOiBQdWJsaWMgZ2lmdCBsaW5rIGFjY2Vzc1xuICAgIGRlbGV0ZTogKGlkOiBzdHJpbmcpID0+IGAvYXBpL3YxL2dpZnQtbGlua3MvJHtpZH1gLCAgICAgICAgICAgICAgICAgICAgICAgIC8vIERFTEVURTogUmVtb3ZlIGdpZnQgbGlua1xuICAgIGFuYWx5dGljczogKGlkOiBzdHJpbmcpID0+IGAvYXBpL3YxL2dpZnQtbGlua3MvJHtpZH0vYW5hbHl0aWNzYCwgICAgICAgICAgIC8vIEdFVDogR2lmdCBsaW5rIGFuYWx5dGljc1xuICB9LFxuICBcbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gIC8vIEFOQUxZVElDUyBBTkQgVFJBQ0tJTkcgRU5EUE9JTlRTXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAvLyBVc2VyIGJlaGF2aW9yIHRyYWNraW5nIGFuZCBidXNpbmVzcyBhbmFseXRpY3NcbiAgYW5hbHl0aWNzOiB7XG4gICAgdHJhY2s6ICcvYXBpL3YxL2FuYWx5dGljcy90cmFjaycsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFBPU1Q6IFRyYWNrIHVzZXIgZXZlbnRzXG4gICAgZXZlbnRzOiAnL2FwaS92MS9hbmFseXRpY3MvZXZlbnRzJywgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEdFVDogUXVlcnkgYW5hbHl0aWNzIGV2ZW50c1xuICAgIGRhc2hib2FyZDogJy9hcGkvdjEvYW5hbHl0aWNzL2Rhc2hib2FyZCcsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBHRVQ6IEFuYWx5dGljcyBkYXNoYm9hcmQgZGF0YVxuICB9LFxuICBcbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gIC8vIFNZU1RFTSBIRUFMVEggRU5EUE9JTlRTXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAvLyBTZXJ2aWNlIG1vbml0b3JpbmcgYW5kIGhlYWx0aCBjaGVja3NcbiAgaGVhbHRoOiAnL2hlYWx0aCcsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gR0VUOiBTeXN0ZW0gaGVhbHRoIHN0YXR1c1xufTtcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBBUFBMSUNBVElPTiBDT05GSUdVUkFUSU9OXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEJ1c2luZXNzIGxvZ2ljLCBVSSBzZXR0aW5ncywgYW5kIGFwcGxpY2F0aW9uIGNvbnN0YW50c1xuXG4vKipcbiAqIENvbXByZWhlbnNpdmUgYXBwbGljYXRpb24gY29uZmlndXJhdGlvbiBjb250YWluaW5nIGFsbCBidXNpbmVzcyBydWxlcyxcbiAqIFVJIHNldHRpbmdzLCB2YWxpZGF0aW9uIHBhdHRlcm5zLCBhbmQgZmVhdHVyZSBmbGFncy5cbiAqIFxuICogVXNlZCB0aHJvdWdob3V0IHRoZSBhcHBsaWNhdGlvbiBmb3IgY29uc2lzdGVudCBiZWhhdmlvciBhbmQgZWFzeVxuICogbWFpbnRlbmFuY2Ugb2YgYnVzaW5lc3MgbG9naWMuXG4gKi9cbmV4cG9ydCBjb25zdCBhcHBDb25maWcgPSB7XG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAvLyBCUkFORCBBTkQgTUVTU0FHSU5HXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICBuYW1lOiAnYWNsdWUnLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQXBwbGljYXRpb24gbmFtZVxuICBkZXNjcmlwdGlvbjogJ0EgZGF0YS1sZWQgaW5zaWdodCBsYXllciB0aGF0IHRyYW5zZm9ybXMgaG93IGdpZnRzIGFyZSBjaG9zZW4nLCAvLyBTRU8gZGVzY3JpcHRpb25cbiAgdGFnbGluZTogJ0EgZGF0YS1sZWQgaW5zaWdodCBsYXllciB0aGF0IHRyYW5zZm9ybXMgaG93IGdpZnRzIGFyZSBjaG9zZW4nLCAgICAgICAgICAgICAgLy8gTWFya2V0aW5nIHRhZ2xpbmVcbiAgXG4gIC8vIFN3aXBlIHNldHRpbmdzXG4gIHN3aXBlOiB7XG4gICAgbWF4U3dpcGVzUGVyU2Vzc2lvbjogNTAsXG4gICAgc2Vzc2lvblRpbWVvdXQ6IDMwICogNjAgKiAxMDAwLCAvLyAzMCBtaW51dGVzXG4gICAgY2FyZFByZWxvYWRDb3VudDogNSxcbiAgICBhbmltYXRpb25EdXJhdGlvbjogMzAwLFxuICAgIHZlbG9jaXR5VGhyZXNob2xkOiAwLjUsXG4gICAgZGlzdGFuY2VUaHJlc2hvbGQ6IDEwMCxcbiAgfSxcbiAgXG4gIC8vIFBhZ2luYXRpb25cbiAgcGFnaW5hdGlvbjoge1xuICAgIGRlZmF1bHRQYWdlU2l6ZTogMjAsXG4gICAgbWF4UGFnZVNpemU6IDEwMCxcbiAgfSxcbiAgXG4gIC8vIEltYWdlIHNldHRpbmdzXG4gIGltYWdlczoge1xuICAgIGRlZmF1bHRQcm9kdWN0SW1hZ2U6ICcvaW1hZ2VzL3BsYWNlaG9sZGVyLXByb2R1Y3QucG5nJyxcbiAgICBkZWZhdWx0VXNlckF2YXRhcjogJy9pbWFnZXMvZGVmYXVsdC1hdmF0YXIucG5nJyxcbiAgICBkZWZhdWx0Q2F0ZWdvcnlJY29uOiAnL2ltYWdlcy9jYXRlZ29yeS1kZWZhdWx0LnN2ZycsXG4gICAgY2xvdWRpbmFyeUJhc2VVcmw6ICdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9hY2x1ZScsXG4gIH0sXG4gIFxuICAvLyBBbmltYXRpb24gc2V0dGluZ3NcbiAgYW5pbWF0aW9uczoge1xuICAgIGRlZmF1bHREdXJhdGlvbjogMzAwLFxuICAgIGRlZmF1bHRFYXNpbmc6ICdjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpJyxcbiAgICBwYWdlVHJhbnNpdGlvbjogMjAwLFxuICB9LFxuICBcbiAgLy8gVG9hc3Qgbm90aWZpY2F0aW9uc1xuICB0b2FzdDoge1xuICAgIGRlZmF1bHREdXJhdGlvbjogNTAwMCxcbiAgICBwb3NpdGlvbjogJ3RvcC1yaWdodCcgYXMgY29uc3QsXG4gIH0sXG4gIFxuICAvLyBMb2NhbCBzdG9yYWdlIGtleXNcbiAgc3RvcmFnZToge1xuICAgIGF1dGhUb2tlbjogJ2FjbHVlX2F1dGhfdG9rZW4nLFxuICAgIHJlZnJlc2hUb2tlbjogJ2FjbHVlX3JlZnJlc2hfdG9rZW4nLFxuICAgIHVzZXI6ICdhY2x1ZV91c2VyJyxcbiAgICBwcmVmZXJlbmNlczogJ2FjbHVlX3ByZWZlcmVuY2VzJyxcbiAgICByZWNlbnRTZWFyY2hlczogJ2FjbHVlX3JlY2VudF9zZWFyY2hlcycsXG4gICAgdmlld2VkUHJvZHVjdHM6ICdhY2x1ZV92aWV3ZWRfcHJvZHVjdHMnLFxuICAgIG9uYm9hcmRpbmdDb21wbGV0ZWQ6ICdhY2x1ZV9vbmJvYXJkaW5nX2NvbXBsZXRlZCcsXG4gICAgdGhlbWU6ICdhY2x1ZV90aGVtZScsXG4gIH0sXG4gIFxuICAvLyBGZWF0dXJlIGZsYWdzXG4gIGZlYXR1cmVzOiB7XG4gICAgc29jaWFsTG9naW46IHRydWUsXG4gICAgcHVzaE5vdGlmaWNhdGlvbnM6IHRydWUsXG4gICAgZGFya01vZGU6IHRydWUsXG4gICAgYW5hbHl0aWNzOiB0cnVlLFxuICAgIGFmZmlsaWF0ZUxpbmtzOiB0cnVlLFxuICAgIGFmZmlsaWF0ZVRyYWNraW5nOiB0cnVlLFxuICAgIGJldGE6IHtcbiAgICAgIHZvaWNlU2VhcmNoOiBmYWxzZSxcbiAgICAgIGFyRmVhdHVyZXM6IGZhbHNlLFxuICAgICAgY2hhdGJvdDogZmFsc2UsXG4gICAgICBhbWF6b25BcGlJbnRlZ3JhdGlvbjogZmFsc2UsXG4gICAgfSxcbiAgfSxcbiAgXG4gIC8vIEV4dGVybmFsIFVSTHNcbiAgdXJsczoge1xuICAgIHByaXZhY3lQb2xpY3k6ICcvcHJpdmFjeScsXG4gICAgdGVybXNPZlNlcnZpY2U6ICcvdGVybXMnLFxuICAgIGNvbnRhY3RVczogJy9jb250YWN0JyxcbiAgICBoZWxwOiAnL2hlbHAnLFxuICAgIGJsb2c6ICcvYmxvZycsXG4gICAgY2FyZWVyczogJy9jYXJlZXJzJyxcbiAgICBwcmVzc0tpdDogJy9wcmVzcycsXG4gICAgYXBpRG9jczogYCR7Y29uZmlnLmFwaVVybH0vZG9jc2AsXG4gICAgYWZmaWxpYXRlRGlzY2xvc3VyZTogJy9hZmZpbGlhdGUtZGlzY2xvc3VyZScsXG4gICAgY29va2llUG9saWN5OiAnL2Nvb2tpZS1wb2xpY3knLFxuICB9LFxuICBcbiAgLy8gU29jaWFsIG1lZGlhXG4gIHNvY2lhbDoge1xuICAgIHR3aXR0ZXI6ICdodHRwczovL3R3aXR0ZXIuY29tL2FjbHVlJyxcbiAgICBmYWNlYm9vazogJ2h0dHBzOi8vZmFjZWJvb2suY29tL2FjbHVlJyxcbiAgICBpbnN0YWdyYW06ICdodHRwczovL2luc3RhZ3JhbS5jb20vYWNsdWUnLFxuICAgIGxpbmtlZGluOiAnaHR0cHM6Ly9saW5rZWRpbi5jb20vY29tcGFueS9hY2x1ZScsXG4gICAgeW91dHViZTogJ2h0dHBzOi8veW91dHViZS5jb20vYy9hY2x1ZScsXG4gIH0sXG4gIFxuICAvLyBDb250YWN0IGluZm9ybWF0aW9uXG4gIGNvbnRhY3Q6IHtcbiAgICBlbWFpbDogJ2hlbGxvQGFjbHVlLmFwcCcsXG4gICAgc3VwcG9ydDogJ3N1cHBvcnRAYWNsdWUuYXBwJyxcbiAgICBwcmVzczogJ3ByZXNzQGFjbHVlLmFwcCcsXG4gICAgcGFydG5lcnNoaXBzOiAncGFydG5lcnNoaXBzQGFjbHVlLmFwcCcsXG4gIH0sXG4gIFxuICAvLyBBcHAgc3RvcmUgbGlua3NcbiAgYXBwU3RvcmU6IHtcbiAgICBpb3M6ICdodHRwczovL2FwcHMuYXBwbGUuY29tL2FwcC9hY2x1ZScsXG4gICAgYW5kcm9pZDogJ2h0dHBzOi8vcGxheS5nb29nbGUuY29tL3N0b3JlL2FwcHMvZGV0YWlscz9pZD1jb20uYWNsdWUuYXBwJyxcbiAgfSxcbiAgXG4gIC8vIFN1YnNjcmlwdGlvbiB0aWVyc1xuICBzdWJzY3JpcHRpb25UaWVyczoge1xuICAgIGZyZWU6IHtcbiAgICAgIG5hbWU6ICdGcmVlJyxcbiAgICAgIHByaWNlOiAwLFxuICAgICAgZmVhdHVyZXM6IFtcbiAgICAgICAgJ0Jhc2ljIHJlY29tbWVuZGF0aW9ucycsXG4gICAgICAgICdMaW1pdGVkIHN3aXBlcyBwZXIgZGF5JyxcbiAgICAgICAgJ0VtYWlsIHN1cHBvcnQnLFxuICAgICAgICAnQmFzaWMgYW5hbHl0aWNzJyxcbiAgICAgIF0sXG4gICAgfSxcbiAgICBwcmVtaXVtOiB7XG4gICAgICBuYW1lOiAnUHJlbWl1bScsXG4gICAgICBwcmljZTogOS45OSxcbiAgICAgIGZlYXR1cmVzOiBbXG4gICAgICAgICdVbmxpbWl0ZWQgc3dpcGVzJyxcbiAgICAgICAgJ0FkdmFuY2VkIEFJIHJlY29tbWVuZGF0aW9ucycsXG4gICAgICAgICdQcmlvcml0eSBzdXBwb3J0JyxcbiAgICAgICAgJ0FkdmFuY2VkIGFuYWx5dGljcycsXG4gICAgICAgICdHaWZ0IGxpbmsgY3VzdG9taXphdGlvbicsXG4gICAgICAgICdFeHBvcnQgZmVhdHVyZXMnLFxuICAgICAgXSxcbiAgICB9LFxuICAgIGVudGVycHJpc2U6IHtcbiAgICAgIG5hbWU6ICdFbnRlcnByaXNlJyxcbiAgICAgIHByaWNlOiAyOS45OSxcbiAgICAgIGZlYXR1cmVzOiBbXG4gICAgICAgICdBbGwgUHJlbWl1bSBmZWF0dXJlcycsXG4gICAgICAgICdUZWFtIGNvbGxhYm9yYXRpb24nLFxuICAgICAgICAnQnVsayBnaWZ0IG1hbmFnZW1lbnQnLFxuICAgICAgICAnQ3VzdG9tIGJyYW5kaW5nJyxcbiAgICAgICAgJ0FQSSBhY2Nlc3MnLFxuICAgICAgICAnRGVkaWNhdGVkIHN1cHBvcnQnLFxuICAgICAgXSxcbiAgICB9LFxuICB9LFxuICBcbiAgLy8gVmFsaWRhdGlvbiBydWxlc1xuICB2YWxpZGF0aW9uOiB7XG4gICAgcGFzc3dvcmQ6IHtcbiAgICAgIG1pbkxlbmd0aDogOCxcbiAgICAgIHJlcXVpcmVVcHBlcmNhc2U6IHRydWUsXG4gICAgICByZXF1aXJlTG93ZXJjYXNlOiB0cnVlLFxuICAgICAgcmVxdWlyZU51bWJlcnM6IHRydWUsXG4gICAgICByZXF1aXJlU3BlY2lhbENoYXJzOiB0cnVlLFxuICAgIH0sXG4gICAgZW1haWw6IHtcbiAgICAgIHBhdHRlcm46IC9eW0EtWjAtOS5fJSstXStAW0EtWjAtOS4tXStcXC5bQS1aXXsyLH0kL2ksXG4gICAgfSxcbiAgICBuYW1lOiB7XG4gICAgICBtaW5MZW5ndGg6IDIsXG4gICAgICBtYXhMZW5ndGg6IDUwLFxuICAgICAgcGF0dGVybjogL15bYS16QS1aXFxzJy4tXSskLyxcbiAgICB9LFxuICB9LFxuICBcbiAgLy8gRXJyb3IgbWVzc2FnZXNcbiAgZXJyb3JzOiB7XG4gICAgbmV0d29yazogJ05ldHdvcmsgZXJyb3IuIFBsZWFzZSBjaGVjayB5b3VyIGNvbm5lY3Rpb24gYW5kIHRyeSBhZ2Fpbi4nLFxuICAgIHNlcnZlcjogJ1NlcnZlciBlcnJvci4gUGxlYXNlIHRyeSBhZ2FpbiBsYXRlci4nLFxuICAgIHVuYXV0aG9yaXplZDogJ1BsZWFzZSBsb2cgaW4gdG8gY29udGludWUuJyxcbiAgICBmb3JiaWRkZW46ICdZb3UgZG8gbm90IGhhdmUgcGVybWlzc2lvbiB0byBhY2Nlc3MgdGhpcyByZXNvdXJjZS4nLFxuICAgIG5vdEZvdW5kOiAnVGhlIHJlcXVlc3RlZCByZXNvdXJjZSB3YXMgbm90IGZvdW5kLicsXG4gICAgdmFsaWRhdGlvbjogJ1BsZWFzZSBjaGVjayB5b3VyIGlucHV0IGFuZCB0cnkgYWdhaW4uJyxcbiAgICB1bmtub3duOiAnQW4gdW5leHBlY3RlZCBlcnJvciBvY2N1cnJlZC4gUGxlYXNlIHRyeSBhZ2Fpbi4nLFxuICB9LFxuICBcbiAgLy8gU3VjY2VzcyBtZXNzYWdlc1xuICBzdWNjZXNzOiB7XG4gICAgbG9naW46ICdXZWxjb21lIGJhY2shJyxcbiAgICByZWdpc3RlcjogJ0FjY291bnQgY3JlYXRlZCBzdWNjZXNzZnVsbHkhJyxcbiAgICBsb2dvdXQ6ICdMb2dnZWQgb3V0IHN1Y2Nlc3NmdWxseS4nLFxuICAgIHByb2ZpbGVVcGRhdGVkOiAnUHJvZmlsZSB1cGRhdGVkIHN1Y2Nlc3NmdWxseS4nLFxuICAgIHByZWZlcmVuY2VzVXBkYXRlZDogJ1ByZWZlcmVuY2VzIHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5LicsXG4gICAgZ2lmdExpbmtDcmVhdGVkOiAnR2lmdCBsaW5rIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5IScsXG4gICAgZ2lmdExpbmtTaGFyZWQ6ICdHaWZ0IGxpbmsgc2hhcmVkIHN1Y2Nlc3NmdWxseSEnLFxuICAgIGFmZmlsaWF0ZUxpbmtHZW5lcmF0ZWQ6ICdBZmZpbGlhdGUgbGluayBnZW5lcmF0ZWQgc3VjY2Vzc2Z1bGx5IScsXG4gIH0sXG59O1xuXG4vLyBBbWF6b24gQXNzb2NpYXRlcyBDb25maWd1cmF0aW9uXG5leHBvcnQgY29uc3QgYW1hem9uQ29uZmlnID0ge1xuICAvLyBVSyBBbWF6b24gQXNzb2NpYXRlcyBDb25maWd1cmF0aW9uXG4gIHVrOiB7XG4gICAgYXNzb2NpYXRlVGFnOiAnYWNsdWUtMjEnLFxuICAgIGJhc2VVcmw6ICdodHRwczovL2FtYXpvbi5jby51aycsXG4gICAgYXBpSG9zdDogJ3dlYnNlcnZpY2VzLmFtYXpvbi5jby51aycsXG4gICAgbWFya2V0cGxhY2U6ICdBMUY4M0c4QzJBUk83UCcsXG4gICAgcmVnaW9uOiAnZXUtd2VzdC0xJyxcbiAgICBjdXJyZW5jeTogJ0dCUCcsXG4gICAgbGFuZ3VhZ2U6ICdlbl9HQicsXG4gIH0sXG4gIFxuICAvLyBDb21taXNzaW9uIHJhdGVzIGJ5IGNhdGVnb3J5IChhcHByb3hpbWF0ZSlcbiAgY29tbWlzc2lvblJhdGVzOiB7XG4gICAgZWxlY3Ryb25pY3M6IDAuMDEsICAgICAgICAgIC8vIDElXG4gICAgZmFzaGlvbjogMC4wNCwgICAgICAgICAgICAgLy8gNCVcbiAgICBob21lQW5kR2FyZGVuOiAwLjAzLCAgICAgICAvLyAzJVxuICAgIHNwb3J0c0FuZE91dGRvb3JzOiAwLjAzLCAgIC8vIDMlXG4gICAgYm9va3M6IDAuMDQ1LCAgICAgICAgICAgICAgLy8gNC41JVxuICAgIHRveXM6IDAuMDMsICAgICAgICAgICAgICAgIC8vIDMlXG4gICAgYmVhdXR5QW5kUGVyc29uYWxDYXJlOiAwLjA0LCAvLyA0JVxuICAgIGF1dG9tb3RpdmU6IDAuMDQ1LCAgICAgICAgIC8vIDQuNSVcbiAgICBpbmR1c3RyaWFsOiAwLjA0NSwgICAgICAgICAvLyA0LjUlXG4gICAgb3V0ZG9vckFuZEdhcmRlbjogMC4wMywgICAgLy8gMyVcbiAgICBkZWZhdWx0OiAwLjAyLCAgICAgICAgICAgICAvLyAyJVxuICB9LFxuICBcbiAgLy8gUHJvZHVjdCBjYXRlZ29yaWVzIGZvciByZWNvbW1lbmRhdGlvbnNcbiAgcHJvZHVjdENhdGVnb3JpZXM6IHtcbiAgICAnQWxsJzogJ0FsbCcsXG4gICAgJ0VsZWN0cm9uaWNzJzogJ0VsZWN0cm9uaWNzJyxcbiAgICAnRmFzaGlvbic6ICdGYXNoaW9uJyxcbiAgICAnSG9tZSAmIEdhcmRlbic6ICdHYXJkZW4nLFxuICAgICdTcG9ydHMgJiBPdXRkb29ycyc6ICdTcG9ydGluZ0dvb2RzJyxcbiAgICAnQm9va3MnOiAnQm9va3MnLFxuICAgICdUb3lzICYgR2FtZXMnOiAnVG95cycsXG4gICAgJ0JlYXV0eSAmIFBlcnNvbmFsIENhcmUnOiAnQmVhdXR5JyxcbiAgICAnQXV0b21vdGl2ZSc6ICdBdXRvbW90aXZlJyxcbiAgICAnSGVhbHRoICYgSG91c2Vob2xkJzogJ0hlYWx0aFBlcnNvbmFsQ2FyZScsXG4gICAgJ1Rvb2xzICYgSG9tZSBJbXByb3ZlbWVudCc6ICdUb29scycsXG4gICAgJ1ZpZGVvIEdhbWVzJzogJ1ZpZGVvR2FtZXMnLFxuICAgICdPZmZpY2UgUHJvZHVjdHMnOiAnT2ZmaWNlUHJvZHVjdHMnLFxuICAgICdLaXRjaGVuICYgRGluaW5nJzogJ0tpdGNoZW4nLFxuICAgICdCYWJ5JzogJ0JhYnknLFxuICAgICdQZXQgU3VwcGxpZXMnOiAnUGV0U3VwcGxpZXMnLFxuICAgICdJbmR1c3RyaWFsICYgU2NpZW50aWZpYyc6ICdJbmR1c3RyaWFsJyxcbiAgICAnSGFuZG1hZGUnOiAnSGFuZG1hZGUnLFxuICAgICdBcnRzLCBDcmFmdHMgJiBTZXdpbmcnOiAnQXJ0c0FuZENyYWZ0cycsXG4gICAgJ011c2ljYWwgSW5zdHJ1bWVudHMnOiAnTXVzaWNhbEluc3RydW1lbnRzJyxcbiAgfSxcbiAgXG4gIC8vIEFQSSBDb25maWd1cmF0aW9uXG4gIGFwaToge1xuICAgIHZlcnNpb246ICc1LjAnLFxuICAgIHJlcXVlc3RzUGVyU2Vjb25kOiAxLFxuICAgIHRpbWVvdXRNczogNTAwMCxcbiAgICByZXRyeUF0dGVtcHRzOiAzLFxuICAgIHJldHJ5RGVsYXlNczogMTAwMCxcbiAgfSxcbiAgXG4gIC8vIFRyYWNraW5nIGFuZCBBbmFseXRpY3NcbiAgdHJhY2tpbmc6IHtcbiAgICBlbmFibGVDb252ZXJzaW9uVHJhY2tpbmc6IHRydWUsXG4gICAgZW5hYmxlQ2xpY2tUcmFja2luZzogdHJ1ZSxcbiAgICBlbmFibGVJbXByZXNzaW9uVHJhY2tpbmc6IHRydWUsXG4gICAgc2Vzc2lvblRpbWVvdXRNaW51dGVzOiAzMCxcbiAgICBhdHRyaWJ1dGlvbldpbmRvd0RheXM6IDMwLFxuICB9LFxufTtcblxuLy8gQWZmaWxpYXRlIExpbmsgR2VuZXJhdGlvbiBVdGlsaXRpZXNcbmV4cG9ydCBjbGFzcyBBZmZpbGlhdGVMaW5rc1NlcnZpY2Uge1xuICAvKipcbiAgICogR2VuZXJhdGVzIGFuIEFtYXpvbiBhZmZpbGlhdGUgbGluayB3aXRoIHByb3BlciB0cmFja2luZ1xuICAgKi9cbiAgc3RhdGljIGdlbmVyYXRlQWZmaWxpYXRlTGluayhcbiAgICBwcm9kdWN0VXJsOiBzdHJpbmcsIFxuICAgIG9wdGlvbnM6IHtcbiAgICAgIGFzc29jaWF0ZVRhZz86IHN0cmluZztcbiAgICAgIHJlZj86IHN0cmluZztcbiAgICAgIGNhbXBhaWduPzogc3RyaW5nO1xuICAgICAgbWVkaXVtPzogc3RyaW5nO1xuICAgICAgc291cmNlPzogc3RyaW5nO1xuICAgIH0gPSB7fVxuICApOiBzdHJpbmcge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCB1cmwgPSBuZXcgVVJMKHByb2R1Y3RVcmwpO1xuICAgICAgXG4gICAgICAvLyBFbnN1cmUgd2UncmUgdXNpbmcgdGhlIGNvcnJlY3QgQW1hem9uIGRvbWFpblxuICAgICAgaWYgKCF1cmwuaG9zdG5hbWUuaW5jbHVkZXMoJ2FtYXpvbi5jby51aycpKSB7XG4gICAgICAgIC8vIENvbnZlcnQgdG8gVUsgZG9tYWluIGlmIG5lZWRlZFxuICAgICAgICB1cmwuaG9zdG5hbWUgPSAnYW1hem9uLmNvLnVrJztcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gQWRkIGFzc29jaWF0ZSB0YWdcbiAgICAgIHVybC5zZWFyY2hQYXJhbXMuc2V0KCd0YWcnLCBvcHRpb25zLmFzc29jaWF0ZVRhZyB8fCBhbWF6b25Db25maWcudWsuYXNzb2NpYXRlVGFnKTtcbiAgICAgIFxuICAgICAgLy8gQWRkIHRyYWNraW5nIHBhcmFtZXRlcnNcbiAgICAgIGlmIChvcHRpb25zLnJlZikge1xuICAgICAgICB1cmwuc2VhcmNoUGFyYW1zLnNldCgncmVmXycsIG9wdGlvbnMucmVmKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgaWYgKG9wdGlvbnMuY2FtcGFpZ24pIHtcbiAgICAgICAgdXJsLnNlYXJjaFBhcmFtcy5zZXQoJ2NhbXBhaWduJywgb3B0aW9ucy5jYW1wYWlnbik7XG4gICAgICB9XG4gICAgICBcbiAgICAgIGlmIChvcHRpb25zLm1lZGl1bSkge1xuICAgICAgICB1cmwuc2VhcmNoUGFyYW1zLnNldCgnbWVkaXVtJywgb3B0aW9ucy5tZWRpdW0pO1xuICAgICAgfVxuICAgICAgXG4gICAgICBpZiAob3B0aW9ucy5zb3VyY2UpIHtcbiAgICAgICAgdXJsLnNlYXJjaFBhcmFtcy5zZXQoJ3NvdXJjZScsIG9wdGlvbnMuc291cmNlKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gQWRkIHRpbWVzdGFtcCBmb3IgdHJhY2tpbmdcbiAgICAgIHVybC5zZWFyY2hQYXJhbXMuc2V0KCd0aW1lc3RhbXAnLCBEYXRlLm5vdygpLnRvU3RyaW5nKCkpO1xuICAgICAgXG4gICAgICByZXR1cm4gdXJsLnRvU3RyaW5nKCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGdlbmVyYXRpbmcgYWZmaWxpYXRlIGxpbms6JywgZXJyb3IpO1xuICAgICAgcmV0dXJuIHByb2R1Y3RVcmw7IC8vIFJldHVybiBvcmlnaW5hbCBVUkwgaWYgZ2VuZXJhdGlvbiBmYWlsc1xuICAgIH1cbiAgfVxuICBcbiAgLyoqXG4gICAqIEdlbmVyYXRlcyBhbiBBbWF6b24gc2VhcmNoIGxpbmsgd2l0aCBhZmZpbGlhdGUgdHJhY2tpbmdcbiAgICovXG4gIHN0YXRpYyBnZW5lcmF0ZVNlYXJjaExpbmsoXG4gICAgc2VhcmNoVGVybTogc3RyaW5nLFxuICAgIGNhdGVnb3J5Pzogc3RyaW5nLFxuICAgIG9wdGlvbnM6IHtcbiAgICAgIGFzc29jaWF0ZVRhZz86IHN0cmluZztcbiAgICAgIHJlZj86IHN0cmluZztcbiAgICB9ID0ge31cbiAgKTogc3RyaW5nIHtcbiAgICBjb25zdCBiYXNlVXJsID0gJ2h0dHBzOi8vYW1hem9uLmNvLnVrL3MnO1xuICAgIGNvbnN0IHVybCA9IG5ldyBVUkwoYmFzZVVybCk7XG4gICAgXG4gICAgdXJsLnNlYXJjaFBhcmFtcy5zZXQoJ2snLCBzZWFyY2hUZXJtKTtcbiAgICB1cmwuc2VhcmNoUGFyYW1zLnNldCgndGFnJywgb3B0aW9ucy5hc3NvY2lhdGVUYWcgfHwgYW1hem9uQ29uZmlnLnVrLmFzc29jaWF0ZVRhZyk7XG4gICAgXG4gICAgaWYgKGNhdGVnb3J5ICYmIGFtYXpvbkNvbmZpZy5wcm9kdWN0Q2F0ZWdvcmllc1tjYXRlZ29yeV0pIHtcbiAgICAgIHVybC5zZWFyY2hQYXJhbXMuc2V0KCdpJywgYW1hem9uQ29uZmlnLnByb2R1Y3RDYXRlZ29yaWVzW2NhdGVnb3J5XSk7XG4gICAgfVxuICAgIFxuICAgIGlmIChvcHRpb25zLnJlZikge1xuICAgICAgdXJsLnNlYXJjaFBhcmFtcy5zZXQoJ3JlZicsIG9wdGlvbnMucmVmKTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIHVybC50b1N0cmluZygpO1xuICB9XG4gIFxuICAvKipcbiAgICogRXh0cmFjdHMgQVNJTiBmcm9tIEFtYXpvbiBwcm9kdWN0IFVSTFxuICAgKi9cbiAgc3RhdGljIGV4dHJhY3RBU0lOKHByb2R1Y3RVcmw6IHN0cmluZyk6IHN0cmluZyB8IG51bGwge1xuICAgIHRyeSB7XG4gICAgICAvLyBDb21tb24gQVNJTiBwYXR0ZXJucyBpbiBBbWF6b24gVVJMc1xuICAgICAgY29uc3QgYXNpblBhdHRlcm5zID0gW1xuICAgICAgICAvXFwvZHBcXC8oW0EtWjAtOV17MTB9KS8sXG4gICAgICAgIC9cXC9ncFxcL3Byb2R1Y3RcXC8oW0EtWjAtOV17MTB9KS8sXG4gICAgICAgIC9cXC9wcm9kdWN0XFwvKFtBLVowLTldezEwfSkvLFxuICAgICAgICAvXFwvQVNJTlxcLyhbQS1aMC05XXsxMH0pLyxcbiAgICAgICAgL2FzaW49KFtBLVowLTldezEwfSkvaSxcbiAgICAgIF07XG4gICAgICBcbiAgICAgIGZvciAoY29uc3QgcGF0dGVybiBvZiBhc2luUGF0dGVybnMpIHtcbiAgICAgICAgY29uc3QgbWF0Y2ggPSBwcm9kdWN0VXJsLm1hdGNoKHBhdHRlcm4pO1xuICAgICAgICBpZiAobWF0Y2ggJiYgbWF0Y2hbMV0pIHtcbiAgICAgICAgICByZXR1cm4gbWF0Y2hbMV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIFxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGV4dHJhY3RpbmcgQVNJTjonLCBlcnJvcik7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBWYWxpZGF0ZXMgaWYgYSBVUkwgaXMgYSB2YWxpZCBBbWF6b24gcHJvZHVjdCBVUkxcbiAgICovXG4gIHN0YXRpYyBpc1ZhbGlkQW1hem9uVXJsKHVybDogc3RyaW5nKTogYm9vbGVhbiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHVybE9iaiA9IG5ldyBVUkwodXJsKTtcbiAgICAgIGNvbnN0IHZhbGlkRG9tYWlucyA9IFtcbiAgICAgICAgJ2FtYXpvbi5jby51aycsXG4gICAgICAgICdhbWF6b24uY29tJyxcbiAgICAgICAgJ2FtYXpvbi5kZScsXG4gICAgICAgICdhbWF6b24uZnInLFxuICAgICAgICAnYW1hem9uLml0JyxcbiAgICAgICAgJ2FtYXpvbi5lcycsXG4gICAgICAgICdhbWF6b24uY2EnLFxuICAgICAgICAnYW1hem9uLmNvbS5hdScsXG4gICAgICAgICdhbWF6b24uY28uanAnLFxuICAgICAgXTtcbiAgICAgIFxuICAgICAgcmV0dXJuIHZhbGlkRG9tYWlucy5zb21lKGRvbWFpbiA9PiB1cmxPYmouaG9zdG5hbWUuaW5jbHVkZXMoZG9tYWluKSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBHZXRzIGNvbW1pc3Npb24gcmF0ZSBmb3IgYSBnaXZlbiBwcm9kdWN0IGNhdGVnb3J5XG4gICAqL1xuICBzdGF0aWMgZ2V0Q29tbWlzc2lvblJhdGUoY2F0ZWdvcnk6IHN0cmluZyk6IG51bWJlciB7XG4gICAgY29uc3Qgbm9ybWFsaXplZENhdGVnb3J5ID0gY2F0ZWdvcnkudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9cXHMrL2csICcnKTtcbiAgICBcbiAgICAvLyBNYXAgdG8gY29tbWlzc2lvbiByYXRlc1xuICAgIGNvbnN0IGNhdGVnb3J5TWFwcGluZ3M6IFJlY29yZDxzdHJpbmcsIGtleW9mIHR5cGVvZiBhbWF6b25Db25maWcuY29tbWlzc2lvblJhdGVzPiA9IHtcbiAgICAgICdlbGVjdHJvbmljcyc6ICdlbGVjdHJvbmljcycsXG4gICAgICAnZmFzaGlvbic6ICdmYXNoaW9uJyxcbiAgICAgICdjbG90aGluZyc6ICdmYXNoaW9uJyxcbiAgICAgICdob21lYW5kZ2FyZGVuJzogJ2hvbWVBbmRHYXJkZW4nLFxuICAgICAgJ2hvbWUnOiAnaG9tZUFuZEdhcmRlbicsXG4gICAgICAnZ2FyZGVuJzogJ2hvbWVBbmRHYXJkZW4nLFxuICAgICAgJ3Nwb3J0c2FuZG91dGRvb3JzJzogJ3Nwb3J0c0FuZE91dGRvb3JzJyxcbiAgICAgICdzcG9ydHMnOiAnc3BvcnRzQW5kT3V0ZG9vcnMnLFxuICAgICAgJ2Jvb2tzJzogJ2Jvb2tzJyxcbiAgICAgICd0b3lzJzogJ3RveXMnLFxuICAgICAgJ3RveXNnYW1lcyc6ICd0b3lzJyxcbiAgICAgICdnYW1lcyc6ICd0b3lzJyxcbiAgICAgICdiZWF1dHknOiAnYmVhdXR5QW5kUGVyc29uYWxDYXJlJyxcbiAgICAgICdiZWF1dHlhbmRwZXJzb25hbGNhcmUnOiAnYmVhdXR5QW5kUGVyc29uYWxDYXJlJyxcbiAgICAgICdwZXJzb25hbGNhcmUnOiAnYmVhdXR5QW5kUGVyc29uYWxDYXJlJyxcbiAgICAgICdhdXRvbW90aXZlJzogJ2F1dG9tb3RpdmUnLFxuICAgICAgJ2luZHVzdHJpYWwnOiAnaW5kdXN0cmlhbCcsXG4gICAgICAnb3V0ZG9vcic6ICdvdXRkb29yQW5kR2FyZGVuJyxcbiAgICB9O1xuICAgIFxuICAgIGNvbnN0IG1hcHBlZENhdGVnb3J5ID0gY2F0ZWdvcnlNYXBwaW5nc1tub3JtYWxpemVkQ2F0ZWdvcnldO1xuICAgIHJldHVybiBhbWF6b25Db25maWcuY29tbWlzc2lvblJhdGVzW21hcHBlZENhdGVnb3J5XSB8fCBhbWF6b25Db25maWcuY29tbWlzc2lvblJhdGVzLmRlZmF1bHQ7XG4gIH1cbn1cblxuLy8gVGhlbWUgY29uZmlndXJhdGlvblxuZXhwb3J0IGNvbnN0IHRoZW1lID0ge1xuICBjb2xvcnM6IHtcbiAgICBwcmltYXJ5OiAnI2YwM2RmZicsXG4gICAgc2Vjb25kYXJ5OiAnIzBlYTVlOScsXG4gICAgc3VjY2VzczogJyMyMmM1NWUnLFxuICAgIHdhcm5pbmc6ICcjZjU5ZTBiJyxcbiAgICBlcnJvcjogJyNlZjQ0NDQnLFxuICAgIG5ldXRyYWw6ICcjNzM3MzczJyxcbiAgfSxcbiAgXG4gIGJyZWFrcG9pbnRzOiB7XG4gICAgeHM6ICc0NzVweCcsXG4gICAgc206ICc2NDBweCcsXG4gICAgbWQ6ICc3NjhweCcsXG4gICAgbGc6ICcxMDI0cHgnLFxuICAgIHhsOiAnMTI4MHB4JyxcbiAgICAnMnhsJzogJzE1MzZweCcsXG4gICAgJzN4bCc6ICcxNjAwcHgnLFxuICB9LFxuICBcbiAgc3BhY2luZzoge1xuICAgIHhzOiAnNHB4JyxcbiAgICBzbTogJzhweCcsXG4gICAgbWQ6ICcxNnB4JyxcbiAgICBsZzogJzI0cHgnLFxuICAgIHhsOiAnMzJweCcsXG4gICAgJzJ4bCc6ICc0OHB4JyxcbiAgICAnM3hsJzogJzY0cHgnLFxuICB9LFxuICBcbiAgYm9yZGVyUmFkaXVzOiB7XG4gICAgc206ICc0cHgnLFxuICAgIG1kOiAnOHB4JyxcbiAgICBsZzogJzEycHgnLFxuICAgIHhsOiAnMTZweCcsXG4gICAgJzJ4bCc6ICcyNHB4JyxcbiAgICBmdWxsOiAnOTk5OXB4JyxcbiAgfSxcbiAgXG4gIHNoYWRvd3M6IHtcbiAgICBzbTogJzAgMXB4IDJweCAwIHJnYmEoMCwgMCwgMCwgMC4wNSknLFxuICAgIG1kOiAnMCA0cHggNnB4IC0xcHggcmdiYSgwLCAwLCAwLCAwLjEpJyxcbiAgICBsZzogJzAgMTBweCAxNXB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjEpJyxcbiAgICB4bDogJzAgMjBweCAyNXB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEpJyxcbiAgfSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbmZpZzsiXSwibmFtZXMiOlsiQWZmaWxpYXRlTGlua3NTZXJ2aWNlIiwiYW1hem9uQ29uZmlnIiwiYXBwQ29uZmlnIiwiY29uZmlnIiwiZW5kcG9pbnRzIiwidGhlbWUiLCJhcGlVcmwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfQVBJX1VSTCIsIndlYlVybCIsIk5FWFRfUFVCTElDX1dFQl9VUkwiLCJtaXhwYW5lbFRva2VuIiwiTkVYVF9QVUJMSUNfTUlYUEFORUxfVE9LRU4iLCJzZW50cnlEc24iLCJORVhUX1BVQkxJQ19TRU5UUllfRFNOIiwiZ29vZ2xlQW5hbHl0aWNzSWQiLCJORVhUX1BVQkxJQ19HQV9JRCIsInBvc3Rob2dLZXkiLCJORVhUX1BVQkxJQ19QT1NUSE9HX0tFWSIsInBvc3Rob2dIb3N0IiwiTkVYVF9QVUJMSUNfUE9TVEhPR19IT1NUIiwiaXNQcm9kdWN0aW9uIiwiTk9ERV9FTlYiLCJpc0RldmVsb3BtZW50IiwidmVyc2lvbiIsIm5wbV9wYWNrYWdlX3ZlcnNpb24iLCJhbWF6b25Bc3NvY2lhdGVUYWciLCJORVhUX1BVQkxJQ19BTUFaT05fQVNTT0NJQVRFX1RBRyIsImFtYXpvblJlZ2lvbiIsIk5FWFRfUFVCTElDX0FNQVpPTl9SRUdJT04iLCJhbWF6b25BcGlLZXkiLCJORVhUX1BVQkxJQ19BTUFaT05fQVBJX0tFWSIsImFtYXpvblNlY3JldEtleSIsIk5FWFRfUFVCTElDX0FNQVpPTl9TRUNSRVRfS0VZIiwiYXV0aCIsImxvZ2luIiwicmVnaXN0ZXIiLCJyZWZyZXNoIiwibG9nb3V0IiwibWUiLCJmb3Jnb3RQYXNzd29yZCIsInJlc2V0UGFzc3dvcmQiLCJ2ZXJpZnlFbWFpbCIsInVzZXJzIiwicHJvZmlsZSIsInVwZGF0ZVByb2ZpbGUiLCJwcmVmZXJlbmNlcyIsInN0YXRpc3RpY3MiLCJkZWxldGVBY2NvdW50IiwicHJvZHVjdHMiLCJsaXN0Iiwic2VhcmNoIiwiY2F0ZWdvcmllcyIsImZlYXR1cmVkIiwidHJlbmRpbmciLCJieUNhdGVnb3J5IiwiY2F0ZWdvcnlJZCIsImJ5SWQiLCJpZCIsInJlY29tbWVuZGF0aW9ucyIsInN3aXBlcyIsInNlc3Npb25zIiwiY3JlYXRlU2Vzc2lvbiIsImN1cnJlbnRTZXNzaW9uIiwiaW50ZXJhY3Rpb25zIiwic2Vzc2lvbklkIiwiYW5hbHl0aWNzIiwiZ2VuZXJhdGUiLCJmZWVkYmFjayIsImdpZnRMaW5rcyIsImNyZWF0ZSIsImJ5VG9rZW4iLCJ0b2tlbiIsImRlbGV0ZSIsInRyYWNrIiwiZXZlbnRzIiwiZGFzaGJvYXJkIiwiaGVhbHRoIiwibmFtZSIsImRlc2NyaXB0aW9uIiwidGFnbGluZSIsInN3aXBlIiwibWF4U3dpcGVzUGVyU2Vzc2lvbiIsInNlc3Npb25UaW1lb3V0IiwiY2FyZFByZWxvYWRDb3VudCIsImFuaW1hdGlvbkR1cmF0aW9uIiwidmVsb2NpdHlUaHJlc2hvbGQiLCJkaXN0YW5jZVRocmVzaG9sZCIsInBhZ2luYXRpb24iLCJkZWZhdWx0UGFnZVNpemUiLCJtYXhQYWdlU2l6ZSIsImltYWdlcyIsImRlZmF1bHRQcm9kdWN0SW1hZ2UiLCJkZWZhdWx0VXNlckF2YXRhciIsImRlZmF1bHRDYXRlZ29yeUljb24iLCJjbG91ZGluYXJ5QmFzZVVybCIsImFuaW1hdGlvbnMiLCJkZWZhdWx0RHVyYXRpb24iLCJkZWZhdWx0RWFzaW5nIiwicGFnZVRyYW5zaXRpb24iLCJ0b2FzdCIsInBvc2l0aW9uIiwic3RvcmFnZSIsImF1dGhUb2tlbiIsInJlZnJlc2hUb2tlbiIsInVzZXIiLCJyZWNlbnRTZWFyY2hlcyIsInZpZXdlZFByb2R1Y3RzIiwib25ib2FyZGluZ0NvbXBsZXRlZCIsImZlYXR1cmVzIiwic29jaWFsTG9naW4iLCJwdXNoTm90aWZpY2F0aW9ucyIsImRhcmtNb2RlIiwiYWZmaWxpYXRlTGlua3MiLCJhZmZpbGlhdGVUcmFja2luZyIsImJldGEiLCJ2b2ljZVNlYXJjaCIsImFyRmVhdHVyZXMiLCJjaGF0Ym90IiwiYW1hem9uQXBpSW50ZWdyYXRpb24iLCJ1cmxzIiwicHJpdmFjeVBvbGljeSIsInRlcm1zT2ZTZXJ2aWNlIiwiY29udGFjdFVzIiwiaGVscCIsImJsb2ciLCJjYXJlZXJzIiwicHJlc3NLaXQiLCJhcGlEb2NzIiwiYWZmaWxpYXRlRGlzY2xvc3VyZSIsImNvb2tpZVBvbGljeSIsInNvY2lhbCIsInR3aXR0ZXIiLCJmYWNlYm9vayIsImluc3RhZ3JhbSIsImxpbmtlZGluIiwieW91dHViZSIsImNvbnRhY3QiLCJlbWFpbCIsInN1cHBvcnQiLCJwcmVzcyIsInBhcnRuZXJzaGlwcyIsImFwcFN0b3JlIiwiaW9zIiwiYW5kcm9pZCIsInN1YnNjcmlwdGlvblRpZXJzIiwiZnJlZSIsInByaWNlIiwicHJlbWl1bSIsImVudGVycHJpc2UiLCJ2YWxpZGF0aW9uIiwicGFzc3dvcmQiLCJtaW5MZW5ndGgiLCJyZXF1aXJlVXBwZXJjYXNlIiwicmVxdWlyZUxvd2VyY2FzZSIsInJlcXVpcmVOdW1iZXJzIiwicmVxdWlyZVNwZWNpYWxDaGFycyIsInBhdHRlcm4iLCJtYXhMZW5ndGgiLCJlcnJvcnMiLCJuZXR3b3JrIiwic2VydmVyIiwidW5hdXRob3JpemVkIiwiZm9yYmlkZGVuIiwibm90Rm91bmQiLCJ1bmtub3duIiwic3VjY2VzcyIsInByb2ZpbGVVcGRhdGVkIiwicHJlZmVyZW5jZXNVcGRhdGVkIiwiZ2lmdExpbmtDcmVhdGVkIiwiZ2lmdExpbmtTaGFyZWQiLCJhZmZpbGlhdGVMaW5rR2VuZXJhdGVkIiwidWsiLCJhc3NvY2lhdGVUYWciLCJiYXNlVXJsIiwiYXBpSG9zdCIsIm1hcmtldHBsYWNlIiwicmVnaW9uIiwiY3VycmVuY3kiLCJsYW5ndWFnZSIsImNvbW1pc3Npb25SYXRlcyIsImVsZWN0cm9uaWNzIiwiZmFzaGlvbiIsImhvbWVBbmRHYXJkZW4iLCJzcG9ydHNBbmRPdXRkb29ycyIsImJvb2tzIiwidG95cyIsImJlYXV0eUFuZFBlcnNvbmFsQ2FyZSIsImF1dG9tb3RpdmUiLCJpbmR1c3RyaWFsIiwib3V0ZG9vckFuZEdhcmRlbiIsImRlZmF1bHQiLCJwcm9kdWN0Q2F0ZWdvcmllcyIsImFwaSIsInJlcXVlc3RzUGVyU2Vjb25kIiwidGltZW91dE1zIiwicmV0cnlBdHRlbXB0cyIsInJldHJ5RGVsYXlNcyIsInRyYWNraW5nIiwiZW5hYmxlQ29udmVyc2lvblRyYWNraW5nIiwiZW5hYmxlQ2xpY2tUcmFja2luZyIsImVuYWJsZUltcHJlc3Npb25UcmFja2luZyIsInNlc3Npb25UaW1lb3V0TWludXRlcyIsImF0dHJpYnV0aW9uV2luZG93RGF5cyIsImdlbmVyYXRlQWZmaWxpYXRlTGluayIsInByb2R1Y3RVcmwiLCJvcHRpb25zIiwidXJsIiwiVVJMIiwiaG9zdG5hbWUiLCJpbmNsdWRlcyIsInNlYXJjaFBhcmFtcyIsInNldCIsInJlZiIsImNhbXBhaWduIiwibWVkaXVtIiwic291cmNlIiwiRGF0ZSIsIm5vdyIsInRvU3RyaW5nIiwiZXJyb3IiLCJjb25zb2xlIiwiZ2VuZXJhdGVTZWFyY2hMaW5rIiwic2VhcmNoVGVybSIsImNhdGVnb3J5IiwiZXh0cmFjdEFTSU4iLCJhc2luUGF0dGVybnMiLCJtYXRjaCIsImlzVmFsaWRBbWF6b25VcmwiLCJ1cmxPYmoiLCJ2YWxpZERvbWFpbnMiLCJzb21lIiwiZG9tYWluIiwiZ2V0Q29tbWlzc2lvblJhdGUiLCJub3JtYWxpemVkQ2F0ZWdvcnkiLCJ0b0xvd2VyQ2FzZSIsInJlcGxhY2UiLCJjYXRlZ29yeU1hcHBpbmdzIiwibWFwcGVkQ2F0ZWdvcnkiLCJjb2xvcnMiLCJwcmltYXJ5Iiwic2Vjb25kYXJ5Iiwid2FybmluZyIsIm5ldXRyYWwiLCJicmVha3BvaW50cyIsInhzIiwic20iLCJtZCIsImxnIiwieGwiLCJzcGFjaW5nIiwiYm9yZGVyUmFkaXVzIiwiZnVsbCIsInNoYWRvd3MiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQXVCQzs7Ozs7Ozs7Ozs7SUEyYVlBLHFCQUFxQjtlQUFyQkE7O0lBdkVBQyxZQUFZO2VBQVpBOztJQWhNQUMsU0FBUztlQUFUQTs7SUFySkFDLE1BQU07ZUFBTkE7O0lBa25CYixPQUFzQjtlQUF0Qjs7SUExa0JhQyxTQUFTO2VBQVRBOztJQTJoQkFDLEtBQUs7ZUFBTEE7OztBQW5rQk4sTUFBTUYsU0FBNEI7SUFDdkMsb0JBQW9CO0lBQ3BCRyxRQUFRQyxRQUFRQyxHQUFHLENBQUNDLG1CQUFtQixJQUFJO0lBQzNDQyxRQUFRSCxRQUFRQyxHQUFHLENBQUNHLG1CQUFtQixJQUFJO0lBRTNDLHdDQUF3QztJQUN4Q0MsZUFBZUwsUUFBUUMsR0FBRyxDQUFDSywwQkFBMEI7SUFDckRDLFdBQVdQLFFBQVFDLEdBQUcsQ0FBQ08sc0JBQXNCO0lBQzdDQyxtQkFBbUJULFFBQVFDLEdBQUcsQ0FBQ1MsaUJBQWlCO0lBQ2hEQyxZQUFZWCxRQUFRQyxHQUFHLENBQUNXLHVCQUF1QjtJQUMvQ0MsYUFBYWIsUUFBUUMsR0FBRyxDQUFDYSx3QkFBd0I7SUFFakQsd0JBQXdC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