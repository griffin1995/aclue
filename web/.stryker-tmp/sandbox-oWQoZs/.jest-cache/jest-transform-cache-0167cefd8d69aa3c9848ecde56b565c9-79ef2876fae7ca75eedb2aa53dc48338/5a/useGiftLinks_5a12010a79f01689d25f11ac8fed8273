715a414408268ecc2f22f46e3ffe4af6
"use strict";

/* istanbul ignore next */
function cov_2i1zk0uqb1() {
  var path = "/home/jack/Documents/aclue-preprod/web/src/hooks/useGiftLinks.ts";
  var hash = "ccab5141e7e33311b3fdecf5df0ce6b4481b2ce5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/jack/Documents/aclue-preprod/web/src/hooks/useGiftLinks.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 28
        }
      },
      "3": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 31
        }
      },
      "4": {
        start: {
          line: 12,
          column: 13
        },
        end: {
          line: 12,
          column: 34
        }
      },
      "5": {
        start: {
          line: 14,
          column: 38
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "6": {
        start: {
          line: 15,
          column: 38
        },
        end: {
          line: 15,
          column: 65
        }
      },
      "7": {
        start: {
          line: 16,
          column: 30
        },
        end: {
          line: 16,
          column: 56
        }
      },
      "8": {
        start: {
          line: 17,
          column: 27
        },
        end: {
          line: 35,
          column: 10
        }
      },
      "9": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 27
        }
      },
      "10": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 23
        }
      },
      "11": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "12": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 21,
          column: 66
        }
      },
      "13": {
        start: {
          line: 22,
          column: 32
        },
        end: {
          line: 22,
          column: 49
        }
      },
      "14": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 26,
          column: 19
        }
      },
      "15": {
        start: {
          line: 23,
          column: 33
        },
        end: {
          line: 26,
          column: 17
        }
      },
      "16": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 31
        }
      },
      "17": {
        start: {
          line: 29,
          column: 33
        },
        end: {
          line: 29,
          column: 98
        }
      },
      "18": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 35
        }
      },
      "19": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 42
        }
      },
      "20": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 32
        }
      },
      "21": {
        start: {
          line: 36,
          column: 27
        },
        end: {
          line: 51,
          column: 10
        }
      },
      "22": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 27
        }
      },
      "23": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 23
        }
      },
      "24": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "25": {
        start: {
          line: 40,
          column: 29
        },
        end: {
          line: 40,
          column: 70
        }
      },
      "26": {
        start: {
          line: 41,
          column: 36
        },
        end: {
          line: 41,
          column: 53
        }
      },
      "27": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 92
        }
      },
      "28": {
        start: {
          line: 42,
          column: 33
        },
        end: {
          line: 42,
          column: 90
        }
      },
      "29": {
        start: {
          line: 42,
          column: 50
        },
        end: {
          line: 42,
          column: 89
        }
      },
      "30": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 35
        }
      },
      "31": {
        start: {
          line: 45,
          column: 33
        },
        end: {
          line: 45,
          column: 98
        }
      },
      "32": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 35
        }
      },
      "33": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 42
        }
      },
      "34": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 32
        }
      },
      "35": {
        start: {
          line: 52,
          column: 27
        },
        end: {
          line: 65,
          column: 10
        }
      },
      "36": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 27
        }
      },
      "37": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 23
        }
      },
      "38": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "39": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 48
        }
      },
      "40": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 70
        }
      },
      "41": {
        start: {
          line: 57,
          column: 33
        },
        end: {
          line: 57,
          column: 68
        }
      },
      "42": {
        start: {
          line: 57,
          column: 53
        },
        end: {
          line: 57,
          column: 67
        }
      },
      "43": {
        start: {
          line: 59,
          column: 33
        },
        end: {
          line: 59,
          column: 98
        }
      },
      "44": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 35
        }
      },
      "45": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 42
        }
      },
      "46": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 32
        }
      },
      "47": {
        start: {
          line: 66,
          column: 24
        },
        end: {
          line: 79,
          column: 10
        }
      },
      "48": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 27
        }
      },
      "49": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 23
        }
      },
      "50": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "51": {
        start: {
          line: 70,
          column: 29
        },
        end: {
          line: 70,
          column: 71
        }
      },
      "52": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 37
        }
      },
      "53": {
        start: {
          line: 73,
          column: 33
        },
        end: {
          line: 73,
          column: 96
        }
      },
      "54": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 35
        }
      },
      "55": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 42
        }
      },
      "56": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 32
        }
      },
      "57": {
        start: {
          line: 80,
          column: 30
        },
        end: {
          line: 92,
          column: 10
        }
      },
      "58": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 27
        }
      },
      "59": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 23
        }
      },
      "60": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "61": {
        start: {
          line: 84,
          column: 29
        },
        end: {
          line: 84,
          column: 72
        }
      },
      "62": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 45
        }
      },
      "63": {
        start: {
          line: 87,
          column: 33
        },
        end: {
          line: 87,
          column: 97
        }
      },
      "64": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 35
        }
      },
      "65": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 32
        }
      },
      "66": {
        start: {
          line: 93,
          column: 24
        },
        end: {
          line: 96,
          column: 10
        }
      },
      "67": {
        start: {
          line: 94,
          column: 24
        },
        end: {
          line: 94,
          column: 78
        }
      },
      "68": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 51
        }
      },
      "69": {
        start: {
          line: 97,
          column: 26
        },
        end: {
          line: 136,
          column: 6
        }
      },
      "70": {
        start: {
          line: 98,
          column: 25
        },
        end: {
          line: 98,
          column: 46
        }
      },
      "71": {
        start: {
          line: 99,
          column: 31
        },
        end: {
          line: 99,
          column: 113
        }
      },
      "72": {
        start: {
          line: 100,
          column: 24
        },
        end: {
          line: 100,
          column: 57
        }
      },
      "73": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "74": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 128,
          column: 13
        }
      },
      "75": {
        start: {
          line: 104,
          column: 20
        },
        end: {
          line: 104,
          column: 183
        }
      },
      "76": {
        start: {
          line: 105,
          column: 20
        },
        end: {
          line: 105,
          column: 26
        }
      },
      "77": {
        start: {
          line: 107,
          column: 37
        },
        end: {
          line: 107,
          column: 102
        }
      },
      "78": {
        start: {
          line: 108,
          column: 20
        },
        end: {
          line: 108,
          column: 185
        }
      },
      "79": {
        start: {
          line: 109,
          column: 20
        },
        end: {
          line: 109,
          column: 26
        }
      },
      "80": {
        start: {
          line: 111,
          column: 20
        },
        end: {
          line: 111,
          column: 153
        }
      },
      "81": {
        start: {
          line: 112,
          column: 20
        },
        end: {
          line: 112,
          column: 26
        }
      },
      "82": {
        start: {
          line: 114,
          column: 20
        },
        end: {
          line: 114,
          column: 113
        }
      },
      "83": {
        start: {
          line: 115,
          column: 20
        },
        end: {
          line: 115,
          column: 26
        }
      },
      "84": {
        start: {
          line: 117,
          column: 36
        },
        end: {
          line: 117,
          column: 70
        }
      },
      "85": {
        start: {
          line: 118,
          column: 33
        },
        end: {
          line: 118,
          column: 80
        }
      },
      "86": {
        start: {
          line: 119,
          column: 20
        },
        end: {
          line: 119,
          column: 75
        }
      },
      "87": {
        start: {
          line: 120,
          column: 20
        },
        end: {
          line: 120,
          column: 26
        }
      },
      "88": {
        start: {
          line: 122,
          column: 20
        },
        end: {
          line: 122,
          column: 66
        }
      },
      "89": {
        start: {
          line: 123,
          column: 20
        },
        end: {
          line: 123,
          column: 26
        }
      },
      "90": {
        start: {
          line: 125,
          column: 20
        },
        end: {
          line: 125,
          column: 26
        }
      },
      "91": {
        start: {
          line: 127,
          column: 20
        },
        end: {
          line: 127,
          column: 81
        }
      },
      "92": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 58
        }
      },
      "93": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 127
        }
      },
      "94": {
        start: {
          line: 137,
          column: 27
        },
        end: {
          line: 152,
          column: 6
        }
      },
      "95": {
        start: {
          line: 138,
          column: 25
        },
        end: {
          line: 138,
          column: 46
        }
      },
      "96": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "97": {
        start: {
          line: 141,
          column: 29
        },
        end: {
          line: 141,
          column: 92
        }
      },
      "98": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 144,
          column: 13
        }
      },
      "99": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 143,
          column: 62
        }
      },
      "100": {
        start: {
          line: 145,
          column: 25
        },
        end: {
          line: 145,
          column: 46
        }
      },
      "101": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 45
        }
      },
      "102": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 115
        }
      },
      "103": {
        start: {
          line: 153,
          column: 27
        },
        end: {
          line: 163,
          column: 10
        }
      },
      "104": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "105": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 158,
          column: 15
        }
      },
      "106": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 60
        }
      },
      "107": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 177,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "useGiftLinks",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 21
          }
        },
        loc: {
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 178,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 51
          },
          end: {
            line: 17,
            column: 52
          }
        },
        loc: {
          start: {
            line: 17,
            column: 65
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 25
          },
          end: {
            line: 23,
            column: 26
          }
        },
        loc: {
          start: {
            line: 23,
            column: 33
          },
          end: {
            line: 26,
            column: 17
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 36,
            column: 51
          },
          end: {
            line: 36,
            column: 52
          }
        },
        loc: {
          start: {
            line: 36,
            column: 69
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 36
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 42,
            column: 25
          },
          end: {
            line: 42,
            column: 26
          }
        },
        loc: {
          start: {
            line: 42,
            column: 33
          },
          end: {
            line: 42,
            column: 90
          }
        },
        line: 42
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 42,
            column: 42
          },
          end: {
            line: 42,
            column: 43
          }
        },
        loc: {
          start: {
            line: 42,
            column: 50
          },
          end: {
            line: 42,
            column: 89
          }
        },
        line: 42
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 52,
            column: 51
          },
          end: {
            line: 52,
            column: 52
          }
        },
        loc: {
          start: {
            line: 52,
            column: 63
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 52
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 57,
            column: 25
          },
          end: {
            line: 57,
            column: 26
          }
        },
        loc: {
          start: {
            line: 57,
            column: 33
          },
          end: {
            line: 57,
            column: 68
          }
        },
        line: 57
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 57,
            column: 45
          },
          end: {
            line: 57,
            column: 46
          }
        },
        loc: {
          start: {
            line: 57,
            column: 53
          },
          end: {
            line: 57,
            column: 67
          }
        },
        line: 57
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 66,
            column: 48
          },
          end: {
            line: 66,
            column: 49
          }
        },
        loc: {
          start: {
            line: 66,
            column: 63
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 66
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 80,
            column: 54
          },
          end: {
            line: 80,
            column: 55
          }
        },
        loc: {
          start: {
            line: 80,
            column: 64
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 80
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 93,
            column: 48
          },
          end: {
            line: 93,
            column: 49
          }
        },
        loc: {
          start: {
            line: 93,
            column: 60
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 93
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 97,
            column: 50
          },
          end: {
            line: 97,
            column: 51
          }
        },
        loc: {
          start: {
            line: 97,
            column: 77
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 97
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 137,
            column: 51
          },
          end: {
            line: 137,
            column: 52
          }
        },
        loc: {
          start: {
            line: 137,
            column: 69
          },
          end: {
            line: 150,
            column: 5
          }
        },
        line: 137
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 153,
            column: 51
          },
          end: {
            line: 153,
            column: 52
          }
        },
        loc: {
          start: {
            line: 153,
            column: 73
          },
          end: {
            line: 163,
            column: 5
          }
        },
        line: 153
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 33
          },
          end: {
            line: 29,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 56
          },
          end: {
            line: 29,
            column: 67
          }
        }, {
          start: {
            line: 29,
            column: 70
          },
          end: {
            line: 29,
            column: 98
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 42,
            column: 50
          },
          end: {
            line: 42,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 42,
            column: 67
          },
          end: {
            line: 42,
            column: 82
          }
        }, {
          start: {
            line: 42,
            column: 85
          },
          end: {
            line: 42,
            column: 89
          }
        }],
        line: 42
      },
      "2": {
        loc: {
          start: {
            line: 45,
            column: 33
          },
          end: {
            line: 45,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 56
          },
          end: {
            line: 45,
            column: 67
          }
        }, {
          start: {
            line: 45,
            column: 70
          },
          end: {
            line: 45,
            column: 98
          }
        }],
        line: 45
      },
      "3": {
        loc: {
          start: {
            line: 59,
            column: 33
          },
          end: {
            line: 59,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 59,
            column: 56
          },
          end: {
            line: 59,
            column: 67
          }
        }, {
          start: {
            line: 59,
            column: 70
          },
          end: {
            line: 59,
            column: 98
          }
        }],
        line: 59
      },
      "4": {
        loc: {
          start: {
            line: 73,
            column: 33
          },
          end: {
            line: 73,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 56
          },
          end: {
            line: 73,
            column: 67
          }
        }, {
          start: {
            line: 73,
            column: 70
          },
          end: {
            line: 73,
            column: 96
          }
        }],
        line: 73
      },
      "5": {
        loc: {
          start: {
            line: 87,
            column: 33
          },
          end: {
            line: 87,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 87,
            column: 56
          },
          end: {
            line: 87,
            column: 67
          }
        }, {
          start: {
            line: 87,
            column: 70
          },
          end: {
            line: 87,
            column: 97
          }
        }],
        line: 87
      },
      "6": {
        loc: {
          start: {
            line: 94,
            column: 24
          },
          end: {
            line: 94,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 24
          },
          end: {
            line: 94,
            column: 55
          }
        }, {
          start: {
            line: 94,
            column: 59
          },
          end: {
            line: 94,
            column: 78
          }
        }],
        line: 94
      },
      "7": {
        loc: {
          start: {
            line: 100,
            column: 24
          },
          end: {
            line: 100,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 24
          },
          end: {
            line: 100,
            column: 39
          }
        }, {
          start: {
            line: 100,
            column: 43
          },
          end: {
            line: 100,
            column: 57
          }
        }],
        line: 100
      },
      "8": {
        loc: {
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 128,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 103,
            column: 16
          },
          end: {
            line: 105,
            column: 26
          }
        }, {
          start: {
            line: 106,
            column: 16
          },
          end: {
            line: 109,
            column: 26
          }
        }, {
          start: {
            line: 110,
            column: 16
          },
          end: {
            line: 112,
            column: 26
          }
        }, {
          start: {
            line: 113,
            column: 16
          },
          end: {
            line: 115,
            column: 26
          }
        }, {
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 120,
            column: 26
          }
        }, {
          start: {
            line: 121,
            column: 16
          },
          end: {
            line: 123,
            column: 26
          }
        }, {
          start: {
            line: 124,
            column: 16
          },
          end: {
            line: 125,
            column: 26
          }
        }, {
          start: {
            line: 126,
            column: 16
          },
          end: {
            line: 127,
            column: 81
          }
        }],
        line: 102
      },
      "9": {
        loc: {
          start: {
            line: 107,
            column: 37
          },
          end: {
            line: 107,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 107,
            column: 56
          },
          end: {
            line: 107,
            column: 97
          }
        }, {
          start: {
            line: 107,
            column: 100
          },
          end: {
            line: 107,
            column: 102
          }
        }],
        line: 107
      },
      "10": {
        loc: {
          start: {
            line: 132,
            column: 71
          },
          end: {
            line: 132,
            column: 123
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 132,
            column: 94
          },
          end: {
            line: 132,
            column: 105
          }
        }, {
          start: {
            line: 132,
            column: 108
          },
          end: {
            line: 132,
            column: 123
          }
        }],
        line: 132
      },
      "11": {
        loc: {
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 144,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 144,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "12": {
        loc: {
          start: {
            line: 148,
            column: 59
          },
          end: {
            line: 148,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 148,
            column: 82
          },
          end: {
            line: 148,
            column: 93
          }
        }, {
          start: {
            line: 148,
            column: 96
          },
          end: {
            line: 148,
            column: 111
          }
        }],
        line: 148
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0, 0, 0, 0, 0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/jack/Documents/aclue-preprod/web/src/hooks/useGiftLinks.ts"],
      sourcesContent: ["import { useState, useCallback } from 'react';\nimport { api } from '@/lib/api';\n\nexport interface GiftLink {\n  id: string;\n  token: string;\n  title: string;\n  description: string;\n  userId: string;\n  products: Product[];\n  preferences: any;\n  isPublic: boolean;\n  expiresAt?: Date;\n  createdAt: Date;\n  updatedAt: Date;\n  analytics: {\n    views: number;\n    clicks: number;\n    shares: number;\n    conversions: number;\n  };\n  customization: {\n    theme: 'default' | 'minimal' | 'festive' | 'elegant';\n    backgroundColor: string;\n    accentColor: string;\n    showBranding: boolean;\n  };\n}\n\nexport interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  currency: string;\n  imageUrl: string;\n  affiliateUrl: string;\n  brand: string;\n  category: string;\n  rating?: number;\n  reviewCount?: number;\n}\n\nexport interface CreateGiftLinkRequest {\n  title: string;\n  description?: string;\n  product_ids: string[];\n  preferences?: any;\n  isPublic?: boolean;\n  expiresAt?: Date;\n  customization?: Partial<GiftLink['customization']>;\n}\n\nexport interface ShareOptions {\n  platform: 'facebook' | 'twitter' | 'linkedin' | 'whatsapp' | 'email' | 'copy' | 'qr';\n  message?: string;\n  hashtags?: string[];\n}\n\ninterface UseGiftLinksReturn {\n  giftLinks: GiftLink[];\n  isLoading: boolean;\n  error: string | null;\n  createGiftLink: (data: CreateGiftLinkRequest) => Promise<GiftLink>;\n  updateGiftLink: (id: string, data: Partial<GiftLink>) => Promise<GiftLink>;\n  deleteGiftLink: (id: string) => Promise<void>;\n  getGiftLink: (token: string) => Promise<GiftLink>;\n  shareGiftLink: (giftLink: GiftLink, options: ShareOptions) => Promise<void>;\n  generateQRCode: (giftLink: GiftLink) => Promise<string>;\n  trackAnalytics: (token: string, event: 'view' | 'click' | 'share' | 'conversion') => Promise<void>;\n  getShareUrl: (giftLink: GiftLink) => string;\n  loadUserGiftLinks: () => Promise<void>;\n}\n\nexport function useGiftLinks(): UseGiftLinksReturn {\n  const [giftLinks, setGiftLinks] = useState<GiftLink[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const createGiftLink = useCallback(async (data: CreateGiftLinkRequest): Promise<GiftLink> => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await api.giftLinks.create(data);\n      const newGiftLink = response.giftLink;\n      \n      setGiftLinks(prev => [newGiftLink, ...prev]);\n      return newGiftLink;\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to create gift link';\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const updateGiftLink = useCallback(async (id: string, data: Partial<GiftLink>): Promise<GiftLink> => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await api.giftLinks.update(id, data);\n      const updatedGiftLink = response.giftLink;\n      \n      setGiftLinks(prev =>\n        prev.map(link => link.id === id ? updatedGiftLink : link)\n      );\n      \n      return updatedGiftLink;\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to update gift link';\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const deleteGiftLink = useCallback(async (id: string): Promise<void> => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      await api.giftLinks.delete(id);\n      setGiftLinks(prev => prev.filter(link => link.id !== id));\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to delete gift link';\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const getGiftLink = useCallback(async (token: string): Promise<GiftLink> => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await api.giftLinks.getByToken(token);\n      return response.giftLink;\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to load gift link';\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const loadUserGiftLinks = useCallback(async (): Promise<void> => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await api.giftLinks.getUserGiftLinks();\n      setGiftLinks(response.giftLinks);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to load gift links';\n      setError(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const getShareUrl = useCallback((giftLink: GiftLink): string => {\n    const baseUrl = process.env.NEXT_PUBLIC_WEB_URL || 'https://aclue.app';\n    return `${baseUrl}/gift/${giftLink.token}`;\n  }, []);\n\n  const shareGiftLink = useCallback(async (giftLink: GiftLink, options: ShareOptions): Promise<void> => {\n    const shareUrl = getShareUrl(giftLink);\n    const defaultMessage = `Check out these amazing gift recommendations I found on aclue: ${giftLink.title}`;\n    const message = options.message || defaultMessage;\n\n    try {\n      switch (options.platform) {\n        case 'facebook':\n          window.open(\n            `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(shareUrl)}&quote=${encodeURIComponent(message)}`,\n            '_blank',\n            'width=600,height=400'\n          );\n          break;\n\n        case 'twitter':\n          const hashtags = options.hashtags ? `&hashtags=${options.hashtags.join(',')}` : '';\n          window.open(\n            `https://twitter.com/intent/tweet?url=${encodeURIComponent(shareUrl)}&text=${encodeURIComponent(message)}${hashtags}`,\n            '_blank',\n            'width=600,height=400'\n          );\n          break;\n\n        case 'linkedin':\n          window.open(\n            `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(shareUrl)}`,\n            '_blank',\n            'width=600,height=400'\n          );\n          break;\n\n        case 'whatsapp':\n          window.open(\n            `https://wa.me/?text=${encodeURIComponent(`${message} ${shareUrl}`)}`,\n            '_blank'\n          );\n          break;\n\n        case 'email':\n          const subject = encodeURIComponent(giftLink.title);\n          const body = encodeURIComponent(`${message}\\n\\n${shareUrl}`);\n          window.open(`mailto:?subject=${subject}&body=${body}`);\n          break;\n\n        case 'copy':\n          await navigator.clipboard.writeText(shareUrl);\n          break;\n\n        case 'qr':\n          // QR code sharing handled separately\n          break;\n\n        default:\n          throw new Error(`Unsupported platform: ${options.platform}`);\n      }\n\n      // Track share analytics\n      await trackAnalytics(giftLink.token, 'share');\n    } catch (err) {\n      throw new Error(`Failed to share on ${options.platform}: ${err instanceof Error ? err.message : 'Unknown error'}`);\n    }\n  }, [getShareUrl]);\n\n  const generateQRCode = useCallback(async (giftLink: GiftLink): Promise<string> => {\n    const shareUrl = getShareUrl(giftLink);\n    \n    try {\n      // Use a QR code generation service or library\n      const response = await fetch(`/api/qr-code?url=${encodeURIComponent(shareUrl)}`);\n      if (!response.ok) {\n        throw new Error('Failed to generate QR code');\n      }\n      \n      const blob = await response.blob();\n      return URL.createObjectURL(blob);\n    } catch (err) {\n      throw new Error(`Failed to generate QR code: ${err instanceof Error ? err.message : 'Unknown error'}`);\n    }\n  }, [getShareUrl]);\n\n  const trackAnalytics = useCallback(async (token: string, event: 'view' | 'click' | 'share' | 'conversion'): Promise<void> => {\n    try {\n      await api.giftLinks.trackAnalytics(token, { event, timestamp: new Date() });\n    } catch (err) {\n      // Silently fail analytics tracking\n      console.warn('Failed to track analytics:', err);\n    }\n  }, []);\n\n  return {\n    giftLinks,\n    isLoading,\n    error,\n    createGiftLink,\n    updateGiftLink,\n    deleteGiftLink,\n    getGiftLink,\n    shareGiftLink,\n    generateQRCode,\n    trackAnalytics,\n    getShareUrl,\n    loadUserGiftLinks,\n  };\n}"],
      names: ["useGiftLinks", "giftLinks", "setGiftLinks", "useState", "isLoading", "setIsLoading", "error", "setError", "createGiftLink", "useCallback", "data", "response", "api", "create", "newGiftLink", "giftLink", "prev", "err", "errorMessage", "Error", "message", "updateGiftLink", "id", "update", "updatedGiftLink", "map", "link", "deleteGiftLink", "delete", "filter", "getGiftLink", "token", "getByToken", "loadUserGiftLinks", "getUserGiftLinks", "getShareUrl", "baseUrl", "process", "env", "NEXT_PUBLIC_WEB_URL", "shareGiftLink", "options", "shareUrl", "defaultMessage", "title", "platform", "window", "open", "encodeURIComponent", "hashtags", "join", "subject", "body", "navigator", "clipboard", "writeText", "trackAnalytics", "generateQRCode", "fetch", "ok", "blob", "URL", "createObjectURL", "event", "timestamp", "Date", "console", "warn"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ccab5141e7e33311b3fdecf5df0ce6b4481b2ce5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2i1zk0uqb1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2i1zk0uqb1();
cov_2i1zk0uqb1().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2i1zk0uqb1().s[1]++;
Object.defineProperty(exports, "useGiftLinks", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2i1zk0uqb1().f[0]++;
    cov_2i1zk0uqb1().s[2]++;
    return useGiftLinks;
  }
});
const _react =
/* istanbul ignore next */
(cov_2i1zk0uqb1().s[3]++, require("react"));
const _api =
/* istanbul ignore next */
(cov_2i1zk0uqb1().s[4]++, require("../lib/api"));
function useGiftLinks() {
  /* istanbul ignore next */
  cov_2i1zk0uqb1().f[1]++;
  const [giftLinks, setGiftLinks] =
  /* istanbul ignore next */
  (cov_2i1zk0uqb1().s[5]++, (0, _react.useState)([]));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_2i1zk0uqb1().s[6]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_2i1zk0uqb1().s[7]++, (0, _react.useState)(null));
  const createGiftLink =
  /* istanbul ignore next */
  (cov_2i1zk0uqb1().s[8]++, (0, _react.useCallback)(async data => {
    /* istanbul ignore next */
    cov_2i1zk0uqb1().f[2]++;
    cov_2i1zk0uqb1().s[9]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_2i1zk0uqb1().s[10]++;
    setError(null);
    /* istanbul ignore next */
    cov_2i1zk0uqb1().s[11]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().s[12]++, await _api.api.giftLinks.create(data));
      const newGiftLink =
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().s[13]++, response.giftLink);
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[14]++;
      setGiftLinks(prev => {
        /* istanbul ignore next */
        cov_2i1zk0uqb1().f[3]++;
        cov_2i1zk0uqb1().s[15]++;
        return [newGiftLink, ...prev];
      });
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[16]++;
      return newGiftLink;
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().s[17]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().b[0][0]++, err.message) :
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().b[0][1]++, "Failed to create gift link"));
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[18]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[19]++;
      throw new Error(errorMessage);
    } finally {
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[20]++;
      setIsLoading(false);
    }
  }, []));
  const updateGiftLink =
  /* istanbul ignore next */
  (cov_2i1zk0uqb1().s[21]++, (0, _react.useCallback)(async (id, data) => {
    /* istanbul ignore next */
    cov_2i1zk0uqb1().f[4]++;
    cov_2i1zk0uqb1().s[22]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_2i1zk0uqb1().s[23]++;
    setError(null);
    /* istanbul ignore next */
    cov_2i1zk0uqb1().s[24]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().s[25]++, await _api.api.giftLinks.update(id, data));
      const updatedGiftLink =
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().s[26]++, response.giftLink);
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[27]++;
      setGiftLinks(prev => {
        /* istanbul ignore next */
        cov_2i1zk0uqb1().f[5]++;
        cov_2i1zk0uqb1().s[28]++;
        return prev.map(link => {
          /* istanbul ignore next */
          cov_2i1zk0uqb1().f[6]++;
          cov_2i1zk0uqb1().s[29]++;
          return link.id === id ?
          /* istanbul ignore next */
          (cov_2i1zk0uqb1().b[1][0]++, updatedGiftLink) :
          /* istanbul ignore next */
          (cov_2i1zk0uqb1().b[1][1]++, link);
        });
      });
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[30]++;
      return updatedGiftLink;
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().s[31]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().b[2][0]++, err.message) :
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().b[2][1]++, "Failed to update gift link"));
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[32]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[33]++;
      throw new Error(errorMessage);
    } finally {
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[34]++;
      setIsLoading(false);
    }
  }, []));
  const deleteGiftLink =
  /* istanbul ignore next */
  (cov_2i1zk0uqb1().s[35]++, (0, _react.useCallback)(async id => {
    /* istanbul ignore next */
    cov_2i1zk0uqb1().f[7]++;
    cov_2i1zk0uqb1().s[36]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_2i1zk0uqb1().s[37]++;
    setError(null);
    /* istanbul ignore next */
    cov_2i1zk0uqb1().s[38]++;
    try {
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[39]++;
      await _api.api.giftLinks.delete(id);
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[40]++;
      setGiftLinks(prev => {
        /* istanbul ignore next */
        cov_2i1zk0uqb1().f[8]++;
        cov_2i1zk0uqb1().s[41]++;
        return prev.filter(link => {
          /* istanbul ignore next */
          cov_2i1zk0uqb1().f[9]++;
          cov_2i1zk0uqb1().s[42]++;
          return link.id !== id;
        });
      });
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().s[43]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().b[3][0]++, err.message) :
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().b[3][1]++, "Failed to delete gift link"));
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[44]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[45]++;
      throw new Error(errorMessage);
    } finally {
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[46]++;
      setIsLoading(false);
    }
  }, []));
  const getGiftLink =
  /* istanbul ignore next */
  (cov_2i1zk0uqb1().s[47]++, (0, _react.useCallback)(async token => {
    /* istanbul ignore next */
    cov_2i1zk0uqb1().f[10]++;
    cov_2i1zk0uqb1().s[48]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_2i1zk0uqb1().s[49]++;
    setError(null);
    /* istanbul ignore next */
    cov_2i1zk0uqb1().s[50]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().s[51]++, await _api.api.giftLinks.getByToken(token));
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[52]++;
      return response.giftLink;
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().s[53]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().b[4][0]++, err.message) :
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().b[4][1]++, "Failed to load gift link"));
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[54]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[55]++;
      throw new Error(errorMessage);
    } finally {
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[56]++;
      setIsLoading(false);
    }
  }, []));
  const loadUserGiftLinks =
  /* istanbul ignore next */
  (cov_2i1zk0uqb1().s[57]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_2i1zk0uqb1().f[11]++;
    cov_2i1zk0uqb1().s[58]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_2i1zk0uqb1().s[59]++;
    setError(null);
    /* istanbul ignore next */
    cov_2i1zk0uqb1().s[60]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().s[61]++, await _api.api.giftLinks.getUserGiftLinks());
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[62]++;
      setGiftLinks(response.giftLinks);
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().s[63]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().b[5][0]++, err.message) :
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().b[5][1]++, "Failed to load gift links"));
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[64]++;
      setError(errorMessage);
    } finally {
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[65]++;
      setIsLoading(false);
    }
  }, []));
  const getShareUrl =
  /* istanbul ignore next */
  (cov_2i1zk0uqb1().s[66]++, (0, _react.useCallback)(giftLink => {
    /* istanbul ignore next */
    cov_2i1zk0uqb1().f[12]++;
    const baseUrl =
    /* istanbul ignore next */
    (cov_2i1zk0uqb1().s[67]++,
    /* istanbul ignore next */
    (cov_2i1zk0uqb1().b[6][0]++, process.env.NEXT_PUBLIC_WEB_URL) ||
    /* istanbul ignore next */
    (cov_2i1zk0uqb1().b[6][1]++, "https://aclue.app"));
    /* istanbul ignore next */
    cov_2i1zk0uqb1().s[68]++;
    return `${baseUrl}/gift/${giftLink.token}`;
  }, []));
  const shareGiftLink =
  /* istanbul ignore next */
  (cov_2i1zk0uqb1().s[69]++, (0, _react.useCallback)(async (giftLink, options) => {
    /* istanbul ignore next */
    cov_2i1zk0uqb1().f[13]++;
    const shareUrl =
    /* istanbul ignore next */
    (cov_2i1zk0uqb1().s[70]++, getShareUrl(giftLink));
    const defaultMessage =
    /* istanbul ignore next */
    (cov_2i1zk0uqb1().s[71]++, `Check out these amazing gift recommendations I found on aclue: ${giftLink.title}`);
    const message =
    /* istanbul ignore next */
    (cov_2i1zk0uqb1().s[72]++,
    /* istanbul ignore next */
    (cov_2i1zk0uqb1().b[7][0]++, options.message) ||
    /* istanbul ignore next */
    (cov_2i1zk0uqb1().b[7][1]++, defaultMessage));
    /* istanbul ignore next */
    cov_2i1zk0uqb1().s[73]++;
    try {
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[74]++;
      switch (options.platform) {
        case "facebook":
          /* istanbul ignore next */
          cov_2i1zk0uqb1().b[8][0]++;
          cov_2i1zk0uqb1().s[75]++;
          window.open(`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(shareUrl)}&quote=${encodeURIComponent(message)}`, "_blank", "width=600,height=400");
          /* istanbul ignore next */
          cov_2i1zk0uqb1().s[76]++;
          break;
        case "twitter":
          /* istanbul ignore next */
          cov_2i1zk0uqb1().b[8][1]++;
          const hashtags =
          /* istanbul ignore next */
          (cov_2i1zk0uqb1().s[77]++, options.hashtags ?
          /* istanbul ignore next */
          (cov_2i1zk0uqb1().b[9][0]++, `&hashtags=${options.hashtags.join(",")}`) :
          /* istanbul ignore next */
          (cov_2i1zk0uqb1().b[9][1]++, ""));
          /* istanbul ignore next */
          cov_2i1zk0uqb1().s[78]++;
          window.open(`https://twitter.com/intent/tweet?url=${encodeURIComponent(shareUrl)}&text=${encodeURIComponent(message)}${hashtags}`, "_blank", "width=600,height=400");
          /* istanbul ignore next */
          cov_2i1zk0uqb1().s[79]++;
          break;
        case "linkedin":
          /* istanbul ignore next */
          cov_2i1zk0uqb1().b[8][2]++;
          cov_2i1zk0uqb1().s[80]++;
          window.open(`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(shareUrl)}`, "_blank", "width=600,height=400");
          /* istanbul ignore next */
          cov_2i1zk0uqb1().s[81]++;
          break;
        case "whatsapp":
          /* istanbul ignore next */
          cov_2i1zk0uqb1().b[8][3]++;
          cov_2i1zk0uqb1().s[82]++;
          window.open(`https://wa.me/?text=${encodeURIComponent(`${message} ${shareUrl}`)}`, "_blank");
          /* istanbul ignore next */
          cov_2i1zk0uqb1().s[83]++;
          break;
        case "email":
          /* istanbul ignore next */
          cov_2i1zk0uqb1().b[8][4]++;
          const subject =
          /* istanbul ignore next */
          (cov_2i1zk0uqb1().s[84]++, encodeURIComponent(giftLink.title));
          const body =
          /* istanbul ignore next */
          (cov_2i1zk0uqb1().s[85]++, encodeURIComponent(`${message}\n\n${shareUrl}`));
          /* istanbul ignore next */
          cov_2i1zk0uqb1().s[86]++;
          window.open(`mailto:?subject=${subject}&body=${body}`);
          /* istanbul ignore next */
          cov_2i1zk0uqb1().s[87]++;
          break;
        case "copy":
          /* istanbul ignore next */
          cov_2i1zk0uqb1().b[8][5]++;
          cov_2i1zk0uqb1().s[88]++;
          await navigator.clipboard.writeText(shareUrl);
          /* istanbul ignore next */
          cov_2i1zk0uqb1().s[89]++;
          break;
        case "qr":
          /* istanbul ignore next */
          cov_2i1zk0uqb1().b[8][6]++;
          cov_2i1zk0uqb1().s[90]++;
          break;
        default:
          /* istanbul ignore next */
          cov_2i1zk0uqb1().b[8][7]++;
          cov_2i1zk0uqb1().s[91]++;
          throw new Error(`Unsupported platform: ${options.platform}`);
      }
      // Track share analytics
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[92]++;
      await trackAnalytics(giftLink.token, "share");
    } catch (err) {
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[93]++;
      throw new Error(`Failed to share on ${options.platform}: ${err instanceof Error ?
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().b[10][0]++, err.message) :
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().b[10][1]++, "Unknown error")}`);
    }
  }, [getShareUrl]));
  const generateQRCode =
  /* istanbul ignore next */
  (cov_2i1zk0uqb1().s[94]++, (0, _react.useCallback)(async giftLink => {
    /* istanbul ignore next */
    cov_2i1zk0uqb1().f[14]++;
    const shareUrl =
    /* istanbul ignore next */
    (cov_2i1zk0uqb1().s[95]++, getShareUrl(giftLink));
    /* istanbul ignore next */
    cov_2i1zk0uqb1().s[96]++;
    try {
      // Use a QR code generation service or library
      const response =
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().s[97]++, await fetch(`/api/qr-code?url=${encodeURIComponent(shareUrl)}`));
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[98]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2i1zk0uqb1().b[11][0]++;
        cov_2i1zk0uqb1().s[99]++;
        throw new Error("Failed to generate QR code");
      } else
      /* istanbul ignore next */
      {
        cov_2i1zk0uqb1().b[11][1]++;
      }
      const blob =
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().s[100]++, await response.blob());
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[101]++;
      return URL.createObjectURL(blob);
    } catch (err) {
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[102]++;
      throw new Error(`Failed to generate QR code: ${err instanceof Error ?
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().b[12][0]++, err.message) :
      /* istanbul ignore next */
      (cov_2i1zk0uqb1().b[12][1]++, "Unknown error")}`);
    }
  }, [getShareUrl]));
  const trackAnalytics =
  /* istanbul ignore next */
  (cov_2i1zk0uqb1().s[103]++, (0, _react.useCallback)(async (token, event) => {
    /* istanbul ignore next */
    cov_2i1zk0uqb1().f[15]++;
    cov_2i1zk0uqb1().s[104]++;
    try {
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[105]++;
      await _api.api.giftLinks.trackAnalytics(token, {
        event,
        timestamp: new Date()
      });
    } catch (err) {
      /* istanbul ignore next */
      cov_2i1zk0uqb1().s[106]++;
      // Silently fail analytics tracking
      console.warn("Failed to track analytics:", err);
    }
  }, []));
  /* istanbul ignore next */
  cov_2i1zk0uqb1().s[107]++;
  return {
    giftLinks,
    isLoading,
    error,
    createGiftLink,
    updateGiftLink,
    deleteGiftLink,
    getGiftLink,
    shareGiftLink,
    generateQRCode,
    trackAnalytics,
    getShareUrl,
    loadUserGiftLinks
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,