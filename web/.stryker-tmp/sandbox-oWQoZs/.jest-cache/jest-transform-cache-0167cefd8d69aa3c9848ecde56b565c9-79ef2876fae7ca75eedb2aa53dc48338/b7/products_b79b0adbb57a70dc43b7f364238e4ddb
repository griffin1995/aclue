9bc9572d1209563920f650412b8cf865
/**
 * Product Server Actions
 *
 * Server-side actions for product operations including:
 * - Product fetching and search
 * - Cart management
 * - Wishlist operations
 * - Recommendation generation
 * - User preference tracking
 *
 * These actions run on the server and provide:
 * - Type safety
 * - Authentication handling
 * - API integration
 * - Error handling
 * - Performance optimisation
 */"use server";
"use strict";

/* istanbul ignore next */
function cov_2erjugkrxw() {
  var path = "/home/jack/Documents/aclue-preprod/web/src/app/actions/products.ts";
  var hash = "b661162e0f97aa0e2c66b1f51df24a7609f6028f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/jack/Documents/aclue-preprod/web/src/app/actions/products.ts",
    statementMap: {
      "0": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "1": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 26,
          column: 7
        }
      },
      "2": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 26,
          column: 7
        }
      },
      "3": {
        start: {
          line: 28,
          column: 0
        },
        end: {
          line: 50,
          column: 3
        }
      },
      "4": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 30
        }
      },
      "5": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 27
        }
      },
      "6": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 34
        }
      },
      "7": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 27
        }
      },
      "8": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 35
        }
      },
      "9": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 30
        }
      },
      "10": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 36
        }
      },
      "11": {
        start: {
          line: 51,
          column: 15
        },
        end: {
          line: 51,
          column: 36
        }
      },
      "12": {
        start: {
          line: 52,
          column: 17
        },
        end: {
          line: 52,
          column: 40
        }
      },
      "13": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "14": {
        start: {
          line: 55,
          column: 110
        },
        end: {
          line: 55,
          column: 116
        }
      },
      "15": {
        start: {
          line: 57,
          column: 26
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "16": {
        start: {
          line: 67,
          column: 28
        },
        end: {
          line: 67,
          column: 131
        }
      },
      "17": {
        start: {
          line: 67,
          column: 94
        },
        end: {
          line: 67,
          column: 129
        }
      },
      "18": {
        start: {
          line: 69,
          column: 25
        },
        end: {
          line: 81,
          column: 10
        }
      },
      "19": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "20": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 76
        }
      },
      "21": {
        start: {
          line: 85,
          column: 21
        },
        end: {
          line: 85,
          column: 42
        }
      },
      "22": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 89,
          column: 10
        }
      },
      "23": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 57
        }
      },
      "24": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 96,
          column: 10
        }
      },
      "25": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 135,
          column: 5
        }
      },
      "26": {
        start: {
          line: 101,
          column: 25
        },
        end: {
          line: 112,
          column: 10
        }
      },
      "27": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "28": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 120,
          column: 13
        }
      },
      "29": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 119,
          column: 18
        }
      },
      "30": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 75
        }
      },
      "31": {
        start: {
          line: 123,
          column: 21
        },
        end: {
          line: 123,
          column: 42
        }
      },
      "32": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 127,
          column: 10
        }
      },
      "33": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 56
        }
      },
      "34": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 134,
          column: 10
        }
      },
      "35": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 150,
          column: 5
        }
      },
      "36": {
        start: {
          line: 139,
          column: 24
        },
        end: {
          line: 139,
          column: 55
        }
      },
      "37": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 44
        }
      },
      "38": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 23
        }
      },
      "39": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 58
        }
      },
      "40": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 149,
          column: 10
        }
      },
      "41": {
        start: {
          line: 153,
          column: 4
        },
        end: {
          line: 194,
          column: 5
        }
      },
      "42": {
        start: {
          line: 155,
          column: 28
        },
        end: {
          line: 155,
          column: 51
        }
      },
      "43": {
        start: {
          line: 156,
          column: 22
        },
        end: {
          line: 156,
          column: 60
        }
      },
      "44": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "45": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 162,
          column: 14
        }
      },
      "46": {
        start: {
          line: 164,
          column: 25
        },
        end: {
          line: 178,
          column: 10
        }
      },
      "47": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "48": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 83
        }
      },
      "49": {
        start: {
          line: 182,
          column: 21
        },
        end: {
          line: 182,
          column: 42
        }
      },
      "50": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 186,
          column: 10
        }
      },
      "51": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 64
        }
      },
      "52": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 193,
          column: 10
        }
      },
      "53": {
        start: {
          line: 197,
          column: 4
        },
        end: {
          line: 234,
          column: 5
        }
      },
      "54": {
        start: {
          line: 199,
          column: 28
        },
        end: {
          line: 199,
          column: 51
        }
      },
      "55": {
        start: {
          line: 200,
          column: 22
        },
        end: {
          line: 200,
          column: 60
        }
      },
      "56": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 206,
          column: 9
        }
      },
      "57": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 205,
          column: 14
        }
      },
      "58": {
        start: {
          line: 207,
          column: 25
        },
        end: {
          line: 219,
          column: 10
        }
      },
      "59": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 222,
          column: 9
        }
      },
      "60": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 74
        }
      },
      "61": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 53
        }
      },
      "62": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 227,
          column: 10
        }
      },
      "63": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 55
        }
      },
      "64": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 233,
          column: 10
        }
      },
      "65": {
        start: {
          line: 237,
          column: 4
        },
        end: {
          line: 271,
          column: 5
        }
      },
      "66": {
        start: {
          line: 239,
          column: 28
        },
        end: {
          line: 239,
          column: 51
        }
      },
      "67": {
        start: {
          line: 240,
          column: 22
        },
        end: {
          line: 240,
          column: 60
        }
      },
      "68": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "69": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 245,
          column: 14
        }
      },
      "70": {
        start: {
          line: 247,
          column: 25
        },
        end: {
          line: 252,
          column: 10
        }
      },
      "71": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "72": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 77
        }
      },
      "73": {
        start: {
          line: 256,
          column: 21
        },
        end: {
          line: 256,
          column: 42
        }
      },
      "74": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 258,
          column: 46
        }
      },
      "75": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 259,
          column: 48
        }
      },
      "76": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 264,
          column: 10
        }
      },
      "77": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 57
        }
      },
      "78": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 270,
          column: 10
        }
      },
      "79": {
        start: {
          line: 274,
          column: 4
        },
        end: {
          line: 289,
          column: 5
        }
      },
      "80": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 275,
          column: 46
        }
      },
      "81": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 53
        }
      },
      "82": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 277,
          column: 48
        }
      },
      "83": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 278,
          column: 46
        }
      },
      "84": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 282,
          column: 10
        }
      },
      "85": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 284,
          column: 56
        }
      },
      "86": {
        start: {
          line: 285,
          column: 8
        },
        end: {
          line: 288,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 16
          }
        },
        loc: {
          start: {
            line: 22,
            column: 30
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 22
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 29,
            column: 20
          },
          end: {
            line: 29,
            column: 21
          }
        },
        loc: {
          start: {
            line: 29,
            column: 31
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 32,
            column: 17
          },
          end: {
            line: 32,
            column: 18
          }
        },
        loc: {
          start: {
            line: 32,
            column: 28
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 32
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 25
          }
        },
        loc: {
          start: {
            line: 35,
            column: 35
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 35
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 38,
            column: 17
          },
          end: {
            line: 38,
            column: 18
          }
        },
        loc: {
          start: {
            line: 38,
            column: 28
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 38
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 41,
            column: 25
          },
          end: {
            line: 41,
            column: 26
          }
        },
        loc: {
          start: {
            line: 41,
            column: 36
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 41
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 44,
            column: 20
          },
          end: {
            line: 44,
            column: 21
          }
        },
        loc: {
          start: {
            line: 44,
            column: 31
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 44
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 47,
            column: 26
          },
          end: {
            line: 47,
            column: 27
          }
        },
        loc: {
          start: {
            line: 47,
            column: 37
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 47
      },
      "8": {
        name: "getProducts",
        decl: {
          start: {
            line: 53,
            column: 15
          },
          end: {
            line: 53,
            column: 26
          }
        },
        loc: {
          start: {
            line: 53,
            column: 40
          },
          end: {
            line: 98,
            column: 1
          }
        },
        line: 53
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 67,
            column: 80
          },
          end: {
            line: 67,
            column: 81
          }
        },
        loc: {
          start: {
            line: 67,
            column: 94
          },
          end: {
            line: 67,
            column: 129
          }
        },
        line: 67
      },
      "10": {
        name: "getProductById",
        decl: {
          start: {
            line: 99,
            column: 15
          },
          end: {
            line: 99,
            column: 29
          }
        },
        loc: {
          start: {
            line: 99,
            column: 41
          },
          end: {
            line: 136,
            column: 1
          }
        },
        line: 99
      },
      "11": {
        name: "searchProducts",
        decl: {
          start: {
            line: 137,
            column: 15
          },
          end: {
            line: 137,
            column: 29
          }
        },
        loc: {
          start: {
            line: 137,
            column: 44
          },
          end: {
            line: 151,
            column: 1
          }
        },
        line: 137
      },
      "12": {
        name: "getRecommendations",
        decl: {
          start: {
            line: 152,
            column: 15
          },
          end: {
            line: 152,
            column: 33
          }
        },
        loc: {
          start: {
            line: 152,
            column: 47
          },
          end: {
            line: 195,
            column: 1
          }
        },
        line: 152
      },
      "13": {
        name: "recordSwipe",
        decl: {
          start: {
            line: 196,
            column: 15
          },
          end: {
            line: 196,
            column: 26
          }
        },
        loc: {
          start: {
            line: 196,
            column: 38
          },
          end: {
            line: 235,
            column: 1
          }
        },
        line: 196
      },
      "14": {
        name: "toggleWishlistAction",
        decl: {
          start: {
            line: 236,
            column: 15
          },
          end: {
            line: 236,
            column: 35
          }
        },
        loc: {
          start: {
            line: 236,
            column: 47
          },
          end: {
            line: 272,
            column: 1
          }
        },
        line: 236
      },
      "15": {
        name: "refreshProductCache",
        decl: {
          start: {
            line: 273,
            column: 15
          },
          end: {
            line: 273,
            column: 34
          }
        },
        loc: {
          start: {
            line: 273,
            column: 37
          },
          end: {
            line: 290,
            column: 1
          }
        },
        line: 273
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 53,
            column: 27
          },
          end: {
            line: 53,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 53,
            column: 36
          },
          end: {
            line: 53,
            column: 38
          }
        }],
        line: 53
      },
      "1": {
        loc: {
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 55,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 55,
            column: 24
          },
          end: {
            line: 55,
            column: 26
          }
        }],
        line: 55
      },
      "2": {
        loc: {
          start: {
            line: 55,
            column: 28
          },
          end: {
            line: 55,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 55,
            column: 39
          },
          end: {
            line: 55,
            column: 41
          }
        }],
        line: 55
      },
      "3": {
        loc: {
          start: {
            line: 55,
            column: 63
          },
          end: {
            line: 55,
            column: 83
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 55,
            column: 72
          },
          end: {
            line: 55,
            column: 83
          }
        }],
        line: 55
      },
      "4": {
        loc: {
          start: {
            line: 55,
            column: 85
          },
          end: {
            line: 55,
            column: 93
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 55,
            column: 92
          },
          end: {
            line: 55,
            column: 93
          }
        }],
        line: 55
      },
      "5": {
        loc: {
          start: {
            line: 55,
            column: 95
          },
          end: {
            line: 55,
            column: 105
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 55,
            column: 103
          },
          end: {
            line: 55,
            column: 105
          }
        }],
        line: 55
      },
      "6": {
        loc: {
          start: {
            line: 67,
            column: 94
          },
          end: {
            line: 67,
            column: 129
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 94
          },
          end: {
            line: 67,
            column: 113
          }
        }, {
          start: {
            line: 67,
            column: 117
          },
          end: {
            line: 67,
            column: 129
          }
        }],
        line: 67
      },
      "7": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "8": {
        loc: {
          start: {
            line: 88,
            column: 18
          },
          end: {
            line: 88,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 18
          },
          end: {
            line: 88,
            column: 27
          }
        }, {
          start: {
            line: 88,
            column: 31
          },
          end: {
            line: 88,
            column: 35
          }
        }],
        line: 88
      },
      "9": {
        loc: {
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "10": {
        loc: {
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 120,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 120,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "11": {
        loc: {
          start: {
            line: 126,
            column: 18
          },
          end: {
            line: 126,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 18
          },
          end: {
            line: 126,
            column: 27
          }
        }, {
          start: {
            line: 126,
            column: 31
          },
          end: {
            line: 126,
            column: 35
          }
        }],
        line: 126
      },
      "12": {
        loc: {
          start: {
            line: 152,
            column: 34
          },
          end: {
            line: 152,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 152,
            column: 43
          },
          end: {
            line: 152,
            column: 45
          }
        }],
        line: 152
      },
      "13": {
        loc: {
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "14": {
        loc: {
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "15": {
        loc: {
          start: {
            line: 185,
            column: 18
          },
          end: {
            line: 185,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 18
          },
          end: {
            line: 185,
            column: 27
          }
        }, {
          start: {
            line: 185,
            column: 31
          },
          end: {
            line: 185,
            column: 35
          }
        }],
        line: 185
      },
      "16": {
        loc: {
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 201
      },
      "17": {
        loc: {
          start: {
            line: 216,
            column: 30
          },
          end: {
            line: 216,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 216,
            column: 30
          },
          end: {
            line: 216,
            column: 51
          }
        }, {
          start: {
            line: 216,
            column: 55
          },
          end: {
            line: 216,
            column: 66
          }
        }],
        line: 216
      },
      "18": {
        loc: {
          start: {
            line: 217,
            column: 27
          },
          end: {
            line: 217,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 217,
            column: 27
          },
          end: {
            line: 217,
            column: 46
          }
        }, {
          start: {
            line: 217,
            column: 50
          },
          end: {
            line: 217,
            column: 60
          }
        }],
        line: 217
      },
      "19": {
        loc: {
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 222,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 222,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "20": {
        loc: {
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 246,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 246,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "21": {
        loc: {
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 253
      },
      "22": {
        loc: {
          start: {
            line: 263,
            column: 21
          },
          end: {
            line: 263,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 263,
            column: 34
          },
          end: {
            line: 263,
            column: 54
          }
        }, {
          start: {
            line: 263,
            column: 57
          },
          end: {
            line: 263,
            column: 81
          }
        }],
        line: 263
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/jack/Documents/aclue-preprod/web/src/app/actions/products.ts"],
      sourcesContent: ["/**\n * Product Server Actions\n *\n * Server-side actions for product operations including:\n * - Product fetching and search\n * - Cart management\n * - Wishlist operations\n * - Recommendation generation\n * - User preference tracking\n *\n * These actions run on the server and provide:\n * - Type safety\n * - Authentication handling\n * - API integration\n * - Error handling\n * - Performance optimisation\n */\n\n'use server';\n\nimport { revalidatePath, revalidateTag } from 'next/cache';\nimport { redirect } from 'next/navigation';\nimport { cookies } from 'next/headers';\nimport { api } from '@/lib/api';\n\n// ==============================================================================\n// TYPE DEFINITIONS\n// ==============================================================================\n\ninterface ProductSearchParams {\n  query?: string;\n  category?: string;\n  minPrice?: number;\n  maxPrice?: number;\n  sortBy?: 'price_asc' | 'price_desc' | 'rating' | 'relevance';\n  page?: number;\n  limit?: number;\n}\n\ninterface SwipeData {\n  productId: string;\n  direction: 'like' | 'dislike' | 'super_like';\n  sessionType?: string;\n  timestamp?: Date;\n}\n\n\n// ==============================================================================\n// PRODUCT FETCHING ACTIONS\n// ==============================================================================\n\n/**\n * Get products with server-side caching\n *\n * Fetches products from the backend API with caching for performance.\n * Uses Next.js cache tags for selective revalidation.\n */\nexport async function getProducts(params: ProductSearchParams = {}) {\n  try {\n    const {\n      query = '',\n      category = '',\n      minPrice,\n      maxPrice,\n      sortBy = 'relevance',\n      page = 1,\n      limit = 20\n    } = params;\n\n    // Build API request parameters\n    const apiParams = {\n      q: query,\n      category,\n      min_price: minPrice,\n      max_price: maxPrice,\n      sort_by: sortBy,\n      page,\n      limit,\n    };\n\n    // Remove undefined values\n    const cleanParams = Object.fromEntries(\n      Object.entries(apiParams).filter(([_, value]) => value !== undefined && value !== '')\n    );\n\n    // Fetch with caching\n    const response = await fetch(\n      `${process.env.NEXT_PUBLIC_API_URL}/api/v1/products/?${new URLSearchParams(cleanParams)}`,\n      {\n        next: {\n          revalidate: 300, // Cache for 5 minutes\n          tags: ['products', `products-${category}`, `products-page-${page}`]\n        },\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(`Failed to fetch products: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return { success: true, data: data.data || data };\n  } catch (error) {\n    console.error('Error fetching products:', error);\n    return {\n      success: false,\n      error: 'Failed to load products. Please try again.',\n      data: []\n    };\n  }\n}\n\n/**\n * Get single product by ID with caching\n */\nexport async function getProductById(productId: string) {\n  try {\n    const response = await fetch(\n      `${process.env.NEXT_PUBLIC_API_URL}/api/v1/products/${productId}`,\n      {\n        next: {\n          revalidate: 600, // Cache for 10 minutes\n          tags: ['products', `product-${productId}`]\n        },\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n\n    if (!response.ok) {\n      if (response.status === 404) {\n        return { success: false, error: 'Product not found', data: null };\n      }\n      throw new Error(`Failed to fetch product: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return { success: true, data: data.data || data };\n  } catch (error) {\n    console.error('Error fetching product:', error);\n    return {\n      success: false,\n      error: 'Failed to load product. Please try again.',\n      data: null\n    };\n  }\n}\n\n/**\n * Search products with enhanced server-side processing\n */\nexport async function searchProducts(searchParams: ProductSearchParams) {\n  try {\n    const results = await getProducts(searchParams);\n\n    // Revalidate search cache\n    revalidateTag('search');\n\n    return results;\n  } catch (error) {\n    console.error('Error searching products:', error);\n    return {\n      success: false,\n      error: 'Search failed. Please try again.',\n      data: []\n    };\n  }\n}\n\n// ==============================================================================\n// RECOMMENDATION ACTIONS\n// ==============================================================================\n\n/**\n * Get AI recommendations with authentication check\n */\nexport async function getRecommendations(params: {\n  limit?: number;\n  category?: string;\n  budget_min?: number;\n  budget_max?: number;\n} = {}) {\n  try {\n    // Get authentication token from cookies\n    const cookieStore = cookies();\n    const token = cookieStore.get('access_token')?.value;\n\n    if (!token) {\n      return {\n        success: false,\n        error: 'Authentication required for recommendations',\n        data: []\n      };\n    }\n\n    const response = await fetch(\n      `${process.env.NEXT_PUBLIC_API_URL}/api/v1/recommendations/`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n        body: JSON.stringify(params),\n        next: {\n          revalidate: 300, // Cache for 5 minutes\n          tags: ['recommendations', `recommendations-${token.slice(-8)}`]\n        },\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(`Failed to fetch recommendations: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return { success: true, data: data.data || data };\n  } catch (error) {\n    console.error('Error fetching recommendations:', error);\n    return {\n      success: false,\n      error: 'Failed to load recommendations. Please try again.',\n      data: []\n    };\n  }\n}\n\n// ==============================================================================\n// USER INTERACTION ACTIONS\n// ==============================================================================\n\n/**\n * Record user swipe preference\n */\nexport async function recordSwipe(swipeData: SwipeData) {\n  try {\n    // Get authentication token from cookies\n    const cookieStore = cookies();\n    const token = cookieStore.get('access_token')?.value;\n\n    if (!token) {\n      return {\n        success: false,\n        error: 'Authentication required to save preferences'\n      };\n    }\n\n    const response = await fetch(\n      `${process.env.NEXT_PUBLIC_API_URL}/api/v1/swipes/`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n        body: JSON.stringify({\n          product_id: swipeData.productId,\n          direction: swipeData.direction,\n          session_type: swipeData.sessionType || 'discovery',\n          timestamp: swipeData.timestamp || new Date(),\n        }),\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(`Failed to record swipe: ${response.status}`);\n    }\n\n    // Revalidate recommendations cache as preferences have changed\n    revalidateTag('recommendations');\n\n    return { success: true };\n  } catch (error) {\n    console.error('Error recording swipe:', error);\n    return {\n      success: false,\n      error: 'Failed to save preference. Please try again.'\n    };\n  }\n}\n\n\n// ==============================================================================\n// WISHLIST ACTIONS\n// ==============================================================================\n\n/**\n * Toggle wishlist item\n */\nexport async function toggleWishlistAction(productId: string) {\n  try {\n    // Get authentication token from cookies\n    const cookieStore = cookies();\n    const token = cookieStore.get('access_token')?.value;\n\n    if (!token) {\n      return {\n        success: false,\n        error: 'Please sign in to save items to wishlist'\n      };\n    }\n\n    const response = await fetch(\n      `${process.env.NEXT_PUBLIC_API_URL}/api/v1/wishlist/${productId}`,\n      {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(`Failed to update wishlist: ${response.status}`);\n    }\n\n    const data = await response.json();\n\n    // Revalidate wishlist cache\n    revalidateTag('wishlist');\n    revalidatePath('/wishlist');\n\n    return {\n      success: true,\n      added: data.added,\n      message: data.added ? 'Added to wishlist!' : 'Removed from wishlist!'\n    };\n  } catch (error) {\n    console.error('Error updating wishlist:', error);\n    return {\n      success: false,\n      error: 'Failed to update wishlist. Please try again.'\n    };\n  }\n}\n\n// ==============================================================================\n// CACHE MANAGEMENT\n// ==============================================================================\n\n/**\n * Refresh product data cache\n */\nexport async function refreshProductCache() {\n  try {\n    revalidateTag('products');\n    revalidateTag('recommendations');\n    revalidatePath('/discover');\n    revalidatePath('/search');\n\n    return { success: true, message: 'Cache refreshed successfully!' };\n  } catch (error) {\n    console.error('Error refreshing cache:', error);\n    return {\n      success: false,\n      error: 'Failed to refresh cache. Please try again.'\n    };\n  }\n}"],
      names: ["getProductById", "getProducts", "getRecommendations", "recordSwipe", "refreshProductCache", "searchProducts", "toggleWishlistAction", "params", "query", "category", "minPrice", "maxPrice", "sortBy", "page", "limit", "apiParams", "q", "min_price", "max_price", "sort_by", "cleanParams", "Object", "fromEntries", "entries", "filter", "_", "value", "undefined", "response", "fetch", "process", "env", "NEXT_PUBLIC_API_URL", "URLSearchParams", "next", "revalidate", "tags", "headers", "ok", "Error", "status", "data", "json", "success", "error", "console", "productId", "searchParams", "results", "revalidateTag", "cookieStore", "cookies", "token", "get", "method", "body", "JSON", "stringify", "slice", "swipeData", "product_id", "direction", "session_type", "sessionType", "timestamp", "Date", "revalidatePath", "added", "message"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b661162e0f97aa0e2c66b1f51df24a7609f6028f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2erjugkrxw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2erjugkrxw();
cov_2erjugkrxw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2erjugkrxw().f[0]++;
  cov_2erjugkrxw().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2erjugkrxw().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2erjugkrxw().s[3]++;
_export(exports, {
  getProductById: function () {
    /* istanbul ignore next */
    cov_2erjugkrxw().f[1]++;
    cov_2erjugkrxw().s[4]++;
    return getProductById;
  },
  getProducts: function () {
    /* istanbul ignore next */
    cov_2erjugkrxw().f[2]++;
    cov_2erjugkrxw().s[5]++;
    return getProducts;
  },
  getRecommendations: function () {
    /* istanbul ignore next */
    cov_2erjugkrxw().f[3]++;
    cov_2erjugkrxw().s[6]++;
    return getRecommendations;
  },
  recordSwipe: function () {
    /* istanbul ignore next */
    cov_2erjugkrxw().f[4]++;
    cov_2erjugkrxw().s[7]++;
    return recordSwipe;
  },
  refreshProductCache: function () {
    /* istanbul ignore next */
    cov_2erjugkrxw().f[5]++;
    cov_2erjugkrxw().s[8]++;
    return refreshProductCache;
  },
  searchProducts: function () {
    /* istanbul ignore next */
    cov_2erjugkrxw().f[6]++;
    cov_2erjugkrxw().s[9]++;
    return searchProducts;
  },
  toggleWishlistAction: function () {
    /* istanbul ignore next */
    cov_2erjugkrxw().f[7]++;
    cov_2erjugkrxw().s[10]++;
    return toggleWishlistAction;
  }
});
const _cache =
/* istanbul ignore next */
(cov_2erjugkrxw().s[11]++, require("next/cache"));
const _headers =
/* istanbul ignore next */
(cov_2erjugkrxw().s[12]++, require("next/headers"));
async function getProducts(params =
/* istanbul ignore next */
(cov_2erjugkrxw().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_2erjugkrxw().f[8]++;
  cov_2erjugkrxw().s[13]++;
  try {
    const {
      query =
      /* istanbul ignore next */
      (cov_2erjugkrxw().b[1][0]++, ""),
      category =
      /* istanbul ignore next */
      (cov_2erjugkrxw().b[2][0]++, ""),
      minPrice,
      maxPrice,
      sortBy =
      /* istanbul ignore next */
      (cov_2erjugkrxw().b[3][0]++, "relevance"),
      page =
      /* istanbul ignore next */
      (cov_2erjugkrxw().b[4][0]++, 1),
      limit =
      /* istanbul ignore next */
      (cov_2erjugkrxw().b[5][0]++, 20)
    } =
    /* istanbul ignore next */
    (cov_2erjugkrxw().s[14]++, params);
    // Build API request parameters
    const apiParams =
    /* istanbul ignore next */
    (cov_2erjugkrxw().s[15]++, {
      q: query,
      category,
      min_price: minPrice,
      max_price: maxPrice,
      sort_by: sortBy,
      page,
      limit
    });
    // Remove undefined values
    const cleanParams =
    /* istanbul ignore next */
    (cov_2erjugkrxw().s[16]++, Object.fromEntries(Object.entries(apiParams).filter(([_, value]) => {
      /* istanbul ignore next */
      cov_2erjugkrxw().f[9]++;
      cov_2erjugkrxw().s[17]++;
      return /* istanbul ignore next */(cov_2erjugkrxw().b[6][0]++, value !== undefined) &&
      /* istanbul ignore next */
      (cov_2erjugkrxw().b[6][1]++, value !== "");
    })));
    // Fetch with caching
    const response =
    /* istanbul ignore next */
    (cov_2erjugkrxw().s[18]++, await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/v1/products/?${new URLSearchParams(cleanParams)}`, {
      next: {
        revalidate: 300,
        tags: ["products", `products-${category}`, `products-page-${page}`]
      },
      headers: {
        "Content-Type": "application/json"
      }
    }));
    /* istanbul ignore next */
    cov_2erjugkrxw().s[19]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2erjugkrxw().b[7][0]++;
      cov_2erjugkrxw().s[20]++;
      throw new Error(`Failed to fetch products: ${response.status}`);
    } else
    /* istanbul ignore next */
    {
      cov_2erjugkrxw().b[7][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_2erjugkrxw().s[21]++, await response.json());
    /* istanbul ignore next */
    cov_2erjugkrxw().s[22]++;
    return {
      success: true,
      data:
      /* istanbul ignore next */
      (cov_2erjugkrxw().b[8][0]++, data.data) ||
      /* istanbul ignore next */
      (cov_2erjugkrxw().b[8][1]++, data)
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_2erjugkrxw().s[23]++;
    console.error("Error fetching products:", error);
    /* istanbul ignore next */
    cov_2erjugkrxw().s[24]++;
    return {
      success: false,
      error: "Failed to load products. Please try again.",
      data: []
    };
  }
}
async function getProductById(productId) {
  /* istanbul ignore next */
  cov_2erjugkrxw().f[10]++;
  cov_2erjugkrxw().s[25]++;
  try {
    const response =
    /* istanbul ignore next */
    (cov_2erjugkrxw().s[26]++, await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/v1/products/${productId}`, {
      next: {
        revalidate: 600,
        tags: ["products", `product-${productId}`]
      },
      headers: {
        "Content-Type": "application/json"
      }
    }));
    /* istanbul ignore next */
    cov_2erjugkrxw().s[27]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2erjugkrxw().b[9][0]++;
      cov_2erjugkrxw().s[28]++;
      if (response.status === 404) {
        /* istanbul ignore next */
        cov_2erjugkrxw().b[10][0]++;
        cov_2erjugkrxw().s[29]++;
        return {
          success: false,
          error: "Product not found",
          data: null
        };
      } else
      /* istanbul ignore next */
      {
        cov_2erjugkrxw().b[10][1]++;
      }
      cov_2erjugkrxw().s[30]++;
      throw new Error(`Failed to fetch product: ${response.status}`);
    } else
    /* istanbul ignore next */
    {
      cov_2erjugkrxw().b[9][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_2erjugkrxw().s[31]++, await response.json());
    /* istanbul ignore next */
    cov_2erjugkrxw().s[32]++;
    return {
      success: true,
      data:
      /* istanbul ignore next */
      (cov_2erjugkrxw().b[11][0]++, data.data) ||
      /* istanbul ignore next */
      (cov_2erjugkrxw().b[11][1]++, data)
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_2erjugkrxw().s[33]++;
    console.error("Error fetching product:", error);
    /* istanbul ignore next */
    cov_2erjugkrxw().s[34]++;
    return {
      success: false,
      error: "Failed to load product. Please try again.",
      data: null
    };
  }
}
async function searchProducts(searchParams) {
  /* istanbul ignore next */
  cov_2erjugkrxw().f[11]++;
  cov_2erjugkrxw().s[35]++;
  try {
    const results =
    /* istanbul ignore next */
    (cov_2erjugkrxw().s[36]++, await getProducts(searchParams));
    // Revalidate search cache
    /* istanbul ignore next */
    cov_2erjugkrxw().s[37]++;
    (0, _cache.revalidateTag)("search");
    /* istanbul ignore next */
    cov_2erjugkrxw().s[38]++;
    return results;
  } catch (error) {
    /* istanbul ignore next */
    cov_2erjugkrxw().s[39]++;
    console.error("Error searching products:", error);
    /* istanbul ignore next */
    cov_2erjugkrxw().s[40]++;
    return {
      success: false,
      error: "Search failed. Please try again.",
      data: []
    };
  }
}
async function getRecommendations(params =
/* istanbul ignore next */
(cov_2erjugkrxw().b[12][0]++, {})) {
  /* istanbul ignore next */
  cov_2erjugkrxw().f[12]++;
  cov_2erjugkrxw().s[41]++;
  try {
    // Get authentication token from cookies
    const cookieStore =
    /* istanbul ignore next */
    (cov_2erjugkrxw().s[42]++, (0, _headers.cookies)());
    const token =
    /* istanbul ignore next */
    (cov_2erjugkrxw().s[43]++, cookieStore.get("access_token")?.value);
    /* istanbul ignore next */
    cov_2erjugkrxw().s[44]++;
    if (!token) {
      /* istanbul ignore next */
      cov_2erjugkrxw().b[13][0]++;
      cov_2erjugkrxw().s[45]++;
      return {
        success: false,
        error: "Authentication required for recommendations",
        data: []
      };
    } else
    /* istanbul ignore next */
    {
      cov_2erjugkrxw().b[13][1]++;
    }
    const response =
    /* istanbul ignore next */
    (cov_2erjugkrxw().s[46]++, await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/v1/recommendations/`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Authorization": `Bearer ${token}`
      },
      body: JSON.stringify(params),
      next: {
        revalidate: 300,
        tags: ["recommendations", `recommendations-${token.slice(-8)}`]
      }
    }));
    /* istanbul ignore next */
    cov_2erjugkrxw().s[47]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2erjugkrxw().b[14][0]++;
      cov_2erjugkrxw().s[48]++;
      throw new Error(`Failed to fetch recommendations: ${response.status}`);
    } else
    /* istanbul ignore next */
    {
      cov_2erjugkrxw().b[14][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_2erjugkrxw().s[49]++, await response.json());
    /* istanbul ignore next */
    cov_2erjugkrxw().s[50]++;
    return {
      success: true,
      data:
      /* istanbul ignore next */
      (cov_2erjugkrxw().b[15][0]++, data.data) ||
      /* istanbul ignore next */
      (cov_2erjugkrxw().b[15][1]++, data)
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_2erjugkrxw().s[51]++;
    console.error("Error fetching recommendations:", error);
    /* istanbul ignore next */
    cov_2erjugkrxw().s[52]++;
    return {
      success: false,
      error: "Failed to load recommendations. Please try again.",
      data: []
    };
  }
}
async function recordSwipe(swipeData) {
  /* istanbul ignore next */
  cov_2erjugkrxw().f[13]++;
  cov_2erjugkrxw().s[53]++;
  try {
    // Get authentication token from cookies
    const cookieStore =
    /* istanbul ignore next */
    (cov_2erjugkrxw().s[54]++, (0, _headers.cookies)());
    const token =
    /* istanbul ignore next */
    (cov_2erjugkrxw().s[55]++, cookieStore.get("access_token")?.value);
    /* istanbul ignore next */
    cov_2erjugkrxw().s[56]++;
    if (!token) {
      /* istanbul ignore next */
      cov_2erjugkrxw().b[16][0]++;
      cov_2erjugkrxw().s[57]++;
      return {
        success: false,
        error: "Authentication required to save preferences"
      };
    } else
    /* istanbul ignore next */
    {
      cov_2erjugkrxw().b[16][1]++;
    }
    const response =
    /* istanbul ignore next */
    (cov_2erjugkrxw().s[58]++, await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/v1/swipes/`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Authorization": `Bearer ${token}`
      },
      body: JSON.stringify({
        product_id: swipeData.productId,
        direction: swipeData.direction,
        session_type:
        /* istanbul ignore next */
        (cov_2erjugkrxw().b[17][0]++, swipeData.sessionType) ||
        /* istanbul ignore next */
        (cov_2erjugkrxw().b[17][1]++, "discovery"),
        timestamp:
        /* istanbul ignore next */
        (cov_2erjugkrxw().b[18][0]++, swipeData.timestamp) ||
        /* istanbul ignore next */
        (cov_2erjugkrxw().b[18][1]++, new Date())
      })
    }));
    /* istanbul ignore next */
    cov_2erjugkrxw().s[59]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2erjugkrxw().b[19][0]++;
      cov_2erjugkrxw().s[60]++;
      throw new Error(`Failed to record swipe: ${response.status}`);
    } else
    /* istanbul ignore next */
    {
      cov_2erjugkrxw().b[19][1]++;
    }
    // Revalidate recommendations cache as preferences have changed
    cov_2erjugkrxw().s[61]++;
    (0, _cache.revalidateTag)("recommendations");
    /* istanbul ignore next */
    cov_2erjugkrxw().s[62]++;
    return {
      success: true
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_2erjugkrxw().s[63]++;
    console.error("Error recording swipe:", error);
    /* istanbul ignore next */
    cov_2erjugkrxw().s[64]++;
    return {
      success: false,
      error: "Failed to save preference. Please try again."
    };
  }
}
async function toggleWishlistAction(productId) {
  /* istanbul ignore next */
  cov_2erjugkrxw().f[14]++;
  cov_2erjugkrxw().s[65]++;
  try {
    // Get authentication token from cookies
    const cookieStore =
    /* istanbul ignore next */
    (cov_2erjugkrxw().s[66]++, (0, _headers.cookies)());
    const token =
    /* istanbul ignore next */
    (cov_2erjugkrxw().s[67]++, cookieStore.get("access_token")?.value);
    /* istanbul ignore next */
    cov_2erjugkrxw().s[68]++;
    if (!token) {
      /* istanbul ignore next */
      cov_2erjugkrxw().b[20][0]++;
      cov_2erjugkrxw().s[69]++;
      return {
        success: false,
        error: "Please sign in to save items to wishlist"
      };
    } else
    /* istanbul ignore next */
    {
      cov_2erjugkrxw().b[20][1]++;
    }
    const response =
    /* istanbul ignore next */
    (cov_2erjugkrxw().s[70]++, await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/v1/wishlist/${productId}`, {
      method: "POST",
      headers: {
        "Authorization": `Bearer ${token}`
      }
    }));
    /* istanbul ignore next */
    cov_2erjugkrxw().s[71]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2erjugkrxw().b[21][0]++;
      cov_2erjugkrxw().s[72]++;
      throw new Error(`Failed to update wishlist: ${response.status}`);
    } else
    /* istanbul ignore next */
    {
      cov_2erjugkrxw().b[21][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_2erjugkrxw().s[73]++, await response.json());
    // Revalidate wishlist cache
    /* istanbul ignore next */
    cov_2erjugkrxw().s[74]++;
    (0, _cache.revalidateTag)("wishlist");
    /* istanbul ignore next */
    cov_2erjugkrxw().s[75]++;
    (0, _cache.revalidatePath)("/wishlist");
    /* istanbul ignore next */
    cov_2erjugkrxw().s[76]++;
    return {
      success: true,
      added: data.added,
      message: data.added ?
      /* istanbul ignore next */
      (cov_2erjugkrxw().b[22][0]++, "Added to wishlist!") :
      /* istanbul ignore next */
      (cov_2erjugkrxw().b[22][1]++, "Removed from wishlist!")
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_2erjugkrxw().s[77]++;
    console.error("Error updating wishlist:", error);
    /* istanbul ignore next */
    cov_2erjugkrxw().s[78]++;
    return {
      success: false,
      error: "Failed to update wishlist. Please try again."
    };
  }
}
async function refreshProductCache() {
  /* istanbul ignore next */
  cov_2erjugkrxw().f[15]++;
  cov_2erjugkrxw().s[79]++;
  try {
    /* istanbul ignore next */
    cov_2erjugkrxw().s[80]++;
    (0, _cache.revalidateTag)("products");
    /* istanbul ignore next */
    cov_2erjugkrxw().s[81]++;
    (0, _cache.revalidateTag)("recommendations");
    /* istanbul ignore next */
    cov_2erjugkrxw().s[82]++;
    (0, _cache.revalidatePath)("/discover");
    /* istanbul ignore next */
    cov_2erjugkrxw().s[83]++;
    (0, _cache.revalidatePath)("/search");
    /* istanbul ignore next */
    cov_2erjugkrxw().s[84]++;
    return {
      success: true,
      message: "Cache refreshed successfully!"
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_2erjugkrxw().s[85]++;
    console.error("Error refreshing cache:", error);
    /* istanbul ignore next */
    cov_2erjugkrxw().s[86]++;
    return {
      success: false,
      error: "Failed to refresh cache. Please try again."
    };
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,