aca39c45598062a1f8a4afea42cd1fa7
"use strict";

/* istanbul ignore next */
function cov_gk31k5as() {
  var path = "/home/jack/Documents/aclue-preprod/web/src/pages/debug-posthog.tsx";
  var hash = "dd259bee54ee9361af7090eea9ad5429ec3e0b8f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/jack/Documents/aclue-preprod/web/src/pages/debug-posthog.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 28
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 29
        },
        end: {
          line: 12,
          column: 72
        }
      },
      "5": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 36
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 51
        }
      },
      "7": {
        start: {
          line: 15,
          column: 39
        },
        end: {
          line: 15,
          column: 51
        }
      },
      "8": {
        start: {
          line: 16,
          column: 28
        },
        end: {
          line: 16,
          column: 41
        }
      },
      "9": {
        start: {
          line: 17,
          column: 27
        },
        end: {
          line: 17,
          column: 40
        }
      },
      "10": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 20,
          column: 20
        }
      },
      "11": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 66
        }
      },
      "12": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "13": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 19
        }
      },
      "14": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "15": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 29,
          column: 10
        }
      },
      "16": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 53
        }
      },
      "17": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "18": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 30
        }
      },
      "19": {
        start: {
          line: 35,
          column: 17
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "20": {
        start: {
          line: 38,
          column: 32
        },
        end: {
          line: 38,
          column: 88
        }
      },
      "21": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "22": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "23": {
        start: {
          line: 41,
          column: 23
        },
        end: {
          line: 41,
          column: 95
        }
      },
      "24": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 46,
          column: 13
        }
      },
      "25": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 57
        }
      },
      "26": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 39
        }
      },
      "27": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 25
        }
      },
      "28": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "29": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 31
        }
      },
      "30": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 18
        }
      },
      "31": {
        start: {
          line: 56,
          column: 28
        },
        end: {
          line: 56,
          column: 52
        }
      },
      "32": {
        start: {
          line: 57,
          column: 46
        },
        end: {
          line: 57,
          column: 77
        }
      },
      "33": {
        start: {
          line: 58,
          column: 19
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "34": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 29
        }
      },
      "35": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 63,
          column: 15
        }
      },
      "36": {
        start: {
          line: 60,
          column: 24
        },
        end: {
          line: 63,
          column: 13
        }
      },
      "37": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 129,
          column: 11
        }
      },
      "38": {
        start: {
          line: 66,
          column: 28
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "39": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 126,
          column: 13
        }
      },
      "40": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 62
        }
      },
      "41": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 60
        }
      },
      "42": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 71,
          column: 100
        }
      },
      "43": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 72,
          column: 95
        }
      },
      "44": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 78,
          column: 17
        }
      },
      "45": {
        start: {
          line: 75,
          column: 20
        },
        end: {
          line: 75,
          column: 60
        }
      },
      "46": {
        start: {
          line: 76,
          column: 20
        },
        end: {
          line: 76,
          column: 46
        }
      },
      "47": {
        start: {
          line: 77,
          column: 20
        },
        end: {
          line: 77,
          column: 27
        }
      },
      "48": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 50
        }
      },
      "49": {
        start: {
          line: 81,
          column: 32
        },
        end: {
          line: 81,
          column: 128
        }
      },
      "50": {
        start: {
          line: 81,
          column: 79
        },
        end: {
          line: 81,
          column: 127
        }
      },
      "51": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 82,
          column: 63
        }
      },
      "52": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 122,
          column: 17
        }
      },
      "53": {
        start: {
          line: 85,
          column: 20
        },
        end: {
          line: 85,
          column: 54
        }
      },
      "54": {
        start: {
          line: 86,
          column: 20
        },
        end: {
          line: 91,
          column: 23
        }
      },
      "55": {
        start: {
          line: 92,
          column: 20
        },
        end: {
          line: 92,
          column: 50
        }
      },
      "56": {
        start: {
          line: 94,
          column: 20
        },
        end: {
          line: 94,
          column: 76
        }
      },
      "57": {
        start: {
          line: 94,
          column: 49
        },
        end: {
          line: 94,
          column: 74
        }
      },
      "58": {
        start: {
          line: 96,
          column: 20
        },
        end: {
          line: 118,
          column: 21
        }
      },
      "59": {
        start: {
          line: 97,
          column: 24
        },
        end: {
          line: 97,
          column: 72
        }
      },
      "60": {
        start: {
          line: 99,
          column: 24
        },
        end: {
          line: 99,
          column: 56
        }
      },
      "61": {
        start: {
          line: 100,
          column: 24
        },
        end: {
          line: 105,
          column: 27
        }
      },
      "62": {
        start: {
          line: 106,
          column: 24
        },
        end: {
          line: 106,
          column: 50
        }
      },
      "63": {
        start: {
          line: 108,
          column: 24
        },
        end: {
          line: 108,
          column: 55
        }
      },
      "64": {
        start: {
          line: 109,
          column: 24
        },
        end: {
          line: 111,
          column: 27
        }
      },
      "65": {
        start: {
          line: 112,
          column: 24
        },
        end: {
          line: 112,
          column: 49
        }
      },
      "66": {
        start: {
          line: 113,
          column: 24
        },
        end: {
          line: 113,
          column: 52
        }
      },
      "67": {
        start: {
          line: 114,
          column: 24
        },
        end: {
          line: 114,
          column: 84
        }
      },
      "68": {
        start: {
          line: 116,
          column: 24
        },
        end: {
          line: 116,
          column: 80
        }
      },
      "69": {
        start: {
          line: 117,
          column: 24
        },
        end: {
          line: 117,
          column: 50
        }
      },
      "70": {
        start: {
          line: 120,
          column: 20
        },
        end: {
          line: 120,
          column: 64
        }
      },
      "71": {
        start: {
          line: 121,
          column: 20
        },
        end: {
          line: 121,
          column: 46
        }
      },
      "72": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 93
        }
      },
      "73": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 42
        }
      },
      "74": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 22
        }
      },
      "75": {
        start: {
          line: 130,
          column: 28
        },
        end: {
          line: 143,
          column: 5
        }
      },
      "76": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "77": {
        start: {
          line: 132,
          column: 30
        },
        end: {
          line: 132,
          column: 58
        }
      },
      "78": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 57
        }
      },
      "79": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 138,
          column: 15
        }
      },
      "80": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 40
        }
      },
      "81": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 68
        }
      },
      "82": {
        start: {
          line: 144,
          column: 30
        },
        end: {
          line: 160,
          column: 5
        }
      },
      "83": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "84": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 56
        }
      },
      "85": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 155,
          column: 15
        }
      },
      "86": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 50
        }
      },
      "87": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 70
        }
      },
      "88": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 301,
          column: 7
        }
      },
      "89": {
        start: {
          line: 202,
          column: 32
        },
        end: {
          line: 208,
          column: 33
        }
      },
      "90": {
        start: {
          line: 203,
          column: 36
        },
        end: {
          line: 206,
          column: 39
        }
      },
      "91": {
        start: {
          line: 207,
          column: 36
        },
        end: {
          line: 207,
          column: 62
        }
      },
      "92": {
        start: {
          line: 224,
          column: 32
        },
        end: {
          line: 247,
          column: 33
        }
      },
      "93": {
        start: {
          line: 225,
          column: 36
        },
        end: {
          line: 225,
          column: 73
        }
      },
      "94": {
        start: {
          line: 226,
          column: 53
        },
        end: {
          line: 243,
          column: 38
        }
      },
      "95": {
        start: {
          line: 244,
          column: 36
        },
        end: {
          line: 244,
          column: 109
        }
      },
      "96": {
        start: {
          line: 246,
          column: 36
        },
        end: {
          line: 246,
          column: 118
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 33
          }
        },
        loc: {
          start: {
            line: 14,
            column: 47
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 39
          },
          end: {
            line: 18,
            column: 40
          }
        },
        loc: {
          start: {
            line: 18,
            column: 61
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 34
          }
        },
        loc: {
          start: {
            line: 22,
            column: 53
          },
          end: {
            line: 54,
            column: 1
          }
        },
        line: 22
      },
      "4": {
        name: "DebugPostHog",
        decl: {
          start: {
            line: 55,
            column: 9
          },
          end: {
            line: 55,
            column: 21
          }
        },
        loc: {
          start: {
            line: 55,
            column: 24
          },
          end: {
            line: 302,
            column: 1
          }
        },
        line: 55
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 58,
            column: 19
          },
          end: {
            line: 58,
            column: 20
          }
        },
        loc: {
          start: {
            line: 58,
            column: 30
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 58
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 60,
            column: 17
          }
        },
        loc: {
          start: {
            line: 60,
            column: 24
          },
          end: {
            line: 63,
            column: 13
          }
        },
        line: 60
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 65,
            column: 26
          },
          end: {
            line: 65,
            column: 27
          }
        },
        loc: {
          start: {
            line: 65,
            column: 30
          },
          end: {
            line: 129,
            column: 5
          }
        },
        line: 65
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 66,
            column: 28
          },
          end: {
            line: 66,
            column: 29
          }
        },
        loc: {
          start: {
            line: 66,
            column: 38
          },
          end: {
            line: 127,
            column: 9
          }
        },
        line: 66
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 81,
            column: 61
          },
          end: {
            line: 81,
            column: 62
          }
        },
        loc: {
          start: {
            line: 81,
            column: 79
          },
          end: {
            line: 81,
            column: 127
          }
        },
        line: 81
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 94,
            column: 38
          },
          end: {
            line: 94,
            column: 39
          }
        },
        loc: {
          start: {
            line: 94,
            column: 49
          },
          end: {
            line: 94,
            column: 74
          }
        },
        line: 94
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 130,
            column: 28
          },
          end: {
            line: 130,
            column: 29
          }
        },
        loc: {
          start: {
            line: 130,
            column: 32
          },
          end: {
            line: 143,
            column: 5
          }
        },
        line: 130
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 144,
            column: 30
          },
          end: {
            line: 144,
            column: 31
          }
        },
        loc: {
          start: {
            line: 144,
            column: 34
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 144
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 201,
            column: 37
          },
          end: {
            line: 201,
            column: 38
          }
        },
        loc: {
          start: {
            line: 201,
            column: 41
          },
          end: {
            line: 209,
            column: 29
          }
        },
        line: 201
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 223,
            column: 37
          },
          end: {
            line: 223,
            column: 38
          }
        },
        loc: {
          start: {
            line: 223,
            column: 47
          },
          end: {
            line: 248,
            column: 29
          }
        },
        line: 223
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 19,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 19,
            column: 29
          },
          end: {
            line: 19,
            column: 45
          }
        }, {
          start: {
            line: 19,
            column: 48
          },
          end: {
            line: 19,
            column: 65
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "3": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 23,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 23,
            column: 20
          }
        }, {
          start: {
            line: 23,
            column: 24
          },
          end: {
            line: 23,
            column: 27
          }
        }, {
          start: {
            line: 23,
            column: 31
          },
          end: {
            line: 23,
            column: 45
          }
        }],
        line: 23
      },
      "4": {
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "5": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 26,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 26,
            column: 20
          }
        }, {
          start: {
            line: 26,
            column: 24
          },
          end: {
            line: 26,
            column: 47
          }
        }, {
          start: {
            line: 26,
            column: 51
          },
          end: {
            line: 26,
            column: 76
          }
        }],
        line: 26
      },
      "6": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "7": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 13
          }
        }, {
          start: {
            line: 32,
            column: 17
          },
          end: {
            line: 32,
            column: 31
          }
        }],
        line: 32
      },
      "8": {
        loc: {
          start: {
            line: 38,
            column: 32
          },
          end: {
            line: 38,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 32
          },
          end: {
            line: 38,
            column: 53
          }
        }, {
          start: {
            line: 38,
            column: 57
          },
          end: {
            line: 38,
            column: 88
          }
        }],
        line: 38
      },
      "9": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "10": {
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 29
          }
        }, {
          start: {
            line: 40,
            column: 33
          },
          end: {
            line: 40,
            column: 79
          }
        }],
        line: 40
      },
      "11": {
        loc: {
          start: {
            line: 41,
            column: 23
          },
          end: {
            line: 41,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 47
          },
          end: {
            line: 41,
            column: 88
          }
        }, {
          start: {
            line: 41,
            column: 91
          },
          end: {
            line: 41,
            column: 95
          }
        }],
        line: 41
      },
      "12": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        }, {
          start: {
            line: 44,
            column: 19
          },
          end: {
            line: 46,
            column: 13
          }
        }],
        line: 42
      },
      "13": {
        loc: {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 42,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 42,
            column: 20
          }
        }, {
          start: {
            line: 42,
            column: 25
          },
          end: {
            line: 42,
            column: 33
          }
        }, {
          start: {
            line: 42,
            column: 37
          },
          end: {
            line: 42,
            column: 45
          }
        }],
        line: 42
      },
      "14": {
        loc: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "15": {
        loc: {
          start: {
            line: 71,
            column: 51
          },
          end: {
            line: 71,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 71,
            column: 79
          },
          end: {
            line: 71,
            column: 84
          }
        }, {
          start: {
            line: 71,
            column: 87
          },
          end: {
            line: 71,
            column: 96
          }
        }],
        line: 71
      },
      "16": {
        loc: {
          start: {
            line: 72,
            column: 52
          },
          end: {
            line: 72,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 52
          },
          end: {
            line: 72,
            column: 78
          }
        }, {
          start: {
            line: 72,
            column: 82
          },
          end: {
            line: 72,
            column: 91
          }
        }],
        line: 72
      },
      "17": {
        loc: {
          start: {
            line: 74,
            column: 16
          },
          end: {
            line: 78,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 16
          },
          end: {
            line: 78,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "18": {
        loc: {
          start: {
            line: 84,
            column: 16
          },
          end: {
            line: 122,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 16
          },
          end: {
            line: 122,
            column: 17
          }
        }, {
          start: {
            line: 119,
            column: 23
          },
          end: {
            line: 122,
            column: 17
          }
        }],
        line: 84
      },
      "19": {
        loc: {
          start: {
            line: 87,
            column: 34
          },
          end: {
            line: 87,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 34
          },
          end: {
            line: 87,
            column: 60
          }
        }, {
          start: {
            line: 87,
            column: 64
          },
          end: {
            line: 87,
            column: 89
          }
        }],
        line: 87
      },
      "20": {
        loc: {
          start: {
            line: 96,
            column: 20
          },
          end: {
            line: 118,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 20
          },
          end: {
            line: 118,
            column: 21
          }
        }, {
          start: {
            line: 115,
            column: 27
          },
          end: {
            line: 118,
            column: 21
          }
        }],
        line: 96
      },
      "21": {
        loc: {
          start: {
            line: 124,
            column: 33
          },
          end: {
            line: 124,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 124,
            column: 58
          },
          end: {
            line: 124,
            column: 71
          }
        }, {
          start: {
            line: 124,
            column: 74
          },
          end: {
            line: 124,
            column: 89
          }
        }],
        line: 124
      },
      "22": {
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        }, {
          start: {
            line: 140,
            column: 15
          },
          end: {
            line: 142,
            column: 9
          }
        }],
        line: 131
      },
      "23": {
        loc: {
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        }, {
          start: {
            line: 157,
            column: 15
          },
          end: {
            line: 159,
            column: 9
          }
        }],
        line: 145
      },
      "24": {
        loc: {
          start: {
            line: 178,
            column: 110
          },
          end: {
            line: 178,
            column: 261
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 178,
            column: 140
          },
          end: {
            line: 178,
            column: 171
          }
        }, {
          start: {
            line: 178,
            column: 174
          },
          end: {
            line: 178,
            column: 261
          }
        }],
        line: 178
      },
      "25": {
        loc: {
          start: {
            line: 178,
            column: 174
          },
          end: {
            line: 178,
            column: 261
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 178,
            column: 204
          },
          end: {
            line: 178,
            column: 233
          }
        }, {
          start: {
            line: 178,
            column: 236
          },
          end: {
            line: 178,
            column: 261
          }
        }],
        line: 178
      },
      "26": {
        loc: {
          start: {
            line: 179,
            column: 38
          },
          end: {
            line: 179,
            column: 148
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 179,
            column: 68
          },
          end: {
            line: 179,
            column: 80
          }
        }, {
          start: {
            line: 179,
            column: 83
          },
          end: {
            line: 179,
            column: 148
          }
        }],
        line: 179
      },
      "27": {
        loc: {
          start: {
            line: 179,
            column: 83
          },
          end: {
            line: 179,
            column: 148
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 179,
            column: 113
          },
          end: {
            line: 179,
            column: 130
          }
        }, {
          start: {
            line: 179,
            column: 133
          },
          end: {
            line: 179,
            column: 148
          }
        }],
        line: 179
      },
      "28": {
        loc: {
          start: {
            line: 202,
            column: 32
          },
          end: {
            line: 208,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 32
          },
          end: {
            line: 208,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "29": {
        loc: {
          start: {
            line: 246,
            column: 64
          },
          end: {
            line: 246,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 246,
            column: 89
          },
          end: {
            line: 246,
            column: 102
          }
        }, {
          start: {
            line: 246,
            column: 105
          },
          end: {
            line: 246,
            column: 114
          }
        }],
        line: 246
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/jack/Documents/aclue-preprod/web/src/pages/debug-posthog.tsx"],
      sourcesContent: ["import React, { useEffect, useState } from 'react';\nimport { config } from '@/config';\n\nexport default function DebugPostHog() {\n  const [logs, setLogs] = useState<string[]>([]);\n  const [posthogStatus, setPosthogStatus] = useState<'loading' | 'success' | 'error'>('loading');\n\n  const addLog = (message: string) => {\n    console.log(message);\n    setLogs(prev => [...prev, `${new Date().toISOString()}: ${message}`]);\n  };\n\n  useEffect(() => {\n    const testPostHog = async () => {\n      try {\n        addLog('=== PostHog Debug Test Starting ===');\n        \n        // Check environment variables\n        addLog(`NODE_ENV: ${process.env.NODE_ENV}`);\n        addLog(`NEXT_PUBLIC_POSTHOG_KEY: ${config.posthogKey ? 'SET' : 'MISSING'}`);\n        addLog(`NEXT_PUBLIC_POSTHOG_HOST: ${config.posthogHost || 'MISSING'}`);\n        \n        // Check if window and posthog exist\n        if (typeof window === 'undefined') {\n          addLog('ERROR: Running on server side');\n          setPosthogStatus('error');\n          return;\n        }\n        \n        addLog('Window object available');\n        \n        // Import PostHog dynamically\n        const posthog = await import('posthog-js');\n        addLog('PostHog module imported successfully');\n        \n        // Initialize PostHog manually for debugging\n        if (config.posthogKey) {\n          addLog('Initializing PostHog...');\n          posthog.default.init(config.posthogKey, {\n            api_host: config.posthogHost || 'https://app.posthog.com',\n            debug: true, // Force debug mode\n            capture_pageview: false,\n            person_profiles: 'identified_only',\n          });\n          addLog('PostHog initialized');\n          \n          // Wait a moment for initialization\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          \n          // Check if PostHog is loaded\n          if (window.posthog) {\n            addLog('PostHog is available on window object');\n            \n            // Test capturing an event\n            addLog('Sending test event...');\n            window.posthog.capture('debug_test_event', {\n              test: true,\n              timestamp: new Date().toISOString(),\n              source: 'debug_page',\n              url: window.location.href,\n            });\n            addLog('Test event sent');\n            \n            // Test page view\n            addLog('Sending page view...');\n            window.posthog.capture('$pageview', {\n              $current_url: window.location.href,\n            });\n            addLog('Page view sent');\n            \n            setPosthogStatus('success');\n            addLog('=== PostHog Debug Test Completed Successfully ===');\n          } else {\n            addLog('ERROR: PostHog not available on window object');\n            setPosthogStatus('error');\n          }\n        } else {\n          addLog('ERROR: PostHog key not configured');\n          setPosthogStatus('error');\n        }\n      } catch (error) {\n        addLog(`ERROR: ${error instanceof Error ? error.message : 'Unknown error'}`);\n        setPosthogStatus('error');\n      }\n    };\n\n    testPostHog();\n  }, []);\n\n  const sendManualEvent = () => {\n    if (window.posthog) {\n      const eventName = `manual_debug_${Date.now()}`;\n      addLog(`Sending manual event: ${eventName}`);\n      window.posthog.capture(eventName, {\n        manual: true,\n        timestamp: new Date().toISOString(),\n        user_agent: navigator.userAgent,\n      });\n      addLog('Manual event sent');\n    } else {\n      addLog('ERROR: PostHog not available for manual event');\n    }\n  };\n\n  const sendPageviewEvent = () => {\n    if (window.posthog) {\n      addLog('Sending manual $pageview event...');\n      window.posthog.capture('$pageview', {\n        $current_url: window.location.href,\n        $pathname: window.location.pathname,\n        $host: window.location.host,\n        $referrer: document.referrer,\n        page_title: document.title,\n        manual_pageview: true,\n        timestamp: new Date().toISOString(),\n      });\n      addLog('Manual $pageview event sent');\n    } else {\n      addLog('ERROR: PostHog not available for pageview event');\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-8\">\n      <div className=\"max-w-4xl mx-auto\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-8\">PostHog Debug Page</h1>\n        \n        {/* Status */}\n        <div className=\"bg-white rounded-lg shadow p-6 mb-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">Status</h2>\n          <div className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${\n            posthogStatus === 'loading' ? 'bg-yellow-100 text-yellow-800' :\n            posthogStatus === 'success' ? 'bg-green-100 text-green-800' :\n            'bg-red-100 text-red-800'\n          }`}>\n            {posthogStatus === 'loading' ? 'Testing...' :\n             posthogStatus === 'success' ? 'PostHog Working' :\n             'PostHog Error'}\n          </div>\n        </div>\n\n        {/* Manual Test */}\n        <div className=\"bg-white rounded-lg shadow p-6 mb-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">Manual Test</h2>\n          <button\n            onClick={sendManualEvent}\n            className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 mr-4\"\n          >\n            Send Manual Event\n          </button>\n          <button\n            onClick={sendPageviewEvent}\n            className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 mr-4\"\n          >\n            Send $pageview Event\n          </button>\n          <button\n            onClick={() => {\n              if (window.posthog) {\n                window.posthog.identify(`debug_user_${Date.now()}`, {\n                  email: 'debug@example.com',\n                  name: 'Debug User',\n                });\n                addLog('User identified');\n              }\n            }}\n            className=\"bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-700\"\n          >\n            Identify User\n          </button>\n        </div>\n\n        {/* Network Check */}\n        <div className=\"bg-white rounded-lg shadow p-6 mb-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">Network Test</h2>\n          <button\n            onClick={async () => {\n              try {\n                addLog('Testing direct API call...');\n                const response = await fetch('https://eu.i.posthog.com/batch/', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json',\n                  },\n                  body: JSON.stringify({\n                    api_key: config.posthogKey,\n                    batch: [{\n                      event: 'direct_api_test',\n                      properties: {\n                        distinct_id: 'debug_user',\n                        timestamp: new Date().toISOString(),\n                      },\n                    }],\n                  }),\n                });\n                addLog(`Direct API response: ${response.status} ${response.statusText}`);\n              } catch (error) {\n                addLog(`Direct API error: ${error instanceof Error ? error.message : 'Unknown'}`);\n              }\n            }}\n            className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\"\n          >\n            Test Direct API Call\n          </button>\n        </div>\n\n        {/* Logs */}\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <h2 className=\"text-xl font-semibent mb-4\">Debug Logs</h2>\n          <div className=\"bg-gray-50 rounded p-4 max-h-96 overflow-y-auto\">\n            <pre className=\"text-sm text-gray-700 whitespace-pre-wrap\">\n              {logs.join('\\n')}\n            </pre>\n          </div>\n        </div>\n\n        {/* Instructions */}\n        <div className=\"bg-blue-50 rounded-lg p-6 mt-6\">\n          <h2 className=\"text-lg font-semibold text-blue-900 mb-2\">Instructions</h2>\n          <ol className=\"text-blue-800 space-y-1\">\n            <li>1. Open browser developer tools (F12)</li>\n            <li>2. Go to Console tab to see any JavaScript errors</li>\n            <li>3. Go to Network tab to see if requests are being made to PostHog</li>\n            <li>4. Click the test buttons above</li>\n            <li>5. Check your PostHog dashboard for events</li>\n          </ol>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Make posthog available on window for debugging\ndeclare global {\n  interface Window {\n    posthog: any;\n  }\n}"],
      names: ["DebugPostHog", "logs", "setLogs", "useState", "posthogStatus", "setPosthogStatus", "addLog", "message", "console", "log", "prev", "Date", "toISOString", "useEffect", "testPostHog", "process", "env", "NODE_ENV", "config", "posthogKey", "posthogHost", "window", "posthog", "default", "init", "api_host", "debug", "capture_pageview", "person_profiles", "Promise", "resolve", "setTimeout", "capture", "test", "timestamp", "source", "url", "location", "href", "$current_url", "error", "Error", "sendManualEvent", "eventName", "now", "manual", "user_agent", "navigator", "userAgent", "sendPageviewEvent", "$pathname", "pathname", "$host", "host", "$referrer", "document", "referrer", "page_title", "title", "manual_pageview", "div", "className", "h1", "h2", "button", "onClick", "identify", "email", "name", "response", "fetch", "method", "headers", "body", "JSON", "stringify", "api_key", "batch", "event", "properties", "distinct_id", "status", "statusText", "pre", "join", "ol", "li"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dd259bee54ee9361af7090eea9ad5429ec3e0b8f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_gk31k5as = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_gk31k5as();
cov_gk31k5as().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_gk31k5as().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_gk31k5as().f[0]++;
    cov_gk31k5as().s[2]++;
    return DebugPostHog;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_gk31k5as().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_gk31k5as().s[4]++, _interop_require_wildcard(require("react")));
const _config =
/* istanbul ignore next */
(cov_gk31k5as().s[5]++, require("../config"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_gk31k5as().f[1]++;
  cov_gk31k5as().s[6]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_gk31k5as().b[0][0]++;
    cov_gk31k5as().s[7]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_gk31k5as().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_gk31k5as().s[8]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_gk31k5as().s[9]++, new WeakMap());
  /* istanbul ignore next */
  cov_gk31k5as().s[10]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_gk31k5as().f[2]++;
    cov_gk31k5as().s[11]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_gk31k5as().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_gk31k5as().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_gk31k5as().f[3]++;
  cov_gk31k5as().s[12]++;
  if (
  /* istanbul ignore next */
  (cov_gk31k5as().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_gk31k5as().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_gk31k5as().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_gk31k5as().b[2][0]++;
    cov_gk31k5as().s[13]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_gk31k5as().b[2][1]++;
  }
  cov_gk31k5as().s[14]++;
  if (
  /* istanbul ignore next */
  (cov_gk31k5as().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_gk31k5as().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_gk31k5as().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_gk31k5as().b[4][0]++;
    cov_gk31k5as().s[15]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_gk31k5as().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_gk31k5as().s[16]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_gk31k5as().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_gk31k5as().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_gk31k5as().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_gk31k5as().b[6][0]++;
    cov_gk31k5as().s[18]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_gk31k5as().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_gk31k5as().s[19]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_gk31k5as().s[20]++,
  /* istanbul ignore next */
  (cov_gk31k5as().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_gk31k5as().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_gk31k5as().s[21]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_gk31k5as().s[22]++;
    if (
    /* istanbul ignore next */
    (cov_gk31k5as().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_gk31k5as().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_gk31k5as().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_gk31k5as().s[23]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_gk31k5as().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_gk31k5as().b[11][1]++, null));
      /* istanbul ignore next */
      cov_gk31k5as().s[24]++;
      if (
      /* istanbul ignore next */
      (cov_gk31k5as().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_gk31k5as().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_gk31k5as().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_gk31k5as().b[12][0]++;
        cov_gk31k5as().s[25]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_gk31k5as().b[12][1]++;
        cov_gk31k5as().s[26]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_gk31k5as().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_gk31k5as().s[27]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_gk31k5as().s[28]++;
  if (cache) {
    /* istanbul ignore next */
    cov_gk31k5as().b[14][0]++;
    cov_gk31k5as().s[29]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_gk31k5as().b[14][1]++;
  }
  cov_gk31k5as().s[30]++;
  return newObj;
}
function DebugPostHog() {
  /* istanbul ignore next */
  cov_gk31k5as().f[4]++;
  const [logs, setLogs] =
  /* istanbul ignore next */
  (cov_gk31k5as().s[31]++, (0, _react.useState)([]));
  const [posthogStatus, setPosthogStatus] =
  /* istanbul ignore next */
  (cov_gk31k5as().s[32]++, (0, _react.useState)("loading"));
  /* istanbul ignore next */
  cov_gk31k5as().s[33]++;
  const addLog = message => {
    /* istanbul ignore next */
    cov_gk31k5as().f[5]++;
    cov_gk31k5as().s[34]++;
    console.log(message);
    /* istanbul ignore next */
    cov_gk31k5as().s[35]++;
    setLogs(prev => {
      /* istanbul ignore next */
      cov_gk31k5as().f[6]++;
      cov_gk31k5as().s[36]++;
      return [...prev, `${new Date().toISOString()}: ${message}`];
    });
  };
  /* istanbul ignore next */
  cov_gk31k5as().s[37]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_gk31k5as().f[7]++;
    cov_gk31k5as().s[38]++;
    const testPostHog = async () => {
      /* istanbul ignore next */
      cov_gk31k5as().f[8]++;
      cov_gk31k5as().s[39]++;
      try {
        /* istanbul ignore next */
        cov_gk31k5as().s[40]++;
        addLog("=== PostHog Debug Test Starting ===");
        // Check environment variables
        /* istanbul ignore next */
        cov_gk31k5as().s[41]++;
        addLog(`NODE_ENV: ${process.env.NODE_ENV}`);
        /* istanbul ignore next */
        cov_gk31k5as().s[42]++;
        addLog(`NEXT_PUBLIC_POSTHOG_KEY: ${_config.config.posthogKey ?
        /* istanbul ignore next */
        (cov_gk31k5as().b[15][0]++, "SET") :
        /* istanbul ignore next */
        (cov_gk31k5as().b[15][1]++, "MISSING")}`);
        /* istanbul ignore next */
        cov_gk31k5as().s[43]++;
        addLog(`NEXT_PUBLIC_POSTHOG_HOST: ${
        /* istanbul ignore next */
        (cov_gk31k5as().b[16][0]++, _config.config.posthogHost) ||
        /* istanbul ignore next */
        (cov_gk31k5as().b[16][1]++, "MISSING")}`);
        // Check if window and posthog exist
        /* istanbul ignore next */
        cov_gk31k5as().s[44]++;
        if (typeof window === "undefined") {
          /* istanbul ignore next */
          cov_gk31k5as().b[17][0]++;
          cov_gk31k5as().s[45]++;
          addLog("ERROR: Running on server side");
          /* istanbul ignore next */
          cov_gk31k5as().s[46]++;
          setPosthogStatus("error");
          /* istanbul ignore next */
          cov_gk31k5as().s[47]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_gk31k5as().b[17][1]++;
        }
        cov_gk31k5as().s[48]++;
        addLog("Window object available");
        // Import PostHog dynamically
        const posthog =
        /* istanbul ignore next */
        (cov_gk31k5as().s[49]++, await Promise.resolve().then(() => {
          /* istanbul ignore next */
          cov_gk31k5as().f[9]++;
          cov_gk31k5as().s[50]++;
          return /*#__PURE__*/_interop_require_wildcard(require("posthog-js"));
        }));
        /* istanbul ignore next */
        cov_gk31k5as().s[51]++;
        addLog("PostHog module imported successfully");
        // Initialize PostHog manually for debugging
        /* istanbul ignore next */
        cov_gk31k5as().s[52]++;
        if (_config.config.posthogKey) {
          /* istanbul ignore next */
          cov_gk31k5as().b[18][0]++;
          cov_gk31k5as().s[53]++;
          addLog("Initializing PostHog...");
          /* istanbul ignore next */
          cov_gk31k5as().s[54]++;
          posthog.default.init(_config.config.posthogKey, {
            api_host:
            /* istanbul ignore next */
            (cov_gk31k5as().b[19][0]++, _config.config.posthogHost) ||
            /* istanbul ignore next */
            (cov_gk31k5as().b[19][1]++, "https://app.posthog.com"),
            debug: true,
            capture_pageview: false,
            person_profiles: "identified_only"
          });
          /* istanbul ignore next */
          cov_gk31k5as().s[55]++;
          addLog("PostHog initialized");
          // Wait a moment for initialization
          /* istanbul ignore next */
          cov_gk31k5as().s[56]++;
          await new Promise(resolve => {
            /* istanbul ignore next */
            cov_gk31k5as().f[10]++;
            cov_gk31k5as().s[57]++;
            return setTimeout(resolve, 1000);
          });
          // Check if PostHog is loaded
          /* istanbul ignore next */
          cov_gk31k5as().s[58]++;
          if (window.posthog) {
            /* istanbul ignore next */
            cov_gk31k5as().b[20][0]++;
            cov_gk31k5as().s[59]++;
            addLog("PostHog is available on window object");
            // Test capturing an event
            /* istanbul ignore next */
            cov_gk31k5as().s[60]++;
            addLog("Sending test event...");
            /* istanbul ignore next */
            cov_gk31k5as().s[61]++;
            window.posthog.capture("debug_test_event", {
              test: true,
              timestamp: new Date().toISOString(),
              source: "debug_page",
              url: window.location.href
            });
            /* istanbul ignore next */
            cov_gk31k5as().s[62]++;
            addLog("Test event sent");
            // Test page view
            /* istanbul ignore next */
            cov_gk31k5as().s[63]++;
            addLog("Sending page view...");
            /* istanbul ignore next */
            cov_gk31k5as().s[64]++;
            window.posthog.capture("$pageview", {
              $current_url: window.location.href
            });
            /* istanbul ignore next */
            cov_gk31k5as().s[65]++;
            addLog("Page view sent");
            /* istanbul ignore next */
            cov_gk31k5as().s[66]++;
            setPosthogStatus("success");
            /* istanbul ignore next */
            cov_gk31k5as().s[67]++;
            addLog("=== PostHog Debug Test Completed Successfully ===");
          } else {
            /* istanbul ignore next */
            cov_gk31k5as().b[20][1]++;
            cov_gk31k5as().s[68]++;
            addLog("ERROR: PostHog not available on window object");
            /* istanbul ignore next */
            cov_gk31k5as().s[69]++;
            setPosthogStatus("error");
          }
        } else {
          /* istanbul ignore next */
          cov_gk31k5as().b[18][1]++;
          cov_gk31k5as().s[70]++;
          addLog("ERROR: PostHog key not configured");
          /* istanbul ignore next */
          cov_gk31k5as().s[71]++;
          setPosthogStatus("error");
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_gk31k5as().s[72]++;
        addLog(`ERROR: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_gk31k5as().b[21][0]++, error.message) :
        /* istanbul ignore next */
        (cov_gk31k5as().b[21][1]++, "Unknown error")}`);
        /* istanbul ignore next */
        cov_gk31k5as().s[73]++;
        setPosthogStatus("error");
      }
    };
    /* istanbul ignore next */
    cov_gk31k5as().s[74]++;
    testPostHog();
  }, []);
  /* istanbul ignore next */
  cov_gk31k5as().s[75]++;
  const sendManualEvent = () => {
    /* istanbul ignore next */
    cov_gk31k5as().f[11]++;
    cov_gk31k5as().s[76]++;
    if (window.posthog) {
      /* istanbul ignore next */
      cov_gk31k5as().b[22][0]++;
      const eventName =
      /* istanbul ignore next */
      (cov_gk31k5as().s[77]++, `manual_debug_${Date.now()}`);
      /* istanbul ignore next */
      cov_gk31k5as().s[78]++;
      addLog(`Sending manual event: ${eventName}`);
      /* istanbul ignore next */
      cov_gk31k5as().s[79]++;
      window.posthog.capture(eventName, {
        manual: true,
        timestamp: new Date().toISOString(),
        user_agent: navigator.userAgent
      });
      /* istanbul ignore next */
      cov_gk31k5as().s[80]++;
      addLog("Manual event sent");
    } else {
      /* istanbul ignore next */
      cov_gk31k5as().b[22][1]++;
      cov_gk31k5as().s[81]++;
      addLog("ERROR: PostHog not available for manual event");
    }
  };
  /* istanbul ignore next */
  cov_gk31k5as().s[82]++;
  const sendPageviewEvent = () => {
    /* istanbul ignore next */
    cov_gk31k5as().f[12]++;
    cov_gk31k5as().s[83]++;
    if (window.posthog) {
      /* istanbul ignore next */
      cov_gk31k5as().b[23][0]++;
      cov_gk31k5as().s[84]++;
      addLog("Sending manual $pageview event...");
      /* istanbul ignore next */
      cov_gk31k5as().s[85]++;
      window.posthog.capture("$pageview", {
        $current_url: window.location.href,
        $pathname: window.location.pathname,
        $host: window.location.host,
        $referrer: document.referrer,
        page_title: document.title,
        manual_pageview: true,
        timestamp: new Date().toISOString()
      });
      /* istanbul ignore next */
      cov_gk31k5as().s[86]++;
      addLog("Manual $pageview event sent");
    } else {
      /* istanbul ignore next */
      cov_gk31k5as().b[23][1]++;
      cov_gk31k5as().s[87]++;
      addLog("ERROR: PostHog not available for pageview event");
    }
  };
  /* istanbul ignore next */
  cov_gk31k5as().s[88]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: "min-h-screen bg-gray-50 p-8",
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "max-w-4xl mx-auto",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
        className: "text-3xl font-bold text-gray-900 mb-8",
        children: "PostHog Debug Page"
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-white rounded-lg shadow p-6 mb-6",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-xl font-semibold mb-4",
          children: "Status"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: `inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${posthogStatus === "loading" ?
          /* istanbul ignore next */
          (cov_gk31k5as().b[24][0]++, "bg-yellow-100 text-yellow-800") :
          /* istanbul ignore next */
          (cov_gk31k5as().b[24][1]++, posthogStatus === "success" ?
          /* istanbul ignore next */
          (cov_gk31k5as().b[25][0]++, "bg-green-100 text-green-800") :
          /* istanbul ignore next */
          (cov_gk31k5as().b[25][1]++, "bg-red-100 text-red-800"))}`,
          children: posthogStatus === "loading" ?
          /* istanbul ignore next */
          (cov_gk31k5as().b[26][0]++, "Testing...") :
          /* istanbul ignore next */
          (cov_gk31k5as().b[26][1]++, posthogStatus === "success" ?
          /* istanbul ignore next */
          (cov_gk31k5as().b[27][0]++, "PostHog Working") :
          /* istanbul ignore next */
          (cov_gk31k5as().b[27][1]++, "PostHog Error"))
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-white rounded-lg shadow p-6 mb-6",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-xl font-semibold mb-4",
          children: "Manual Test"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          onClick: sendManualEvent,
          className: "bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 mr-4",
          children: "Send Manual Event"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          onClick: sendPageviewEvent,
          className: "bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 mr-4",
          children: "Send $pageview Event"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          onClick: () => {
            /* istanbul ignore next */
            cov_gk31k5as().f[13]++;
            cov_gk31k5as().s[89]++;
            if (window.posthog) {
              /* istanbul ignore next */
              cov_gk31k5as().b[28][0]++;
              cov_gk31k5as().s[90]++;
              window.posthog.identify(`debug_user_${Date.now()}`, {
                email: "debug@example.com",
                name: "Debug User"
              });
              /* istanbul ignore next */
              cov_gk31k5as().s[91]++;
              addLog("User identified");
            } else
            /* istanbul ignore next */
            {
              cov_gk31k5as().b[28][1]++;
            }
          },
          className: "bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-700",
          children: "Identify User"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-white rounded-lg shadow p-6 mb-6",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-xl font-semibold mb-4",
          children: "Network Test"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          onClick: async () => {
            /* istanbul ignore next */
            cov_gk31k5as().f[14]++;
            cov_gk31k5as().s[92]++;
            try {
              /* istanbul ignore next */
              cov_gk31k5as().s[93]++;
              addLog("Testing direct API call...");
              const response =
              /* istanbul ignore next */
              (cov_gk31k5as().s[94]++, await fetch("https://eu.i.posthog.com/batch/", {
                method: "POST",
                headers: {
                  "Content-Type": "application/json"
                },
                body: JSON.stringify({
                  api_key: _config.config.posthogKey,
                  batch: [{
                    event: "direct_api_test",
                    properties: {
                      distinct_id: "debug_user",
                      timestamp: new Date().toISOString()
                    }
                  }]
                })
              }));
              /* istanbul ignore next */
              cov_gk31k5as().s[95]++;
              addLog(`Direct API response: ${response.status} ${response.statusText}`);
            } catch (error) {
              /* istanbul ignore next */
              cov_gk31k5as().s[96]++;
              addLog(`Direct API error: ${error instanceof Error ?
              /* istanbul ignore next */
              (cov_gk31k5as().b[29][0]++, error.message) :
              /* istanbul ignore next */
              (cov_gk31k5as().b[29][1]++, "Unknown")}`);
            }
          },
          className: "bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700",
          children: "Test Direct API Call"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-white rounded-lg shadow p-6",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-xl font-semibent mb-4",
          children: "Debug Logs"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "bg-gray-50 rounded p-4 max-h-96 overflow-y-auto",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("pre", {
            className: "text-sm text-gray-700 whitespace-pre-wrap",
            children: logs.join("\n")
          })
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-blue-50 rounded-lg p-6 mt-6",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-lg font-semibold text-blue-900 mb-2",
          children: "Instructions"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("ol", {
          className: "text-blue-800 space-y-1",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("li", {
            children: "1. Open browser developer tools (F12)"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
            children: "2. Go to Console tab to see any JavaScript errors"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
            children: "3. Go to Network tab to see if requests are being made to PostHog"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
            children: "4. Click the test buttons above"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
            children: "5. Check your PostHog dashboard for events"
          })]
        })]
      })]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,