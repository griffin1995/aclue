{"version":3,"sources":["/home/jack/Documents/aclue-preprod/web/src/components/swipe/WorkingSwipeInterface.tsx"],"sourcesContent":["/**\n * WorkingSwipeInterface Component\n * \n * Production-ready swipe interface for product discovery and preference collection.\n * This component was specifically created to resolve rendering issues with the original\n * SwipeInterface that had complex dependencies and animation conflicts.\n * \n * Key Features:\n *   - Stable, dependency-minimal implementation\n *   - Real Amazon product integration with fallback mock data\n *   - Tinder-style swipe gestures (left: dislike, right: like)\n *   - Session progress tracking and completion handling\n *   - Responsive design with proper CSS layout\n *   - Loading states and error handling\n * \n * Critical CSS Requirements (from CLAUDE.md):\n *   - Main container: min-h-96 (prevents flex-1 collapse)\n *   - Product cards: absolute inset-4 positioning\n *   - Avoids framer-motion and complex animations\n * \n * Usage:\n *   <WorkingSwipeInterface \n *     sessionType=\"discovery\"\n *     onSessionComplete={(session) => handleComplete(session)}\n *     onRecommendationsReady={() => navigateToRecommendations()}\n *   />\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { Gift, RotateCcw } from 'lucide-react';\nimport { api } from '@/lib/api';\n\n// ==============================================================================\n// TYPE DEFINITIONS\n// ==============================================================================\n\n/**\n * Props interface for WorkingSwipeInterface component.\n * \n * Provides configuration options for different swipe session types\n * and callback handlers for session lifecycle events.\n */\ninterface WorkingSwipeInterfaceProps {\n  sessionType?: string;                           // Type of swipe session (\"discovery\", \"onboarding\", \"gift_selection\")\n  onSessionComplete?: (session: any) => void;     // Called when user completes swipe session\n  onRecommendationsReady?: () => void;            // Called when recommendations should be generated\n  className?: string;                             // Additional CSS classes for styling\n}\n\n/**\n * WorkingSwipeInterface functional component.\n * \n * Manages product data fetching, swipe state, and user interactions\n * for the core product discovery experience.\n */\nexport const WorkingSwipeInterface: React.FC<WorkingSwipeInterfaceProps> = ({\n  sessionType = 'discovery',      // Default to general discovery session\n  onSessionComplete,              // Optional session completion callback\n  className = '',                 // Optional additional styling\n}) => {\n  // ===========================================================================\n  // COMPONENT STATE\n  // ===========================================================================\n  \n  const [isLoading, setIsLoading] = useState(true);     // Loading state for initial data fetch\n  const [products, setProducts] = useState<any[]>([]);  // Array of products to swipe through\n  const [currentIndex, setCurrentIndex] = useState(0);  // Index of currently displayed product\n\n  // ===========================================================================\n  // DATA FETCHING FUNCTIONS\n  // ===========================================================================\n  \n  /**\n   * Fetch real Amazon products from the backend API.\n   * \n   * Attempts to load real product data from the backend. If the API call fails\n   * (e.g., backend not running, network issues), falls back to mock data to\n   * ensure the component remains functional during development.\n   * \n   * API Integration:\n   *   - Calls /api/v1/products/ endpoint with limit parameter\n   *   - Uses absolute URL for development (localhost:8000)\n   *   - In production, would use relative URLs with proxy\n   * \n   * Error Handling:\n   *   - Network errors: Logs error and returns mock data\n   *   - API errors: Throws error and falls back to mock data\n   *   - Malformed response: Handles gracefully with fallback\n   * \n   * Performance:\n   *   - Limits to 5 products for optimal swipe session length\n   *   - Async/await pattern for clean error handling\n   *   - Mock data fallback ensures UI never breaks\n   * \n   * Returns:\n   *   Promise<Product[]>: Array of product objects for swiping\n   */\n  const fetchProducts = async () => {\n    try {\n      // Attempt to fetch real products from backend API using authenticated client\n      const response = await api.getProducts({ limit: 5 });\n      return response.data || response; // Handle both wrapped and direct responses\n    } catch (error) {\n      console.error('Failed to fetch products from API, using mock data:', error);\n      // Fallback to local mock data for development reliability\n      return [\n        // ===========================================================================\n        // MOCK PRODUCT DATA\n        // ===========================================================================\n        // High-quality mock products for development and testing\n        \n        {\n          id: '1',\n          title: 'Wireless Bluetooth Headphones',\n          description: 'Premium noise-cancelling headphones with 30-hour battery life',\n          price: 79.99,\n          currency: 'GBP',\n          image_url: 'https://picsum.photos/400/300?random=1',\n          brand: 'AudioTech'\n        },\n        {\n          id: '2',\n          title: 'Smart Fitness Watch',\n          description: 'Advanced smartwatch with health monitoring features',\n          price: 199.99,\n          currency: 'GBP',\n          image_url: 'https://picsum.photos/400/300?random=2',\n          brand: 'FitTech'\n        },\n        {\n          id: '3',\n          title: 'Coffee Bean Gift Set',\n          description: 'Premium coffee beans from around the world',\n          price: 45.00,\n          currency: 'GBP',\n          image_url: 'https://picsum.photos/400/300?random=3',\n          brand: 'RoastMaster'\n        }\n      ];\n    }\n  };\n\n  // ===========================================================================\n  // COMPONENT INITIALIZATION\n  // ===========================================================================\n  \n  /**\n   * Initialize component with product data on mount.\n   * \n   * Loads products asynchronously and manages loading state for smooth UX.\n   * Uses empty dependency array to run only once on component mount.\n   */\n  useEffect(() => {\n    const loadProducts = async () => {\n      setIsLoading(true);               // Show loading spinner\n      const products = await fetchProducts();  // Fetch from API or fallback to mock\n      setProducts(products);            // Set products for swipe interface\n      setIsLoading(false);              // Hide loading spinner\n    };\n    \n    loadProducts();\n  }, []);\n\n  // ===========================================================================\n  // KEYBOARD INTERACTION HANDLING\n  // ===========================================================================\n  \n  /**\n   * Setup keyboard event handlers for accessibility and power users.\n   * \n   * Provides keyboard shortcuts for swipe actions:\n   *   - Left Arrow: Dislike current product\n   *   - Right Arrow / Space: Like current product\n   *   - Prevents default browser behavior\n   * \n   * Accessibility Benefits:\n   *   - Keyboard navigation for users who can't use mouse/touch\n   *   - Faster interaction for power users\n   *   - Consistent with common UI patterns\n   */\n  useEffect(() => {\n    const handleKeyPress = (event: KeyboardEvent) => {\n      // Don't handle keys during loading or when no products available\n      if (isLoading || products.length === 0) return;\n      \n      switch (event.key) {\n        case 'ArrowLeft':\n          event.preventDefault();       // Prevent browser navigation\n          handleSwipe('left');          // Dislike current product\n          break;\n        case 'ArrowRight':\n          event.preventDefault();       // Prevent browser navigation\n          handleSwipe('right');         // Like current product\n          break;\n        case ' ':                       // Spacebar (common like action)\n        case 'Spacebar':\n          event.preventDefault();       // Prevent page scroll\n          handleSwipe('right');         // Like current product\n          break;\n      }\n    };\n\n    // Add global keyboard listener\n    window.addEventListener('keydown', handleKeyPress);\n    \n    // Cleanup listener on unmount to prevent memory leaks\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [isLoading, products.length, currentIndex]);\n\n  // ===========================================================================\n  // SWIPE INTERACTION HANDLERS\n  // ===========================================================================\n\n  /**\n   * Handle swipe gesture or button click for product preference.\n   * \n   * Records user preference and advances to next product. When session\n   * is complete, triggers callback for parent component handling.\n   * \n   * Future Enhancements:\n   *   - Send preference data to backend API\n   *   - Track swipe timing and hesitation for ML insights\n   *   - Add haptic feedback for mobile devices\n   * \n   * @param direction - Swipe direction ('left' for dislike, 'right' for like)\n   */\n  const handleSwipe = (direction: 'left' | 'right') => {\n    console.log(`Swiped ${direction} on product`, products[currentIndex]?.title);\n    \n    // TODO: Send swipe data to backend for preference learning\n    // await fetch('/api/v1/swipes/', {\n    //   method: 'POST',\n    //   body: JSON.stringify({\n    //     product_id: currentProduct.id,\n    //     direction: direction === 'left' ? 'dislike' : 'like',\n    //     session_id: sessionId\n    //   })\n    // });\n    \n    if (currentIndex < products.length - 1) {\n      // Move to next product\n      setCurrentIndex(currentIndex + 1);\n    } else {\n      // Session complete - trigger callback for parent handling\n      if (onSessionComplete) {\n        onSessionComplete({ \n          completed: true,\n          totalSwipes: products.length,\n          sessionType: sessionType\n        });\n      }\n    }\n  };\n\n  /**\n   * Reset swipe session to beginning.\n   * \n   * Allows users to restart the session without reloading the component.\n   * Useful for testing different preference patterns or if user wants\n   * to re-evaluate products.\n   */\n  const resetSession = () => {\n    setCurrentIndex(0);\n  };\n\n  const currentProduct = products[currentIndex];\n\n  return (\n    <div className={`relative w-full h-full flex flex-col ${className}`}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 bg-white/80 backdrop-blur-sm border-b border-gray-200\">\n        <div className=\"flex items-center gap-3\">\n          <Gift className=\"w-6 h-6 text-primary-600\" />\n          <div>\n            <h2 className=\"font-semibold text-gray-900\">Discover Products</h2>\n            <p className=\"text-sm text-gray-600\">\n              {currentIndex + 1} of {products.length}\n            </p>\n          </div>\n        </div>\n        <button\n          onClick={resetSession}\n          className=\"p-2 text-gray-600 hover:text-primary-600 transition-colors\"\n          title=\"Reset session\"\n        >\n          <RotateCcw className=\"w-5 h-5\" />\n        </button>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"flex-1 relative overflow-hidden bg-gradient-to-br from-primary-50 to-secondary-50 min-h-96\">\n        {isLoading ? (\n          // Loading state\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <div className=\"text-center\">\n              <div className=\"w-12 h-12 border-4 border-primary-200 border-t-primary-600 rounded-full animate-spin mx-auto\" />\n              <p className=\"mt-4 text-gray-600\">Loading products...</p>\n            </div>\n          </div>\n        ) : currentProduct ? (\n          // Product card\n          <div className=\"absolute inset-4\">\n            <div className=\"w-full h-full bg-white rounded-2xl shadow-2xl overflow-hidden\">\n              {/* Product Image */}\n              <div className=\"relative w-full h-2/3\">\n                <img\n                  src={currentProduct.image_url}\n                  alt={currentProduct.title}\n                  className=\"w-full h-full object-cover\"\n                />\n                <div className=\"absolute inset-0 bg-gradient-to-t from-black/30 via-transparent to-transparent\" />\n              </div>\n\n              {/* Product Information */}\n              <div className=\"p-6 h-1/3 flex flex-col justify-between\">\n                <div className=\"flex-1\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 line-clamp-2\">\n                    {currentProduct.title}\n                  </h3>\n                  <p className=\"text-sm text-gray-600 mt-1\">{currentProduct.brand}</p>\n                  <p className=\"text-sm text-gray-600 mt-2 line-clamp-2\">\n                    {currentProduct.description}\n                  </p>\n                  <div className=\"flex items-center justify-between mt-3\">\n                    <span className=\"text-xl font-bold text-gray-900\">\n                      £{currentProduct.price.toFixed(2)}\n                    </span>\n                    {currentProduct.affiliate_url && (\n                      <a\n                        href={currentProduct.affiliate_url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"text-xs bg-amazon-orange text-white px-2 py-1 rounded hover:bg-amazon-orange-dark transition-colors\"\n                        style={{ backgroundColor: '#FF9900' }}\n                      >\n                        View on Amazon\n                      </a>\n                    )}\n                  </div>\n                </div>\n\n                {/* Action Buttons */}\n                <div className=\"flex items-center justify-center gap-4 mt-4\">\n                  <button\n                    onClick={() => handleSwipe('left')}\n                    className=\"w-12 h-12 bg-gray-100 hover:bg-red-100 rounded-full flex items-center justify-center transition-colors group\"\n                  >\n                    <span className=\"text-2xl group-hover:text-red-500\">✕</span>\n                  </button>\n                  <button\n                    onClick={() => handleSwipe('right')}\n                    className=\"w-12 h-12 bg-gray-100 hover:bg-green-100 rounded-full flex items-center justify-center transition-colors group\"\n                  >\n                    <span className=\"text-2xl group-hover:text-green-500\">♥</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          // Session complete\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <div className=\"text-center max-w-md\">\n              <div className=\"w-16 h-16 bg-primary-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Gift className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                Session Complete!\n              </h3>\n              <p className=\"text-gray-600 mb-6\">\n                Great job! We've learned about your preferences.\n              </p>\n              <button\n                onClick={resetSession}\n                className=\"px-6 py-3 bg-primary-600 text-white rounded-lg font-medium hover:bg-primary-700 transition-colors\"\n              >\n                Start New Session\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Instructions */}\n      {currentProduct && currentIndex < 3 && (\n        <div className=\"absolute bottom-20 left-1/2 transform -translate-x-1/2 bg-black/80 text-white px-4 py-2 rounded-lg text-sm text-center max-w-xs\">\n          <p>← Dislike • → Like</p>\n          <p className=\"text-xs opacity-75 mt-1\">Or use the buttons below</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WorkingSwipeInterface;"],"names":["WorkingSwipeInterface","sessionType","onSessionComplete","className","isLoading","setIsLoading","useState","products","setProducts","currentIndex","setCurrentIndex","fetchProducts","response","api","getProducts","limit","data","error","console","id","title","description","price","currency","image_url","brand","useEffect","loadProducts","handleKeyPress","event","length","key","preventDefault","handleSwipe","window","addEventListener","removeEventListener","direction","log","completed","totalSwipes","resetSession","currentProduct","div","Gift","h2","p","button","onClick","RotateCcw","img","src","alt","h3","span","toFixed","affiliate_url","a","href","target","rel","style","backgroundColor"],"mappings":"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"}