{"version":3,"names":["SwipeInterface","cov_35te7nxdv","f","s","default","_default","sessionType","b","categoryFocus","targetRecipient","onSessionComplete","onRecommendationsReady","className","swipeState","setSwipeState","_react","useState","cards","currentIndex","isLoading","hasMore","sessionId","swipeCount","likeCount","dislikeCount","session","setSession","showProgress","setShowProgress","sessionStartTime","useRef","Date","now","lastSwipeTime","initializeSession","useCallback","prev","sessionData","session_type","category_focus","target_recipient","context","user_agent","navigator","userAgent","screen_size","window","innerWidth","innerHeight","started_at","toISOString","response","_api","api","createSwipeSession","newSession","data","id","current","loadMoreProducts","error","console","_reacthottoast","params","limit","_config","appConfig","swipe","cardPreloadCount","exclude_seen","session_id","category","getProducts","products","length","newCards","map","product","index","position","isVisible","isAnimating","handleSwipe","direction","gesture","currentCard","currentTime","timeSinceLastSwipe","swipeData","product_id","content_type","session_context","timing_ms","card_position","session_duration","recordSwipe","newSwipeCount","newLikeCount","newDislikeCount","remainingCards","maxSwipesPerSession","completeSession","success","vibrationPattern","vibrate","finalSwipeCount","finalLikeCount","finalDislikeCount","sessionDuration","completedSession","is_completed","completed_at","swipe_count","like_count","dislike_count","handleProductClick","trackEvent","event_name","properties","product_name","name","source","open","affiliate_url","resetSession","useEffect","handleKeyPress","event","velocity","distance","duration","startPosition","x","y","endPosition","key","preventDefault","addEventListener","removeEventListener","nextCards","slice","progress","Math","min","_jsxruntime","jsxs","style","touchAction","jsx","_lucidereact","Gift","onClick","title","RotateCcw","Settings","_framermotion","motion","div","initial","width","animate","transition","toString","rotate","repeat","Infinity","ease","JSON","stringify","_SwipeCard","SwipeCard","isActive","onSwipe","onProductClick","card","Zap","button","whileHover","scale","whileTap","opacity","exit","Info"],"sources":["/home/jack/Documents/aclue-preprod/web/src/components/swipe/SwipeInterface.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { motion } from 'framer-motion';\nimport { RotateCcw, Settings, Info, Zap, Gift } from 'lucide-react';\nimport { SwipeCard } from './SwipeCard';\nimport { Product, SwipeGesture, SwipeSession, SwipeState } from '@/types';\nimport { api } from '@/lib/api';\nimport { appConfig } from '@/config';\nimport toast from 'react-hot-toast';\n\ninterface SwipeInterfaceProps {\n  sessionType?: 'onboarding' | 'discovery' | 'category_exploration' | 'gift_selection';\n  categoryFocus?: string;\n  targetRecipient?: string;\n  onSessionComplete?: (session: SwipeSession) => void;\n  onRecommendationsReady?: () => void;\n  className?: string;\n}\n\nexport const SwipeInterface: React.FC<SwipeInterfaceProps> = ({\n  sessionType = 'discovery',\n  categoryFocus,\n  targetRecipient,\n  onSessionComplete,\n  onRecommendationsReady,\n  className = '',\n}) => {\n  const [swipeState, setSwipeState] = useState<SwipeState>({\n    cards: [],\n    currentIndex: 0,\n    isLoading: true,\n    hasMore: true,\n    sessionId: null,\n    swipeCount: 0,\n    likeCount: 0,\n    dislikeCount: 0,\n  });\n\n  const [session, setSession] = useState<SwipeSession | null>(null);\n  const [showProgress, setShowProgress] = useState(false);\n  const sessionStartTime = useRef<number>(Date.now());\n  const lastSwipeTime = useRef<number>(Date.now());\n\n  // Initialize swipe session\n  const initializeSession = useCallback(async () => {\n    try {\n      setSwipeState(prev => ({ ...prev, isLoading: true }));\n\n      const sessionData = {\n        session_type: sessionType,\n        category_focus: categoryFocus,\n        target_recipient: targetRecipient,\n        context: {\n          user_agent: navigator.userAgent,\n          screen_size: `${window.innerWidth}x${window.innerHeight}`,\n          started_at: new Date().toISOString(),\n        }\n      };\n\n      const response = await api.createSwipeSession(sessionData);\n      const newSession = response.data;\n\n\n      setSession(newSession);\n      setSwipeState(prev => ({\n        ...prev,\n        sessionId: newSession.id,\n      }));\n\n      sessionStartTime.current = Date.now();\n      await loadMoreProducts(newSession.id);\n    } catch (error) {\n      console.error('Failed to initialize swipe session:', error);\n      toast.error('Failed to start swipe session. Please try again.');\n    }\n  }, [sessionType, categoryFocus, targetRecipient]);\n\n  // Load more products for swiping\n  const loadMoreProducts = useCallback(async (sessionId: string) => {\n    try {\n      const params = {\n        limit: appConfig.swipe.cardPreloadCount,\n        exclude_seen: true,\n        session_id: sessionId,\n      };\n\n      if (categoryFocus) {\n        params.category = categoryFocus;\n      }\n\n      const response = await api.getProducts(params);\n      const products = response.data;\n\n      if (products.length === 0) {\n        setSwipeState(prev => ({ ...prev, hasMore: false, isLoading: false }));\n        return;\n      }\n\n      const newCards = products.map((product: Product, index: number) => ({\n        id: product.id,\n        product,\n        position: swipeState.cards.length + index,\n        isVisible: true,\n        isAnimating: false,\n      }));\n\n      setSwipeState(prev => ({\n        ...prev,\n        cards: [...prev.cards, ...newCards],\n        isLoading: false,\n        hasMore: products.length === appConfig.swipe.cardPreloadCount,\n      }));\n    } catch (error) {\n      console.error('Failed to load products:', error);\n      setSwipeState(prev => ({ ...prev, isLoading: false }));\n      toast.error('Failed to load products. Please try again.');\n    }\n  }, [categoryFocus, swipeState.cards.length]);\n\n  // Handle swipe action\n  const handleSwipe = useCallback(async (direction: 'left' | 'right' | 'up' | 'down', gesture: SwipeGesture) => {\n    if (!session?.id || !swipeState.sessionId || swipeState.currentIndex >= swipeState.cards.length) {\n      return;\n    }\n\n    const currentCard = swipeState.cards[swipeState.currentIndex];\n    const currentTime = Date.now();\n    const timeSinceLastSwipe = currentTime - lastSwipeTime.current;\n\n    try {\n      // Record the swipe interaction\n      const swipeData = {\n        product_id: currentCard.product.id,\n        direction,\n        content_type: 'product' as const,\n        session_context: {\n          gesture,\n          timing_ms: timeSinceLastSwipe,\n          card_position: swipeState.currentIndex,\n          session_duration: currentTime - sessionStartTime.current,\n        }\n      };\n\n      await api.recordSwipe(session.id, swipeData);\n\n      // Update local state\n      const newSwipeCount = swipeState.swipeCount + 1;\n      const newLikeCount = swipeState.likeCount + (direction === 'right' || direction === 'up' ? 1 : 0);\n      const newDislikeCount = swipeState.dislikeCount + (direction === 'left' || direction === 'down' ? 1 : 0);\n\n      setSwipeState(prev => ({\n        ...prev,\n        currentIndex: prev.currentIndex + 1,\n        swipeCount: newSwipeCount,\n        likeCount: newLikeCount,\n        dislikeCount: newDislikeCount,\n      }));\n\n      lastSwipeTime.current = currentTime;\n\n      // Show progress after 10 swipes\n      if (newSwipeCount >= 10 && !showProgress) {\n        setShowProgress(true);\n      }\n\n      // Check if we need to load more cards\n      const remainingCards = swipeState.cards.length - swipeState.currentIndex - 1;\n      if (remainingCards <= 2 && swipeState.hasMore && !swipeState.isLoading) {\n        await loadMoreProducts(session.id);\n      }\n\n      // Check if session is complete\n      if (newSwipeCount >= appConfig.swipe.maxSwipesPerSession || remainingCards === 0) {\n        await completeSession(newSwipeCount, newLikeCount, newDislikeCount);\n      }\n\n      // Generate recommendations after sufficient swipes\n      if (newSwipeCount >= 10 && newSwipeCount % 10 === 0) {\n        if (onRecommendationsReady) {\n          onRecommendationsReady();\n        }\n        toast.success('New recommendations are ready!');\n      }\n\n      // Enhanced haptic feedback for mobile\n      if (typeof window !== 'undefined' && 'vibrate' in navigator) {\n        const vibrationPattern = {\n          'right': 50,  // Like - short pleasant buzz\n          'up': [30, 20, 30],  // Super like - double buzz\n          'left': 100,  // Dislike - longer buzz\n          'down': 75   // Down swipe\n        }[direction] || 50;\n        \n        navigator.vibrate(vibrationPattern);\n      }\n\n    } catch (error) {\n      console.error('Failed to record swipe:', error);\n      toast.error('Failed to record swipe. Please try again.');\n    }\n  }, [session, swipeState, showProgress, onRecommendationsReady, loadMoreProducts]);\n\n  // Complete the session\n  const completeSession = useCallback(async (\n    finalSwipeCount: number,\n    finalLikeCount: number,\n    finalDislikeCount: number\n  ) => {\n    if (!session) return;\n\n    try {\n      const sessionDuration = Date.now() - sessionStartTime.current;\n      \n      // The session completion is handled by the backend\n      // We just need to notify our parent component\n      const completedSession: SwipeSession = {\n        ...session,\n        is_completed: true,\n        completed_at: new Date().toISOString(),\n        swipe_count: finalSwipeCount,\n        like_count: finalLikeCount,\n        dislike_count: finalDislikeCount,\n        session_duration: sessionDuration,\n      };\n\n      if (onSessionComplete) {\n        onSessionComplete(completedSession);\n      }\n\n      toast.success('Swipe session completed! Generating your recommendations...');\n    } catch (error) {\n      console.error('Failed to complete session:', error);\n    }\n  }, [session, onSessionComplete]);\n\n  // Handle product click (open product details)\n  const handleProductClick = useCallback((product: Product) => {\n    // Track product view\n    api.trackEvent({\n      event_name: 'product_viewed',\n      properties: {\n        product_id: product.id,\n        product_name: product.name,\n        source: 'swipe_interface',\n        session_id: session?.id,\n      }\n    });\n\n    // Open product in new tab\n    window.open(product.affiliate_url, '_blank', 'noopener,noreferrer');\n  }, [session]);\n\n  // Reset session\n  const resetSession = useCallback(async () => {\n    setSwipeState({\n      cards: [],\n      currentIndex: 0,\n      isLoading: true,\n      hasMore: true,\n      sessionId: null,\n      swipeCount: 0,\n      likeCount: 0,\n      dislikeCount: 0,\n    });\n    setSession(null);\n    setShowProgress(false);\n    await initializeSession();\n  }, [initializeSession]);\n\n  // Initialize on mount\n  useEffect(() => {\n    initializeSession();\n  }, [initializeSession]);\n\n  // Keyboard shortcuts\n  useEffect(() => {\n    const handleKeyPress = (event: KeyboardEvent) => {\n      if (swipeState.currentIndex >= swipeState.cards.length) return;\n\n      const gesture: SwipeGesture = {\n        direction: 'right',\n        velocity: 1,\n        distance: 200,\n        duration: 100,\n        startPosition: { x: 0, y: 0 },\n        endPosition: { x: 0, y: 0 },\n      };\n\n      switch (event.key) {\n        case 'ArrowLeft':\n        case 'X':\n        case 'x':\n          event.preventDefault();\n          handleSwipe('left', { ...gesture, direction: 'left', endPosition: { x: -200, y: 0 } });\n          break;\n        case 'ArrowRight':\n        case 'L':\n        case 'l':\n          event.preventDefault();\n          handleSwipe('right', { ...gesture, direction: 'right', endPosition: { x: 200, y: 0 } });\n          break;\n        case 'ArrowUp':\n        case 'S':\n        case 's':\n          event.preventDefault();\n          handleSwipe('up', { ...gesture, direction: 'up', endPosition: { x: 0, y: -200 } });\n          break;\n        case ' ':\n          event.preventDefault();\n          const currentCard = swipeState.cards[swipeState.currentIndex];\n          if (currentCard) {\n            handleProductClick(currentCard.product);\n          }\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [handleSwipe, handleProductClick, swipeState.currentIndex, swipeState.cards]);\n\n  const currentCard = swipeState.cards[swipeState.currentIndex];\n  const nextCards = swipeState.cards.slice(swipeState.currentIndex + 1, swipeState.currentIndex + 4);\n  const progress = Math.min((swipeState.swipeCount / appConfig.swipe.maxSwipesPerSession) * 100, 100);\n\n\n\n  return (\n    <div className={`relative w-full h-full flex flex-col touch-none select-none ${className}`} style={{ touchAction: 'none' }}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 bg-white/80 backdrop-blur-sm border-b border-gray-200\">\n        <div className=\"flex items-center gap-3\">\n          <Gift className=\"w-6 h-6 text-primary-600\" />\n          <div>\n            <h2 className=\"font-semibold text-gray-900\">\n              {sessionType === 'onboarding' && 'Tell us what you like'}\n              {sessionType === 'discovery' && 'Discover products'}\n              {sessionType === 'category_exploration' && `Explore ${categoryFocus}`}\n              {sessionType === 'gift_selection' && `Gifts for ${targetRecipient}`}\n            </h2>\n            {showProgress && (\n              <p className=\"text-sm text-gray-600\">\n                {swipeState.swipeCount} swipes • {swipeState.likeCount} likes\n              </p>\n            )}\n          </div>\n        </div>\n\n        <div className=\"flex items-center gap-2\">\n          <button\n            onClick={resetSession}\n            className=\"p-2 text-gray-600 hover:text-primary-600 transition-colors\"\n            title=\"Reset session\"\n          >\n            <RotateCcw className=\"w-5 h-5\" />\n          </button>\n          <button className=\"p-2 text-gray-600 hover:text-primary-600 transition-colors\">\n            <Settings className=\"w-5 h-5\" />\n          </button>\n        </div>\n      </div>\n\n      {/* Progress Bar */}\n      {showProgress && (\n        <div className=\"px-4 py-2 bg-white/80 backdrop-blur-sm border-b border-gray-200\">\n          <div className=\"w-full bg-gray-200 rounded-full h-2\">\n            <motion.div\n              className=\"bg-primary-600 h-2 rounded-full\"\n              initial={{ width: 0 }}\n              animate={{ width: `${progress}%` }}\n              transition={{ duration: 0.5 }}\n            />\n          </div>\n          <div className=\"flex justify-between text-xs text-gray-600 mt-1\">\n            <span>{swipeState.swipeCount} swipes</span>\n            <span>{appConfig.swipe.maxSwipesPerSession} max</span>\n          </div>\n        </div>\n      )}\n\n      {/* Swipe Area */}\n      <div className=\"flex-1 relative overflow-hidden bg-gradient-to-br from-primary-50 to-secondary-50\">\n\n        {swipeState.isLoading && swipeState.cards.length === 0 ? (\n          // Loading state\n          <div className=\"absolute inset-0 flex items-center justify-center bg-yellow-200 border-4 border-purple-500\">\n            <div className=\"text-center\">\n              <h1 className=\"text-black text-2xl\">DEBUG: LOADING STATE</h1>\n              <p className=\"text-black\">isLoading: {swipeState.isLoading.toString()}</p>\n              <p className=\"text-black\">cards.length: {swipeState.cards.length}</p>\n              <motion.div\n                className=\"w-12 h-12 border-4 border-primary-200 border-t-primary-600 rounded-full mx-auto\"\n                animate={{ rotate: 360 }}\n                transition={{ duration: 1, repeat: Infinity, ease: 'linear' }}\n              />\n              <p className=\"mt-4 text-gray-600\">Loading products...</p>\n            </div>\n          </div>\n        ) : currentCard ? (\n          // Swipe cards\n          <div className=\"absolute inset-4\">\n            {/* DEBUG: Simple visible test */}\n            <div className=\"absolute inset-0 bg-blue-200 border-4 border-red-500 z-50 p-4\">\n              <h1 className=\"text-black text-2xl\">DEBUG: SwipeInterface Rendering</h1>\n              <p className=\"text-black\">Current card exists: {currentCard ? 'YES' : 'NO'}</p>\n              <p className=\"text-black\">Product title: {currentCard?.product?.title || currentCard?.product?.name || 'NO TITLE'}</p>\n              <p className=\"text-black\">Product ID: {currentCard?.product?.id || 'NO ID'}</p>\n              <p className=\"text-black\">Cards length: {swipeState.cards.length}</p>\n              <pre className=\"text-black text-xs mt-2\">{JSON.stringify(currentCard?.product, null, 2)}</pre>\n            </div>\n            \n            {/* Current Card */}\n            <SwipeCard\n              key={currentCard.id}\n              product={currentCard.product}\n              index={0}\n              isActive={true}\n              onSwipe={handleSwipe}\n              onProductClick={handleProductClick}\n              className=\"z-30\"\n            />\n            \n            {/* Next Cards (background stack) */}\n            {nextCards.map((card, index) => (\n              <SwipeCard\n                key={card.id}\n                product={card.product}\n                index={index + 1}\n                isActive={false}\n                onSwipe={handleSwipe}\n                onProductClick={handleProductClick}\n                className={`z-${20 - index}`}\n              />\n            ))}\n          </div>\n        ) : (\n          // No more cards\n          <div className=\"absolute inset-0 flex items-center justify-center bg-green-200 border-4 border-orange-500\">\n            <div className=\"text-center max-w-md\">\n              <h1 className=\"text-black text-2xl\">DEBUG: NO MORE CARDS</h1>\n              <p className=\"text-black\">isLoading: {swipeState.isLoading.toString()}</p>\n              <p className=\"text-black\">cards.length: {swipeState.cards.length}</p>\n              <p className=\"text-black\">currentIndex: {swipeState.currentIndex}</p>\n              <p className=\"text-black\">hasMore: {swipeState.hasMore.toString()}</p>\n              <Zap className=\"w-16 h-16 text-primary-600 mx-auto mb-4\" />\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                Session Complete!\n              </h3>\n              <p className=\"text-gray-600 mb-6\">\n                Great job! We've learned about your preferences. Your personalized recommendations are being generated.\n              </p>\n              <motion.button\n                onClick={resetSession}\n                className=\"px-6 py-3 bg-primary-600 text-white rounded-lg font-medium hover:bg-primary-700 transition-colors\"\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n              >\n                Start New Session\n              </motion.button>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Instructions */}\n      {swipeState.swipeCount < 5 && currentCard && (\n        <motion.div\n          className=\"absolute bottom-20 left-1/2 transform -translate-x-1/2 bg-black/80 text-white px-4 py-2 rounded-lg text-sm text-center max-w-xs\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          exit={{ opacity: 0, y: 20 }}\n        >\n          <div className=\"flex items-center gap-2 mb-1\">\n            <Info className=\"w-4 h-4\" />\n            <span className=\"font-medium\">How to swipe</span>\n          </div>\n          <p>← Dislike • ↑ Super like • → Like</p>\n          <p className=\"text-xs opacity-75 mt-1\">Or use the buttons below</p>\n        </motion.div>\n      )}\n    </div>\n  );\n};\n\nexport default SwipeInterface;"],"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","ignoreList":[]}