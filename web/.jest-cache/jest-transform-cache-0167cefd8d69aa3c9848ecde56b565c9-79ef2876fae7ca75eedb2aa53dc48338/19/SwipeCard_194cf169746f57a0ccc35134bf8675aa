f45e6507dcd3473bcf3062a4e00bc889
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    SwipeCard: function() {
        return SwipeCard;
    },
    default: function() {
        return _default;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _framermotion = require("framer-motion");
const _lucidereact = require("lucide-react");
const _image = /*#__PURE__*/ _interop_require_default(require("next/image"));
const _config = require("../../config");
const _affiliate = require("../../lib/affiliate");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const SwipeCard = ({ product, index, isActive, onSwipe, onProductClick, className = "" })=>{
    const [isDragging, setIsDragging] = (0, _react.useState)(false);
    const [gestureStartTime, setGestureStartTime] = (0, _react.useState)(0);
    const cardRef = (0, _react.useRef)(null);
    // Motion values for drag tracking - enhanced for mobile
    const x = (0, _framermotion.useMotionValue)(0);
    const y = (0, _framermotion.useMotionValue)(0);
    const rotate = (0, _framermotion.useTransform)(x, [
        -300,
        300
    ], [
        -30,
        30
    ]);
    const opacity = (0, _framermotion.useTransform)(x, [
        -300,
        -150,
        0,
        150,
        300
    ], [
        0,
        1,
        1,
        1,
        0
    ]);
    const scale = (0, _framermotion.useTransform)(x, [
        -150,
        0,
        150
    ], [
        0.95,
        1,
        0.95
    ]);
    // Transform values for overlay indicators
    const likeOpacity = (0, _framermotion.useTransform)(x, [
        0,
        150
    ], [
        0,
        1
    ]);
    const dislikeOpacity = (0, _framermotion.useTransform)(x, [
        0,
        -150
    ], [
        0,
        1
    ]);
    const superlikeOpacity = (0, _framermotion.useTransform)(y, [
        0,
        -150
    ], [
        0,
        1
    ]);
    // Format price with currency
    const formatPrice = (price, currency = "USD")=>{
        return new Intl.NumberFormat("en-US", {
            style: "currency",
            currency: currency
        }).format(price);
    };
    // Calculate discount percentage
    const discountPercentage = product.original_price ? Math.round((product.original_price - product.price) / product.original_price * 100) : 0;
    // Handle pan start - enhanced for mobile
    const handlePanStart = ()=>{
        setIsDragging(true);
        setGestureStartTime(Date.now());
        // Haptic feedback on touch start (mobile)
        if (typeof window !== "undefined" && "vibrate" in navigator) {
            navigator.vibrate(10);
        }
        // Prevent scroll on mobile during drag
        if (typeof document !== "undefined") {
            document.body.style.overflow = "hidden";
        }
    };
    // Handle pan end - enhanced for mobile
    const handlePanEnd = (_event, info)=>{
        setIsDragging(false);
        // Re-enable scroll
        if (typeof document !== "undefined") {
            document.body.style.overflow = "auto";
        }
        const { offset, velocity } = info;
        const swipeThreshold = _config.appConfig.swipe.distanceThreshold;
        const velocityThreshold = _config.appConfig.swipe.velocityThreshold;
        const gestureEndTime = Date.now();
        const duration = gestureEndTime - gestureStartTime;
        const gesture = {
            direction: "right",
            velocity: Math.sqrt(velocity.x ** 2 + velocity.y ** 2),
            distance: Math.sqrt(offset.x ** 2 + offset.y ** 2),
            duration,
            startPosition: {
                x: 0,
                y: 0
            },
            endPosition: {
                x: offset.x,
                y: offset.y
            }
        };
        // Determine swipe direction
        const isHorizontalSwipe = Math.abs(offset.x) > Math.abs(offset.y);
        const isVerticalSwipe = Math.abs(offset.y) > Math.abs(offset.x);
        let shouldSwipe = false;
        let direction = "right";
        if (isHorizontalSwipe) {
            if (Math.abs(offset.x) > swipeThreshold || Math.abs(velocity.x) > velocityThreshold) {
                shouldSwipe = true;
                direction = offset.x > 0 ? "right" : "left";
            }
        } else if (isVerticalSwipe) {
            if (Math.abs(offset.y) > swipeThreshold || Math.abs(velocity.y) > velocityThreshold) {
                shouldSwipe = true;
                direction = offset.y > 0 ? "down" : "up";
            }
        }
        if (shouldSwipe) {
            gesture.direction = direction;
            // Enhanced haptic feedback for mobile
            if (typeof window !== "undefined" && "vibrate" in navigator) {
                const vibrationPattern = {
                    "right": 50,
                    "up": [
                        30,
                        20,
                        30
                    ],
                    "left": 100,
                    "down": 75 // Down swipe
                }[direction] || 50;
                navigator.vibrate(vibrationPattern);
            }
            onSwipe(direction, gesture);
        } else {
            // Snap back to center
            x.set(0);
            y.set(0);
        }
    };
    // Handle button clicks
    const handleDislike = ()=>{
        const gesture = {
            direction: "left",
            velocity: 1,
            distance: 200,
            duration: 300,
            startPosition: {
                x: 0,
                y: 0
            },
            endPosition: {
                x: -200,
                y: 0
            }
        };
        onSwipe("left", gesture);
    };
    const handleLike = ()=>{
        const gesture = {
            direction: "right",
            velocity: 1,
            distance: 200,
            duration: 300,
            startPosition: {
                x: 0,
                y: 0
            },
            endPosition: {
                x: 200,
                y: 0
            }
        };
        onSwipe("right", gesture);
    };
    const handleSuperlike = ()=>{
        const gesture = {
            direction: "up",
            velocity: 1,
            distance: 200,
            duration: 300,
            startPosition: {
                x: 0,
                y: 0
            },
            endPosition: {
                x: 0,
                y: -200
            }
        };
        onSwipe("up", gesture);
    };
    const handleProductClick = async ()=>{
        if (onProductClick) {
            onProductClick(product);
        }
        // Generate affiliate link and track click if it's an Amazon product
        if (product.url && (0, _affiliate.isValidAmazonUrl)(product.url)) {
            const affiliateUrl = (0, _affiliate.generateAffiliateLink)(product.url, {
                campaign: "gift_recommendation",
                medium: "swipe_interface",
                source: "product_click",
                content: "swipe_card"
            });
            // Track the affiliate click
            await (0, _affiliate.trackAffiliateClick)({
                productId: product.id,
                asin: (0, _affiliate.extractASIN)(product.url),
                category: product.category.name,
                price: product.price,
                currency: product.currency || "GBP",
                affiliateUrl,
                originalUrl: product.url,
                source: "recommendation"
            });
            // Open affiliate link in new tab
            window.open(affiliateUrl, "_blank", "noopener,noreferrer");
        } else if (product.url) {
            // Open regular product link
            window.open(product.url, "_blank", "noopener,noreferrer");
        }
    };
    // Reset position when card becomes active
    (0, _react.useEffect)(()=>{
        if (isActive) {
            x.set(0);
            y.set(0);
        }
    }, [
        isActive,
        x,
        y
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_framermotion.motion.div, {
        ref: cardRef,
        className: `absolute inset-0 cursor-grab active:cursor-grabbing ${className}`,
        style: {
            x,
            y,
            rotate,
            opacity,
            scale,
            zIndex: isActive ? 20 : 10 - index
        },
        drag: isActive,
        dragConstraints: {
            left: 0,
            right: 0,
            top: 0,
            bottom: 0
        },
        dragElastic: 0.2,
        dragMomentum: true,
        whileDrag: {
            scale: 1.05,
            cursor: "grabbing",
            transition: {
                type: "spring",
                stiffness: 400,
                damping: 30
            }
        },
        onPanStart: handlePanStart,
        onPanEnd: handlePanEnd,
        initial: {
            scale: 0.9,
            opacity: 0
        },
        animate: {
            scale: isActive ? 1 : 0.95 - index * 0.05,
            opacity: isActive ? 1 : 0.7 - index * 0.2,
            y: isActive ? 0 : index * 10
        },
        transition: {
            type: "spring",
            stiffness: 300,
            damping: 30
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: "relative w-full h-full bg-white rounded-2xl shadow-2xl overflow-hidden",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "relative w-full h-2/3",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_image.default, {
                            src: product.image_url,
                            alt: product.name,
                            fill: true,
                            className: "object-cover",
                            sizes: "(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw",
                            priority: index < 2
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "absolute inset-0 bg-gradient-to-t from-black/30 via-transparent to-transparent"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "absolute top-4 left-4 flex flex-col gap-2",
                            children: [
                                product.is_featured && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "bg-primary-500 text-white px-2 py-1 rounded-full text-xs font-medium flex items-center gap-1",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Sparkles, {
                                            className: "w-3 h-3"
                                        }),
                                        "Featured"
                                    ]
                                }),
                                product.is_trending && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: "bg-orange-500 text-white px-2 py-1 rounded-full text-xs font-medium",
                                    children: "\uD83D\uDD25 Trending"
                                }),
                                product.is_new && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: "bg-green-500 text-white px-2 py-1 rounded-full text-xs font-medium",
                                    children: "✨ New"
                                }),
                                discountPercentage > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "bg-red-500 text-white px-2 py-1 rounded-full text-xs font-medium",
                                    children: [
                                        "-",
                                        discountPercentage,
                                        "%"
                                    ]
                                })
                            ]
                        }),
                        product.rating && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "absolute top-4 right-4 bg-black/50 backdrop-blur-sm rounded-full px-2 py-1 flex items-center gap-1",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Star, {
                                    className: "w-3 h-3 text-yellow-400 fill-yellow-400"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                    className: "text-white text-xs font-medium",
                                    children: product.rating.toFixed(1)
                                }),
                                product.review_count && /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                    className: "text-white/70 text-xs",
                                    children: [
                                        "(",
                                        product.review_count,
                                        ")"
                                    ]
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_framermotion.motion.div, {
                            className: "absolute inset-0 bg-green-500/90 flex items-center justify-center",
                            style: {
                                opacity: likeOpacity
                            },
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "bg-white rounded-full p-4",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Heart, {
                                    className: "w-8 h-8 text-green-500 fill-green-500"
                                })
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_framermotion.motion.div, {
                            className: "absolute inset-0 bg-red-500/90 flex items-center justify-center",
                            style: {
                                opacity: dislikeOpacity
                            },
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "bg-white rounded-full p-4",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.X, {
                                    className: "w-8 h-8 text-red-500"
                                })
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_framermotion.motion.div, {
                            className: "absolute inset-0 bg-blue-500/90 flex items-center justify-center",
                            style: {
                                opacity: superlikeOpacity
                            },
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "bg-white rounded-full p-4",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Star, {
                                    className: "w-8 h-8 text-blue-500 fill-blue-500"
                                })
                            })
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "p-6 h-1/3 flex flex-col justify-between",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex-1",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-start justify-between mb-2",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "flex-1 min-w-0",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                                    className: "text-lg font-semibold text-gray-900 line-clamp-2 cursor-pointer hover:text-primary-600 transition-colors",
                                                    onClick: handleProductClick,
                                                    children: product.name
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                    className: "text-sm text-gray-600 mt-1",
                                                    children: product.brand
                                                })
                                            ]
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                            onClick: handleProductClick,
                                            className: "ml-2 p-2 text-gray-400 hover:text-primary-600 transition-colors",
                                            title: product.url && (0, _affiliate.isValidAmazonUrl)(product.url) ? "View on Amazon (affiliate link)" : "View product",
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.ExternalLink, {
                                                className: "w-4 h-4"
                                            })
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center gap-2 mb-3",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                            className: "text-xl font-bold text-gray-900",
                                            children: formatPrice(product.price, product.currency)
                                        }),
                                        product.original_price && product.original_price > product.price && /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                            className: "text-sm text-gray-500 line-through",
                                            children: formatPrice(product.original_price, product.currency)
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center gap-2 text-xs text-gray-500 mb-2",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                            className: "px-2 py-1 bg-gray-100 rounded-full",
                                            children: product.category.name
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                            className: "px-2 py-1 bg-gray-100 rounded-full",
                                            children: product.availability
                                        })
                                    ]
                                })
                            ]
                        }),
                        isActive && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center justify-center gap-4 mt-4",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                    onClick: handleDislike,
                                    className: "w-12 h-12 bg-gray-100 hover:bg-red-100 rounded-full flex items-center justify-center transition-colors group",
                                    disabled: isDragging,
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.X, {
                                        className: "w-6 h-6 text-gray-600 group-hover:text-red-500 transition-colors"
                                    })
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                    onClick: handleSuperlike,
                                    className: "w-12 h-12 bg-gray-100 hover:bg-blue-100 rounded-full flex items-center justify-center transition-colors group",
                                    disabled: isDragging,
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Star, {
                                        className: "w-6 h-6 text-gray-600 group-hover:text-blue-500 transition-colors"
                                    })
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                    onClick: handleLike,
                                    className: "w-12 h-12 bg-gray-100 hover:bg-green-100 rounded-full flex items-center justify-center transition-colors group",
                                    disabled: isDragging,
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Heart, {
                                        className: "w-6 h-6 text-gray-600 group-hover:text-green-500 transition-colors"
                                    })
                                })
                            ]
                        })
                    ]
                })
            ]
        })
    });
};
const _default = SwipeCard;

//# sourceMappingURL=data:application/json;base64,