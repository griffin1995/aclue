394d2722fe000bbfe99b2d33543f66be
/**
 * aclue Analytics Service
 * 
 * Comprehensive user behavior tracking and analytics integration using PostHog.
 * Provides business intelligence, user insights, and performance metrics for
 * data-driven product decisions and revenue optimization.
 * 
 * Key Features:
 *   - User behavior tracking (swipes, clicks, conversions)
 *   - Revenue analytics (affiliate clicks, commissions)
 *   - Feature flag management for A/B testing
 *   - User segmentation and cohort analysis
 *   - Error tracking and performance monitoring
 * 
 * Business Intelligence:
 *   - Track user journey from discovery to purchase
 *   - Measure recommendation algorithm effectiveness
 *   - Monitor affiliate conversion rates and revenue
 *   - Analyze user engagement and retention patterns
 * 
 * Privacy & Compliance:
 *   - GDPR-compliant user consent management
 *   - User opt-out functionality
 *   - Data anonymization and retention policies
 *   - Cookie consent integration
 * 
 * Integration:
 *   - PostHog for event tracking and analytics
 *   - Feature flags for controlled rollouts
 *   - User identification for personalized experiences
 *   - Custom event validation and enrichment
 * 
 * Usage:
 *   import { analytics, trackEvent, identifyUser } from '@/lib/analytics';
 *   
 *   // Initialize analytics
 *   await analytics.init();
 *   
 *   // Track user events
 *   trackEvent('product_swiped', { direction: 'right', product_id: '123' });
 *   
 *   // Identify users
 *   identifyUser('user_123', { subscription_tier: 'premium' });
 */"use strict";

/* istanbul ignore next */
function cov_6i76auso8() {
  var path = "/home/jack/Documents/aclue-preprod/web/src/lib/analytics.ts";
  var hash = "18822d8b44ccc02902ca4b5c7f72f9391b1cd60e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/jack/Documents/aclue-preprod/web/src/lib/analytics.ts",
    statementMap: {
      "0": {
        start: {
          line: 45,
          column: 0
        },
        end: {
          line: 47,
          column: 3
        }
      },
      "1": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 52,
          column: 7
        }
      },
      "2": {
        start: {
          line: 49,
          column: 24
        },
        end: {
          line: 52,
          column: 7
        }
      },
      "3": {
        start: {
          line: 54,
          column: 0
        },
        end: {
          line: 73,
          column: 3
        }
      },
      "4": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 25
        }
      },
      "5": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "6": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 28
        }
      },
      "7": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 26
        }
      },
      "8": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 29
        }
      },
      "9": {
        start: {
          line: 74,
          column: 33
        },
        end: {
          line: 74,
          column: 80
        }
      },
      "10": {
        start: {
          line: 75,
          column: 16
        },
        end: {
          line: 75,
          column: 36
        }
      },
      "11": {
        start: {
          line: 76,
          column: 23
        },
        end: {
          line: 76,
          column: 50
        }
      },
      "12": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 80,
          column: 6
        }
      },
      "13": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "14": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 19
        }
      },
      "15": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "16": {
        start: {
          line: 130,
          column: 34
        },
        end: {
          line: 130,
          column: 75
        }
      },
      "17": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 135,
          column: 15
        }
      },
      "18": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 78
        }
      },
      "19": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 36
        }
      },
      "20": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 32
        }
      },
      "21": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 40
        }
      },
      "22": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 69
        }
      },
      "23": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 153,
          column: 13
        }
      },
      "24": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 34
        }
      },
      "25": {
        start: {
          line: 148,
          column: 32
        },
        end: {
          line: 148,
          column: 54
        }
      },
      "26": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 149,
          column: 124
        }
      },
      "27": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 150,
          column: 53
        }
      },
      "28": {
        start: {
          line: 150,
          column: 31
        },
        end: {
          line: 150,
          column: 42
        }
      },
      "29": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 152,
          column: 94
        }
      },
      "30": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 38
        }
      },
      "31": {
        start: {
          line: 170,
          column: 31
        },
        end: {
          line: 170,
          column: 38
        }
      },
      "32": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 182,
          column: 9
        }
      },
      "33": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 178,
          column: 15
        }
      },
      "34": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 82
        }
      },
      "35": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 181,
          column: 69
        }
      },
      "36": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 213,
          column: 9
        }
      },
      "37": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 75
        }
      },
      "38": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 60
        }
      },
      "39": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 253,
          column: 9
        }
      },
      "40": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 90
        }
      },
      "41": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 19
        }
      },
      "42": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 257,
          column: 9
        }
      },
      "43": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 19
        }
      },
      "44": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 269,
          column: 9
        }
      },
      "45": {
        start: {
          line: 260,
          column: 39
        },
        end: {
          line: 263,
          column: 13
        }
      },
      "46": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 84
        }
      },
      "47": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 70
        }
      },
      "48": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 80
        }
      },
      "49": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 300,
          column: 9
        }
      },
      "50": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 74
        }
      },
      "51": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 54
        }
      },
      "52": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 332,
          column: 9
        }
      },
      "53": {
        start: {
          line: 325,
          column: 28
        },
        end: {
          line: 325,
          column: 56
        }
      },
      "54": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 326,
          column: 66
        }
      },
      "55": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 331,
          column: 15
        }
      },
      "56": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 361,
          column: 9
        }
      },
      "57": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 359,
          column: 60
        }
      },
      "58": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 360,
          column: 39
        }
      },
      "59": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 393,
          column: 9
        }
      },
      "60": {
        start: {
          line: 391,
          column: 12
        },
        end: {
          line: 391,
          column: 85
        }
      },
      "61": {
        start: {
          line: 392,
          column: 12
        },
        end: {
          line: 392,
          column: 70
        }
      },
      "62": {
        start: {
          line: 421,
          column: 8
        },
        end: {
          line: 425,
          column: 9
        }
      },
      "63": {
        start: {
          line: 422,
          column: 28
        },
        end: {
          line: 422,
          column: 78
        }
      },
      "64": {
        start: {
          line: 423,
          column: 12
        },
        end: {
          line: 423,
          column: 70
        }
      },
      "65": {
        start: {
          line: 424,
          column: 12
        },
        end: {
          line: 424,
          column: 27
        }
      },
      "66": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 426,
          column: 21
        }
      },
      "67": {
        start: {
          line: 456,
          column: 8
        },
        end: {
          line: 460,
          column: 9
        }
      },
      "68": {
        start: {
          line: 457,
          column: 26
        },
        end: {
          line: 457,
          column: 65
        }
      },
      "69": {
        start: {
          line: 458,
          column: 12
        },
        end: {
          line: 458,
          column: 74
        }
      },
      "70": {
        start: {
          line: 459,
          column: 12
        },
        end: {
          line: 459,
          column: 25
        }
      },
      "71": {
        start: {
          line: 461,
          column: 8
        },
        end: {
          line: 461,
          column: 25
        }
      },
      "72": {
        start: {
          line: 487,
          column: 8
        },
        end: {
          line: 490,
          column: 9
        }
      },
      "73": {
        start: {
          line: 488,
          column: 12
        },
        end: {
          line: 488,
          column: 74
        }
      },
      "74": {
        start: {
          line: 489,
          column: 12
        },
        end: {
          line: 489,
          column: 51
        }
      },
      "75": {
        start: {
          line: 511,
          column: 8
        },
        end: {
          line: 514,
          column: 9
        }
      },
      "76": {
        start: {
          line: 512,
          column: 12
        },
        end: {
          line: 512,
          column: 72
        }
      },
      "77": {
        start: {
          line: 513,
          column: 12
        },
        end: {
          line: 513,
          column: 50
        }
      },
      "78": {
        start: {
          line: 534,
          column: 8
        },
        end: {
          line: 536,
          column: 9
        }
      },
      "79": {
        start: {
          line: 535,
          column: 12
        },
        end: {
          line: 535,
          column: 64
        }
      },
      "80": {
        start: {
          line: 537,
          column: 8
        },
        end: {
          line: 537,
          column: 21
        }
      },
      "81": {
        start: {
          line: 542,
          column: 6
        },
        end: {
          line: 543,
          column: 9
        }
      },
      "82": {
        start: {
          line: 544,
          column: 8
        },
        end: {
          line: 545,
          column: 9
        }
      },
      "83": {
        start: {
          line: 546,
          column: 8
        },
        end: {
          line: 547,
          column: 9
        }
      },
      "84": {
        start: {
          line: 550,
          column: 18
        },
        end: {
          line: 550,
          column: 40
        }
      },
      "85": {
        start: {
          line: 551,
          column: 19
        },
        end: {
          line: 553,
          column: 1
        }
      },
      "86": {
        start: {
          line: 552,
          column: 4
        },
        end: {
          line: 552,
          column: 43
        }
      },
      "87": {
        start: {
          line: 554,
          column: 21
        },
        end: {
          line: 556,
          column: 1
        }
      },
      "88": {
        start: {
          line: 555,
          column: 4
        },
        end: {
          line: 555,
          column: 43
        }
      },
      "89": {
        start: {
          line: 557,
          column: 22
        },
        end: {
          line: 559,
          column: 1
        }
      },
      "90": {
        start: {
          line: 558,
          column: 4
        },
        end: {
          line: 558,
          column: 34
        }
      },
      "91": {
        start: {
          line: 560,
          column: 17
        },
        end: {
          line: 560,
          column: 26
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 48,
            column: 9
          },
          end: {
            line: 48,
            column: 16
          }
        },
        loc: {
          start: {
            line: 48,
            column: 30
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 48
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 55,
            column: 15
          },
          end: {
            line: 55,
            column: 16
          }
        },
        loc: {
          start: {
            line: 55,
            column: 26
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 55
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 59,
            column: 13
          },
          end: {
            line: 59,
            column: 14
          }
        },
        loc: {
          start: {
            line: 59,
            column: 24
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 59
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 64,
            column: 18
          },
          end: {
            line: 64,
            column: 19
          }
        },
        loc: {
          start: {
            line: 64,
            column: 29
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 64
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 67,
            column: 16
          },
          end: {
            line: 67,
            column: 17
          }
        },
        loc: {
          start: {
            line: 67,
            column: 27
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 67
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 70,
            column: 19
          },
          end: {
            line: 70,
            column: 20
          }
        },
        loc: {
          start: {
            line: 70,
            column: 30
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 70
      },
      "6": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 77,
            column: 9
          },
          end: {
            line: 77,
            column: 33
          }
        },
        loc: {
          start: {
            line: 77,
            column: 39
          },
          end: {
            line: 81,
            column: 1
          }
        },
        line: 77
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 123,
            column: 6
          },
          end: {
            line: 123,
            column: 7
          }
        },
        loc: {
          start: {
            line: 123,
            column: 19
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 123
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 150,
            column: 27
          },
          end: {
            line: 150,
            column: 28
          }
        },
        loc: {
          start: {
            line: 150,
            column: 31
          },
          end: {
            line: 150,
            column: 42
          }
        },
        line: 150
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 169,
            column: 6
          },
          end: {
            line: 169,
            column: 7
          }
        },
        loc: {
          start: {
            line: 169,
            column: 29
          },
          end: {
            line: 183,
            column: 5
          }
        },
        line: 169
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 209,
            column: 6
          },
          end: {
            line: 209,
            column: 7
          }
        },
        loc: {
          start: {
            line: 209,
            column: 35
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 209
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 247,
            column: 6
          },
          end: {
            line: 247,
            column: 7
          }
        },
        loc: {
          start: {
            line: 247,
            column: 35
          },
          end: {
            line: 270,
            column: 5
          }
        },
        line: 247
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 296,
            column: 6
          },
          end: {
            line: 296,
            column: 7
          }
        },
        loc: {
          start: {
            line: 296,
            column: 36
          },
          end: {
            line: 301,
            column: 5
          }
        },
        line: 296
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 323,
            column: 6
          },
          end: {
            line: 323,
            column: 7
          }
        },
        loc: {
          start: {
            line: 323,
            column: 26
          },
          end: {
            line: 333,
            column: 5
          }
        },
        line: 323
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 357,
            column: 6
          },
          end: {
            line: 357,
            column: 7
          }
        },
        loc: {
          start: {
            line: 357,
            column: 14
          },
          end: {
            line: 362,
            column: 5
          }
        },
        line: 357
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 389,
            column: 6
          },
          end: {
            line: 389,
            column: 7
          }
        },
        loc: {
          start: {
            line: 389,
            column: 45
          },
          end: {
            line: 394,
            column: 5
          }
        },
        line: 389
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 420,
            column: 6
          },
          end: {
            line: 420,
            column: 7
          }
        },
        loc: {
          start: {
            line: 420,
            column: 29
          },
          end: {
            line: 427,
            column: 5
          }
        },
        line: 420
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 455,
            column: 6
          },
          end: {
            line: 455,
            column: 7
          }
        },
        loc: {
          start: {
            line: 455,
            column: 27
          },
          end: {
            line: 462,
            column: 5
          }
        },
        line: 455
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 486,
            column: 6
          },
          end: {
            line: 486,
            column: 7
          }
        },
        loc: {
          start: {
            line: 486,
            column: 15
          },
          end: {
            line: 491,
            column: 5
          }
        },
        line: 486
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 510,
            column: 6
          },
          end: {
            line: 510,
            column: 7
          }
        },
        loc: {
          start: {
            line: 510,
            column: 14
          },
          end: {
            line: 515,
            column: 5
          }
        },
        line: 510
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 533,
            column: 6
          },
          end: {
            line: 533,
            column: 7
          }
        },
        loc: {
          start: {
            line: 533,
            column: 20
          },
          end: {
            line: 538,
            column: 5
          }
        },
        line: 533
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 539,
            column: 4
          },
          end: {
            line: 539,
            column: 5
          }
        },
        loc: {
          start: {
            line: 539,
            column: 17
          },
          end: {
            line: 548,
            column: 5
          }
        },
        line: 539
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 551,
            column: 19
          },
          end: {
            line: 551,
            column: 20
          }
        },
        loc: {
          start: {
            line: 551,
            column: 44
          },
          end: {
            line: 553,
            column: 1
          }
        },
        line: 551
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 554,
            column: 21
          },
          end: {
            line: 554,
            column: 22
          }
        },
        loc: {
          start: {
            line: 554,
            column: 43
          },
          end: {
            line: 556,
            column: 1
          }
        },
        line: 554
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 557,
            column: 22
          },
          end: {
            line: 557,
            column: 23
          }
        },
        loc: {
          start: {
            line: 557,
            column: 30
          },
          end: {
            line: 559,
            column: 1
          }
        },
        line: 557
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 78,
            column: 11
          },
          end: {
            line: 80,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 78,
            column: 35
          },
          end: {
            line: 78,
            column: 38
          }
        }, {
          start: {
            line: 78,
            column: 41
          },
          end: {
            line: 80,
            column: 5
          }
        }],
        line: 78
      },
      "1": {
        loc: {
          start: {
            line: 78,
            column: 11
          },
          end: {
            line: 78,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 11
          },
          end: {
            line: 78,
            column: 14
          }
        }, {
          start: {
            line: 78,
            column: 18
          },
          end: {
            line: 78,
            column: 32
          }
        }],
        line: 78
      },
      "2": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "3": {
        loc: {
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 125,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 125,
            column: 41
          }
        }, {
          start: {
            line: 125,
            column: 45
          },
          end: {
            line: 125,
            column: 61
          }
        }, {
          start: {
            line: 125,
            column: 65
          },
          end: {
            line: 125,
            column: 91
          }
        }],
        line: 125
      },
      "4": {
        loc: {
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 153,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 153,
            column: 13
          }
        }, {
          start: {
            line: 151,
            column: 19
          },
          end: {
            line: 153,
            column: 13
          }
        }],
        line: 146
      },
      "5": {
        loc: {
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 170,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 170,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "6": {
        loc: {
          start: {
            line: 177,
            column: 29
          },
          end: {
            line: 177,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 177,
            column: 59
          },
          end: {
            line: 177,
            column: 71
          }
        }, {
          start: {
            line: 177,
            column: 74
          },
          end: {
            line: 177,
            column: 87
          }
        }],
        line: 177
      },
      "7": {
        loc: {
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 213,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 213,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 210
      },
      "8": {
        loc: {
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "9": {
        loc: {
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 257,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 257,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "10": {
        loc: {
          start: {
            line: 297,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 297,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 297
      },
      "11": {
        loc: {
          start: {
            line: 324,
            column: 8
          },
          end: {
            line: 332,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 324,
            column: 8
          },
          end: {
            line: 332,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 324
      },
      "12": {
        loc: {
          start: {
            line: 325,
            column: 28
          },
          end: {
            line: 325,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 325,
            column: 28
          },
          end: {
            line: 325,
            column: 32
          }
        }, {
          start: {
            line: 325,
            column: 36
          },
          end: {
            line: 325,
            column: 56
          }
        }],
        line: 325
      },
      "13": {
        loc: {
          start: {
            line: 358,
            column: 8
          },
          end: {
            line: 361,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 358,
            column: 8
          },
          end: {
            line: 361,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 358
      },
      "14": {
        loc: {
          start: {
            line: 390,
            column: 8
          },
          end: {
            line: 393,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 390,
            column: 8
          },
          end: {
            line: 393,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 390
      },
      "15": {
        loc: {
          start: {
            line: 421,
            column: 8
          },
          end: {
            line: 425,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 421,
            column: 8
          },
          end: {
            line: 425,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 421
      },
      "16": {
        loc: {
          start: {
            line: 456,
            column: 8
          },
          end: {
            line: 460,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 456,
            column: 8
          },
          end: {
            line: 460,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 456
      },
      "17": {
        loc: {
          start: {
            line: 487,
            column: 8
          },
          end: {
            line: 490,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 487,
            column: 8
          },
          end: {
            line: 490,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 487
      },
      "18": {
        loc: {
          start: {
            line: 511,
            column: 8
          },
          end: {
            line: 514,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 511,
            column: 8
          },
          end: {
            line: 514,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 511
      },
      "19": {
        loc: {
          start: {
            line: 534,
            column: 8
          },
          end: {
            line: 536,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 534,
            column: 8
          },
          end: {
            line: 536,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 534
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/jack/Documents/aclue-preprod/web/src/lib/analytics.ts"],
      sourcesContent: ["/**\n * aclue Analytics Service\n * \n * Comprehensive user behavior tracking and analytics integration using PostHog.\n * Provides business intelligence, user insights, and performance metrics for\n * data-driven product decisions and revenue optimization.\n * \n * Key Features:\n *   - User behavior tracking (swipes, clicks, conversions)\n *   - Revenue analytics (affiliate clicks, commissions)\n *   - Feature flag management for A/B testing\n *   - User segmentation and cohort analysis\n *   - Error tracking and performance monitoring\n * \n * Business Intelligence:\n *   - Track user journey from discovery to purchase\n *   - Measure recommendation algorithm effectiveness\n *   - Monitor affiliate conversion rates and revenue\n *   - Analyze user engagement and retention patterns\n * \n * Privacy & Compliance:\n *   - GDPR-compliant user consent management\n *   - User opt-out functionality\n *   - Data anonymization and retention policies\n *   - Cookie consent integration\n * \n * Integration:\n *   - PostHog for event tracking and analytics\n *   - Feature flags for controlled rollouts\n *   - User identification for personalized experiences\n *   - Custom event validation and enrichment\n * \n * Usage:\n *   import { analytics, trackEvent, identifyUser } from '@/lib/analytics';\n *   \n *   // Initialize analytics\n *   await analytics.init();\n *   \n *   // Track user events\n *   trackEvent('product_swiped', { direction: 'right', product_id: '123' });\n *   \n *   // Identify users\n *   identifyUser('user_123', { subscription_tier: 'premium' });\n */\n\nimport posthog from 'posthog-js';\nimport { config } from '@/config';\nimport { createPostHogConfig, validateEvent, getCommonEventProperties } from './posthog-config';\n\n/**\n * Analytics Service class for comprehensive user behavior tracking.\n * \n * Manages PostHog integration with robust error handling, retry logic,\n * and business-specific event tracking. Provides type-safe analytics\n * interface for the entire application.\n * \n * Architecture:\n *   - Singleton pattern for consistent analytics instance\n *   - Automatic initialization with retry logic\n *   - Event validation and enrichment\n *   - Feature flag integration\n *   - Privacy controls and opt-out functionality\n * \n * Error Handling:\n *   - Graceful degradation when analytics unavailable\n *   - Automatic retry on initialization failures\n *   - Comprehensive logging for debugging\n *   - Fallback behavior for critical paths\n */\nclass AnalyticsService {\n  /**\n   * Service state management for reliable analytics operation.\n   */\n  private initialized = false;        // Analytics initialization status\n  private retryCount = 0;             // Current retry attempt counter\n  private maxRetries = 3;             // Maximum initialization retry attempts\n\n  /**\n   * Initialize PostHog analytics service with robust error handling.\n   * \n   * Performs comprehensive setup including:\n   *   - PostHog SDK initialization with custom configuration\n   *   - Connection testing and validation\n   *   - Automatic retry on failures\n   *   - Development vs production environment handling\n   * \n   * Error Recovery:\n   *   - Retries initialization up to maxRetries times\n   *   - Exponential backoff for retry delays\n   *   - Graceful degradation if initialization fails\n   * \n   * Environment Handling:\n   *   - Server-side rendering compatibility (no window)\n   *   - Development debugging and logging\n   *   - Production optimizations\n   * \n   * Returns:\n   *   Promise<void>: Resolves when initialization complete\n   */\n  async init() {\n    // Prevent initialization in invalid environments\n    if (typeof window === 'undefined' || this.initialized || !config.posthogKey) {\n      return;\n    }\n\n    try {\n      // Create PostHog configuration with environment-specific settings\n      const posthogConfig = createPostHogConfig();\n      \n      console.log('[PostHog] Initializing analytics service...', {\n        key: config.posthogKey?.substring(0, 10) + '...',  // Masked key for security\n        host: posthogConfig.api_host,                       // PostHog server host\n        debug: posthogConfig.debug,                         // Debug mode status\n      });\n\n      // Initialize PostHog SDK with configuration\n      posthog.init(config.posthogKey, posthogConfig);\n      \n      // Mark as successfully initialized\n      this.initialized = true;\n      this.retryCount = 0;                                  // Reset retry counter\n\n      // Verify analytics connectivity with test event\n      await this.testConnection();\n      \n    } catch (error) {\n      console.error('[PostHog] Initialization failed:', error);\n      \n      // Implement retry logic with exponential backoff\n      if (this.retryCount < this.maxRetries) {\n        this.retryCount++;\n        const delayMs = 1000 * this.retryCount;              // Exponential backoff\n        console.log(`[PostHog] Retrying initialization (${this.retryCount}/${this.maxRetries}) in ${delayMs}ms...`);\n        setTimeout(() => this.init(), delayMs);\n      } else {\n        console.error('[PostHog] Maximum retry attempts reached, analytics disabled');\n      }\n    }\n  }\n\n  /**\n   * Test PostHog connectivity with diagnostic event.\n   * \n   * Sends a test event to verify that analytics are working correctly.\n   * Provides debugging information for troubleshooting connection issues.\n   * \n   * Test Event Data:\n   *   - Common properties (user agent, URL, timestamp)\n   *   - Initialization metadata (time, retry count)\n   *   - Environment information for debugging\n   * \n   * Returns:\n   *   Promise<void>: Resolves when test complete\n   */\n  private async testConnection(): Promise<void> {\n    if (!this.initialized) return;\n\n    try {\n      // Send diagnostic event with initialization metadata\n      this.track('analytics_service_initialized', {\n        ...getCommonEventProperties(),              // Standard event properties\n        initialization_time: Date.now(),           // Timestamp for performance tracking\n        retry_count: this.retryCount,              // Number of retries for debugging\n        environment: config.isProduction ? 'production' : 'development',\n      });\n      \n      console.log('[PostHog] Connection test successful - analytics ready');\n    } catch (error) {\n      console.warn('[PostHog] Connection test failed:', error);\n    }\n  }\n\n  /**\n   * Identify user for personalized analytics and targeting.\n   * \n   * Associates all future events with a specific user ID, enabling:\n   *   - Cross-device tracking and session continuity\n   *   - Personalized feature flags and A/B tests\n   *   - User-specific analytics and cohort analysis\n   *   - Revenue attribution and lifetime value tracking\n   * \n   * Privacy Compliance:\n   *   - Only identifies users who have provided consent\n   *   - Supports pseudonymous identifiers for privacy\n   *   - Respects user opt-out preferences\n   * \n   * Parameters:\n   *   userId: Unique user identifier (UUID, email hash, etc.)\n   *   properties: Additional user attributes for segmentation\n   * \n   * Example:\n   *   analytics.identify('user_123', {\n   *     email: 'user@example.com',\n   *     subscription_tier: 'premium',\n   *     first_name: 'John',\n   *     signup_date: '2024-01-01'\n   *   });\n   */\n  identify(userId: string, properties?: Record<string, any>) {\n    if (this.initialized) {\n      console.log('[PostHog] Identifying user:', userId, properties);\n      posthog.identify(userId, properties);\n    }\n  }\n\n  /**\n   * Track user events for analytics and business intelligence.\n   * \n   * Records user actions, behaviors, and system events for:\n   *   - Product analytics and user journey mapping\n   *   - Revenue tracking and conversion optimization\n   *   - A/B testing and feature performance measurement\n   *   - Error monitoring and performance analysis\n   * \n   * Event Processing:\n   *   - Validates event name and properties\n   *   - Enriches events with common properties (timestamp, user agent, etc.)\n   *   - Handles errors gracefully without breaking user experience\n   *   - Logs events for debugging in development\n   * \n   * Common Event Categories:\n   *   - User actions: swipe_left, swipe_right, product_clicked\n   *   - Revenue events: affiliate_click, purchase_completed\n   *   - System events: page_viewed, error_occurred\n   *   - Engagement: session_started, feature_used\n   * \n   * Parameters:\n   *   eventName: Descriptive event name (snake_case convention)\n   *   properties: Event-specific data for analysis\n   * \n   * Example:\n   *   analytics.track('product_swiped', {\n   *     direction: 'right',\n   *     product_id: 'B08GYKNCCP',\n   *     category: 'Electronics',\n   *     session_id: 'session_123'\n   *   });\n   */\n  track(eventName: string, properties?: Record<string, any>) {\n    // Handle analytics not initialized gracefully\n    if (!this.initialized) {\n      console.warn('[PostHog] Analytics not initialized, event queued:', eventName);\n      // In production, could queue events for later sending\n      return;\n    }\n\n    // Validate event meets naming and data requirements\n    if (!validateEvent(eventName, properties)) {\n      return;\n    }\n\n    try {\n      // Enrich event with common properties for consistent analytics\n      const enrichedProperties = {\n        ...getCommonEventProperties(),      // Standard properties (timestamp, URL, etc.)\n        ...properties,                      // Event-specific properties\n      };\n\n      console.log('[PostHog] Tracking event:', eventName, enrichedProperties);\n      posthog.capture(eventName, enrichedProperties);\n    } catch (error) {\n      console.error('[PostHog] Failed to track event:', eventName, error);\n      // Continue execution even if analytics fails\n    }\n  }\n\n  /**\n   * Set or update user properties for segmentation and personalization.\n   * \n   * Updates user profile data for:\n   *   - User segmentation and cohort analysis\n   *   - Personalized feature flags and targeting\n   *   - Revenue analysis and lifetime value tracking\n   *   - Customer support and user insights\n   * \n   * Property Categories:\n   *   - Demographics: age, location, gender\n   *   - Subscription: tier, status, billing_cycle\n   *   - Behavior: last_login, total_swipes, preferences\n   *   - Revenue: total_spent, commission_generated\n   * \n   * Parameters:\n   *   properties: Key-value pairs of user attributes\n   * \n   * Example:\n   *   analytics.setUserProperties({\n   *     subscription_tier: 'premium',\n   *     total_swipes: 150,\n   *     last_active: '2024-01-01',\n   *     favorite_categories: ['Electronics', 'Books']\n   *   });\n   */\n  setUserProperties(properties: Record<string, any>) {\n    if (this.initialized) {\n      console.log('[PostHog] Setting user properties:', properties);\n      posthog.people.set(properties);\n    }\n  }\n\n  /**\n   * Track page views for navigation analytics and user journey mapping.\n   * \n   * Records page navigation events for:\n   *   - User flow analysis and conversion funnels\n   *   - Page performance and engagement metrics\n   *   - A/B testing of page layouts and content\n   *   - SEO and content optimization insights\n   * \n   * Automatic Enrichment:\n   *   - Referrer information for traffic source analysis\n   *   - Page load time and performance metrics\n   *   - Device and browser information\n   *   - User session context\n   * \n   * Parameters:\n   *   path: Optional page path (defaults to current URL)\n   * \n   * Example:\n   *   analytics.trackPageView('/discover'); // Track specific page\n   *   analytics.trackPageView();            // Track current page\n   */\n  trackPageView(path?: string) {\n    if (this.initialized) {\n      const pageUrl = path || window.location.href;\n      console.log('[PostHog] Tracking page view:', pageUrl);\n      \n      posthog.capture('$pageview', {\n        $current_url: pageUrl,              // Page URL for navigation tracking\n        page_title: document.title,         // Page title for content analysis\n        referrer: document.referrer,        // Previous page for traffic flow\n      });\n    }\n  }\n\n  /**\n   * Reset user session for logout and privacy compliance.\n   * \n   * Clears all user identification and session data for:\n   *   - User logout and session termination\n   *   - Privacy compliance and data protection\n   *   - Shared device usage scenarios\n   *   - Testing and development environments\n   * \n   * Reset Actions:\n   *   - Clears user identification and properties\n   *   - Resets feature flag cache\n   *   - Generates new anonymous session ID\n   *   - Maintains analytics functionality for anonymous tracking\n   * \n   * Privacy Compliance:\n   *   - Ensures no personal data persists after logout\n   *   - Supports \"right to be forgotten\" requirements\n   *   - Clears all locally stored user data\n   * \n   * Example:\n   *   // On user logout\n   *   analytics.reset();\n   */\n  reset() {\n    if (this.initialized) {\n      console.log('[PostHog] Resetting user session');\n      posthog.reset();\n    }\n  }\n\n  /**\n   * Associate user with groups for organizational analytics.\n   * \n   * Groups users by organization, team, or other entities for:\n   *   - B2B analytics and enterprise insights\n   *   - Team collaboration feature usage\n   *   - Organization-level reporting and billing\n   *   - Multi-tenant application analytics\n   * \n   * Group Types:\n   *   - organization: Company or business entity\n   *   - team: Department or project team\n   *   - subscription: Shared subscription account\n   *   - family: Family gift-giving groups\n   * \n   * Parameters:\n   *   groupType: Type of group (organization, team, etc.)\n   *   groupKey: Unique identifier for the group\n   *   properties: Group-specific attributes\n   * \n   * Example:\n   *   analytics.group('organization', 'acme-corp', {\n   *     name: 'Acme Corporation',\n   *     plan: 'enterprise',\n   *     employees: 500\n   *   });\n   */\n  group(groupType: string, groupKey: string, properties?: Record<string, any>) {\n    if (this.initialized) {\n      console.log('[PostHog] Setting group:', groupType, groupKey, properties);\n      posthog.group(groupType, groupKey, properties);\n    }\n  }\n\n  /**\n   * Check if a feature flag is enabled for the current user.\n   * \n   * Enables controlled feature rollouts and A/B testing for:\n   *   - Gradual feature releases to user segments\n   *   - A/B testing of new functionality\n   *   - Kill switches for problematic features\n   *   - Personalized user experiences\n   * \n   * Feature Flag Categories:\n   *   - UI features: new_swipe_interface, dark_mode\n   *   - Business logic: premium_recommendations, affiliate_tracking\n   *   - Experiments: recommendation_algorithm_v2\n   *   - Rollouts: mobile_app_promotion\n   * \n   * Parameters:\n   *   flag: Feature flag name (snake_case convention)\n   * \n   * Returns:\n   *   boolean: True if feature is enabled for current user\n   * \n   * Example:\n   *   if (analytics.isFeatureEnabled('new_recommendation_engine')) {\n   *     // Show new recommendation UI\n   *   }\n   */\n  isFeatureEnabled(flag: string): boolean {\n    if (this.initialized) {\n      const enabled = posthog.isFeatureEnabled(flag) === true;\n      console.log(`[PostHog] Feature flag '${flag}':`, enabled);\n      return enabled;\n    }\n    return false;  // Default to disabled if analytics not available\n  }\n\n  /**\n   * Get feature flag value for advanced flag configurations.\n   * \n   * Retrieves feature flag values that can be:\n   *   - Boolean: true/false for simple on/off features\n   *   - String: variant names for multivariate tests\n   *   - Number: configuration values or percentages\n   * \n   * Advanced Use Cases:\n   *   - Multivariate testing with multiple variants\n   *   - Configuration flags with specific values\n   *   - Percentage-based rollouts\n   *   - String-based feature variants\n   * \n   * Parameters:\n   *   flag: Feature flag name\n   * \n   * Returns:\n   *   string | boolean | undefined: Flag value or undefined if not set\n   * \n   * Example:\n   *   const variant = analytics.getFeatureFlag('recommendation_algorithm');\n   *   if (variant === 'collaborative_filtering') {\n   *     // Use collaborative filtering algorithm\n   *   } else if (variant === 'content_based') {\n   *     // Use content-based algorithm\n   *   }\n   */\n  getFeatureFlag(flag: string): string | boolean | undefined {\n    if (this.initialized) {\n      const value = posthog.getFeatureFlag(flag);\n      console.log(`[PostHog] Feature flag '${flag}' value:`, value);\n      return value;\n    }\n    return undefined;\n  }\n\n  /**\n   * Opt user out of analytics tracking for privacy compliance.\n   * \n   * Provides user control over data collection for:\n   *   - GDPR and privacy regulation compliance\n   *   - User preference and consent management\n   *   - Cookie banner and privacy controls\n   *   - Data minimization principles\n   * \n   * Opt-Out Effects:\n   *   - Stops all event tracking and data collection\n   *   - Disables feature flags and personalization\n   *   - Maintains basic functionality without analytics\n   *   - Sets persistent opt-out preference\n   * \n   * Privacy Compliance:\n   *   - Respects user privacy choices\n   *   - Provides clear opt-out mechanism\n   *   - Maintains opt-out status across sessions\n   * \n   * Example:\n   *   // User clicks \"Opt out of analytics\"\n   *   analytics.optOut();\n   */\n  optOut() {\n    if (this.initialized) {\n      console.log('[PostHog] User opted out of analytics tracking');\n      posthog.opt_out_capturing();\n    }\n  }\n\n  /**\n   * Opt user into analytics tracking after previous opt-out.\n   * \n   * Re-enables analytics for users who previously opted out:\n   *   - Restores full analytics functionality\n   *   - Re-enables feature flags and personalization\n   *   - Resumes event tracking and data collection\n   *   - Updates user consent preferences\n   * \n   * Use Cases:\n   *   - User changes privacy preferences\n   *   - Premium users enabling advanced features\n   *   - Onboarding flow consent updates\n   *   - Settings page privacy controls\n   * \n   * Example:\n   *   // User clicks \"Enable analytics\"\n   *   analytics.optIn();\n   */\n  optIn() {\n    if (this.initialized) {\n      console.log('[PostHog] User opted into analytics tracking');\n      posthog.opt_in_capturing();\n    }\n  }\n\n  /**\n   * Check if user has opted out of analytics tracking.\n   * \n   * Determines user's current privacy preference for:\n   *   - Conditional UI rendering based on consent\n   *   - Privacy settings page status display\n   *   - Feature availability and functionality\n   *   - Compliance with privacy regulations\n   * \n   * Returns:\n   *   boolean: True if user has opted out, false otherwise\n   * \n   * Example:\n   *   if (!analytics.hasOptedOut()) {\n   *     // Show analytics-dependent features\n   *     renderPersonalizedRecommendations();\n   *   }\n   */\n  hasOptedOut(): boolean {\n    if (this.initialized) {\n      return posthog.has_opted_out_capturing();\n    }\n    return false;  // Default to opted-in if analytics not available\n  }\n}\n\n// ==============================================================================\n// SINGLETON ANALYTICS INSTANCE\n// ==============================================================================\n// Global analytics instance for application-wide usage\n\n/**\n * Global analytics service instance.\n * \n * Singleton pattern ensures consistent analytics across the entire application.\n * Use this instance for all analytics operations to maintain state and configuration.\n */\nexport const analytics = new AnalyticsService();\n\n// ==============================================================================\n// CONVENIENCE FUNCTIONS\n// ==============================================================================\n// Simplified API for common analytics operations\n\n/**\n * Track user event with simplified API.\n * \n * Convenience function for the most common analytics operation.\n * Provides type-safe event tracking without direct service access.\n * \n * Parameters:\n *   eventName: Descriptive event name (snake_case)\n *   properties: Optional event data\n * \n * Example:\n *   trackEvent('button_clicked', { button_id: 'signup' });\n */\nexport const trackEvent = (eventName: string, properties?: Record<string, any>) => {\n  analytics.track(eventName, properties);\n};\n\n/**\n * Identify user with simplified API.\n * \n * Convenience function for user identification without direct service access.\n * \n * Parameters:\n *   userId: Unique user identifier\n *   properties: Optional user attributes\n * \n * Example:\n *   identifyUser('user_123', { email: 'user@example.com' });\n */\nexport const identifyUser = (userId: string, properties?: Record<string, any>) => {\n  analytics.identify(userId, properties);\n};\n\n/**\n * Track page view with simplified API.\n * \n * Convenience function for page view tracking without direct service access.\n * \n * Parameters:\n *   path: Optional page path (defaults to current URL)\n * \n * Example:\n *   trackPageView('/discover');\n */\nexport const trackPageView = (path?: string) => {\n  analytics.trackPageView(path);\n};\n\n// Default export for importing as single module\nexport default analytics;\n\n// Export all public interfaces\n// Exported: analytics, trackEvent, identifyUser, trackPageView, AnalyticsService"],
      names: ["analytics", "identifyUser", "trackEvent", "trackPageView", "AnalyticsService", "init", "window", "initialized", "config", "posthogKey", "posthogConfig", "createPostHogConfig", "console", "log", "key", "substring", "host", "api_host", "debug", "posthog", "retryCount", "testConnection", "error", "maxRetries", "delayMs", "setTimeout", "track", "getCommonEventProperties", "initialization_time", "Date", "now", "retry_count", "environment", "isProduction", "warn", "identify", "userId", "properties", "eventName", "validateEvent", "enrichedProperties", "capture", "setUserProperties", "people", "set", "path", "pageUrl", "location", "href", "$current_url", "page_title", "document", "title", "referrer", "reset", "group", "groupType", "groupKey", "isFeatureEnabled", "flag", "enabled", "getFeatureFlag", "value", "undefined", "optOut", "opt_out_capturing", "optIn", "opt_in_capturing", "hasOptedOut", "has_opted_out_capturing"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "18822d8b44ccc02902ca4b5c7f72f9391b1cd60e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_6i76auso8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_6i76auso8();
cov_6i76auso8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_6i76auso8().f[0]++;
  cov_6i76auso8().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_6i76auso8().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_6i76auso8().s[3]++;
_export(exports, {
  analytics: function () {
    /* istanbul ignore next */
    cov_6i76auso8().f[1]++;
    cov_6i76auso8().s[4]++;
    return analytics;
  },
  // Default export for importing as single module
  default: function () {
    /* istanbul ignore next */
    cov_6i76auso8().f[2]++;
    cov_6i76auso8().s[5]++;
    return _default // Export all public interfaces
    // Exported: analytics, trackEvent, identifyUser, trackPageView, AnalyticsService
    ;
  },
  identifyUser: function () {
    /* istanbul ignore next */
    cov_6i76auso8().f[3]++;
    cov_6i76auso8().s[6]++;
    return identifyUser;
  },
  trackEvent: function () {
    /* istanbul ignore next */
    cov_6i76auso8().f[4]++;
    cov_6i76auso8().s[7]++;
    return trackEvent;
  },
  trackPageView: function () {
    /* istanbul ignore next */
    cov_6i76auso8().f[5]++;
    cov_6i76auso8().s[8]++;
    return trackPageView;
  }
});
const _posthogjs =
/* istanbul ignore next */
(/*#__PURE__*/cov_6i76auso8().s[9]++, _interop_require_default(require("posthog-js")));
const _config =
/* istanbul ignore next */
(cov_6i76auso8().s[10]++, require("../config"));
const _posthogconfig =
/* istanbul ignore next */
(cov_6i76auso8().s[11]++, require("./posthog-config"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_6i76auso8().f[6]++;
  cov_6i76auso8().s[12]++;
  return /* istanbul ignore next */(cov_6i76auso8().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_6i76auso8().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_6i76auso8().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_6i76auso8().b[0][1]++, {
    default: obj
  });
}
/**
 * Analytics Service class for comprehensive user behavior tracking.
 * 
 * Manages PostHog integration with robust error handling, retry logic,
 * and business-specific event tracking. Provides type-safe analytics
 * interface for the entire application.
 * 
 * Architecture:
 *   - Singleton pattern for consistent analytics instance
 *   - Automatic initialization with retry logic
 *   - Event validation and enrichment
 *   - Feature flag integration
 *   - Privacy controls and opt-out functionality
 * 
 * Error Handling:
 *   - Graceful degradation when analytics unavailable
 *   - Automatic retry on initialization failures
 *   - Comprehensive logging for debugging
 *   - Fallback behavior for critical paths
 */
class AnalyticsService {
  /**
  * Initialize PostHog analytics service with robust error handling.
  * 
  * Performs comprehensive setup including:
  *   - PostHog SDK initialization with custom configuration
  *   - Connection testing and validation
  *   - Automatic retry on failures
  *   - Development vs production environment handling
  * 
  * Error Recovery:
  *   - Retries initialization up to maxRetries times
  *   - Exponential backoff for retry delays
  *   - Graceful degradation if initialization fails
  * 
  * Environment Handling:
  *   - Server-side rendering compatibility (no window)
  *   - Development debugging and logging
  *   - Production optimizations
  * 
  * Returns:
  *   Promise<void>: Resolves when initialization complete
  */
  async init() {
    /* istanbul ignore next */
    cov_6i76auso8().f[7]++;
    cov_6i76auso8().s[13]++;
    // Prevent initialization in invalid environments
    if (
    /* istanbul ignore next */
    (cov_6i76auso8().b[3][0]++, typeof window === "undefined") ||
    /* istanbul ignore next */
    (cov_6i76auso8().b[3][1]++, this.initialized) ||
    /* istanbul ignore next */
    (cov_6i76auso8().b[3][2]++, !_config.config.posthogKey)) {
      /* istanbul ignore next */
      cov_6i76auso8().b[2][0]++;
      cov_6i76auso8().s[14]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_6i76auso8().b[2][1]++;
    }
    cov_6i76auso8().s[15]++;
    try {
      // Create PostHog configuration with environment-specific settings
      const posthogConfig =
      /* istanbul ignore next */
      (cov_6i76auso8().s[16]++, (0, _posthogconfig.createPostHogConfig)());
      /* istanbul ignore next */
      cov_6i76auso8().s[17]++;
      console.log("[PostHog] Initializing analytics service...", {
        key: _config.config.posthogKey?.substring(0, 10) + "...",
        host: posthogConfig.api_host,
        debug: posthogConfig.debug
      });
      // Initialize PostHog SDK with configuration
      /* istanbul ignore next */
      cov_6i76auso8().s[18]++;
      _posthogjs.default.init(_config.config.posthogKey, posthogConfig);
      // Mark as successfully initialized
      /* istanbul ignore next */
      cov_6i76auso8().s[19]++;
      this.initialized = true;
      /* istanbul ignore next */
      cov_6i76auso8().s[20]++;
      this.retryCount = 0; // Reset retry counter
      // Verify analytics connectivity with test event
      /* istanbul ignore next */
      cov_6i76auso8().s[21]++;
      await this.testConnection();
    } catch (error) {
      /* istanbul ignore next */
      cov_6i76auso8().s[22]++;
      console.error("[PostHog] Initialization failed:", error);
      // Implement retry logic with exponential backoff
      /* istanbul ignore next */
      cov_6i76auso8().s[23]++;
      if (this.retryCount < this.maxRetries) {
        /* istanbul ignore next */
        cov_6i76auso8().b[4][0]++;
        cov_6i76auso8().s[24]++;
        this.retryCount++;
        const delayMs =
        /* istanbul ignore next */
        (cov_6i76auso8().s[25]++, 1000 * this.retryCount); // Exponential backoff
        /* istanbul ignore next */
        cov_6i76auso8().s[26]++;
        console.log(`[PostHog] Retrying initialization (${this.retryCount}/${this.maxRetries}) in ${delayMs}ms...`);
        /* istanbul ignore next */
        cov_6i76auso8().s[27]++;
        setTimeout(() => {
          /* istanbul ignore next */
          cov_6i76auso8().f[8]++;
          cov_6i76auso8().s[28]++;
          return this.init();
        }, delayMs);
      } else {
        /* istanbul ignore next */
        cov_6i76auso8().b[4][1]++;
        cov_6i76auso8().s[29]++;
        console.error("[PostHog] Maximum retry attempts reached, analytics disabled");
      }
    }
  }
  /**
  * Test PostHog connectivity with diagnostic event.
  * 
  * Sends a test event to verify that analytics are working correctly.
  * Provides debugging information for troubleshooting connection issues.
  * 
  * Test Event Data:
  *   - Common properties (user agent, URL, timestamp)
  *   - Initialization metadata (time, retry count)
  *   - Environment information for debugging
  * 
  * Returns:
  *   Promise<void>: Resolves when test complete
  */
  async testConnection() {
    /* istanbul ignore next */
    cov_6i76auso8().f[9]++;
    cov_6i76auso8().s[30]++;
    if (!this.initialized) {
      /* istanbul ignore next */
      cov_6i76auso8().b[5][0]++;
      cov_6i76auso8().s[31]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_6i76auso8().b[5][1]++;
    }
    cov_6i76auso8().s[32]++;
    try {
      /* istanbul ignore next */
      cov_6i76auso8().s[33]++;
      // Send diagnostic event with initialization metadata
      this.track("analytics_service_initialized", {
        ...(0, _posthogconfig.getCommonEventProperties)(),
        initialization_time: Date.now(),
        retry_count: this.retryCount,
        environment: _config.config.isProduction ?
        /* istanbul ignore next */
        (cov_6i76auso8().b[6][0]++, "production") :
        /* istanbul ignore next */
        (cov_6i76auso8().b[6][1]++, "development")
      });
      /* istanbul ignore next */
      cov_6i76auso8().s[34]++;
      console.log("[PostHog] Connection test successful - analytics ready");
    } catch (error) {
      /* istanbul ignore next */
      cov_6i76auso8().s[35]++;
      console.warn("[PostHog] Connection test failed:", error);
    }
  }
  /**
  * Identify user for personalized analytics and targeting.
  * 
  * Associates all future events with a specific user ID, enabling:
  *   - Cross-device tracking and session continuity
  *   - Personalized feature flags and A/B tests
  *   - User-specific analytics and cohort analysis
  *   - Revenue attribution and lifetime value tracking
  * 
  * Privacy Compliance:
  *   - Only identifies users who have provided consent
  *   - Supports pseudonymous identifiers for privacy
  *   - Respects user opt-out preferences
  * 
  * Parameters:
  *   userId: Unique user identifier (UUID, email hash, etc.)
  *   properties: Additional user attributes for segmentation
  * 
  * Example:
  *   analytics.identify('user_123', {
  *     email: 'user@example.com',
  *     subscription_tier: 'premium',
  *     first_name: 'John',
  *     signup_date: '2024-01-01'
  *   });
  */
  identify(userId, properties) {
    /* istanbul ignore next */
    cov_6i76auso8().f[10]++;
    cov_6i76auso8().s[36]++;
    if (this.initialized) {
      /* istanbul ignore next */
      cov_6i76auso8().b[7][0]++;
      cov_6i76auso8().s[37]++;
      console.log("[PostHog] Identifying user:", userId, properties);
      /* istanbul ignore next */
      cov_6i76auso8().s[38]++;
      _posthogjs.default.identify(userId, properties);
    } else
    /* istanbul ignore next */
    {
      cov_6i76auso8().b[7][1]++;
    }
  }
  /**
  * Track user events for analytics and business intelligence.
  * 
  * Records user actions, behaviors, and system events for:
  *   - Product analytics and user journey mapping
  *   - Revenue tracking and conversion optimization
  *   - A/B testing and feature performance measurement
  *   - Error monitoring and performance analysis
  * 
  * Event Processing:
  *   - Validates event name and properties
  *   - Enriches events with common properties (timestamp, user agent, etc.)
  *   - Handles errors gracefully without breaking user experience
  *   - Logs events for debugging in development
  * 
  * Common Event Categories:
  *   - User actions: swipe_left, swipe_right, product_clicked
  *   - Revenue events: affiliate_click, purchase_completed
  *   - System events: page_viewed, error_occurred
  *   - Engagement: session_started, feature_used
  * 
  * Parameters:
  *   eventName: Descriptive event name (snake_case convention)
  *   properties: Event-specific data for analysis
  * 
  * Example:
  *   analytics.track('product_swiped', {
  *     direction: 'right',
  *     product_id: 'B08GYKNCCP',
  *     category: 'Electronics',
  *     session_id: 'session_123'
  *   });
  */
  track(eventName, properties) {
    /* istanbul ignore next */
    cov_6i76auso8().f[11]++;
    cov_6i76auso8().s[39]++;
    // Handle analytics not initialized gracefully
    if (!this.initialized) {
      /* istanbul ignore next */
      cov_6i76auso8().b[8][0]++;
      cov_6i76auso8().s[40]++;
      console.warn("[PostHog] Analytics not initialized, event queued:", eventName);
      // In production, could queue events for later sending
      /* istanbul ignore next */
      cov_6i76auso8().s[41]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_6i76auso8().b[8][1]++;
    }
    // Validate event meets naming and data requirements
    cov_6i76auso8().s[42]++;
    if (!(0, _posthogconfig.validateEvent)(eventName, properties)) {
      /* istanbul ignore next */
      cov_6i76auso8().b[9][0]++;
      cov_6i76auso8().s[43]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_6i76auso8().b[9][1]++;
    }
    cov_6i76auso8().s[44]++;
    try {
      // Enrich event with common properties for consistent analytics
      const enrichedProperties =
      /* istanbul ignore next */
      (cov_6i76auso8().s[45]++, {
        ...(0, _posthogconfig.getCommonEventProperties)(),
        ...properties
      });
      /* istanbul ignore next */
      cov_6i76auso8().s[46]++;
      console.log("[PostHog] Tracking event:", eventName, enrichedProperties);
      /* istanbul ignore next */
      cov_6i76auso8().s[47]++;
      _posthogjs.default.capture(eventName, enrichedProperties);
    } catch (error) {
      /* istanbul ignore next */
      cov_6i76auso8().s[48]++;
      console.error("[PostHog] Failed to track event:", eventName, error);
      // Continue execution even if analytics fails
    }
  }
  /**
  * Set or update user properties for segmentation and personalization.
  * 
  * Updates user profile data for:
  *   - User segmentation and cohort analysis
  *   - Personalized feature flags and targeting
  *   - Revenue analysis and lifetime value tracking
  *   - Customer support and user insights
  * 
  * Property Categories:
  *   - Demographics: age, location, gender
  *   - Subscription: tier, status, billing_cycle
  *   - Behavior: last_login, total_swipes, preferences
  *   - Revenue: total_spent, commission_generated
  * 
  * Parameters:
  *   properties: Key-value pairs of user attributes
  * 
  * Example:
  *   analytics.setUserProperties({
  *     subscription_tier: 'premium',
  *     total_swipes: 150,
  *     last_active: '2024-01-01',
  *     favorite_categories: ['Electronics', 'Books']
  *   });
  */
  setUserProperties(properties) {
    /* istanbul ignore next */
    cov_6i76auso8().f[12]++;
    cov_6i76auso8().s[49]++;
    if (this.initialized) {
      /* istanbul ignore next */
      cov_6i76auso8().b[10][0]++;
      cov_6i76auso8().s[50]++;
      console.log("[PostHog] Setting user properties:", properties);
      /* istanbul ignore next */
      cov_6i76auso8().s[51]++;
      _posthogjs.default.people.set(properties);
    } else
    /* istanbul ignore next */
    {
      cov_6i76auso8().b[10][1]++;
    }
  }
  /**
  * Track page views for navigation analytics and user journey mapping.
  * 
  * Records page navigation events for:
  *   - User flow analysis and conversion funnels
  *   - Page performance and engagement metrics
  *   - A/B testing of page layouts and content
  *   - SEO and content optimization insights
  * 
  * Automatic Enrichment:
  *   - Referrer information for traffic source analysis
  *   - Page load time and performance metrics
  *   - Device and browser information
  *   - User session context
  * 
  * Parameters:
  *   path: Optional page path (defaults to current URL)
  * 
  * Example:
  *   analytics.trackPageView('/discover'); // Track specific page
  *   analytics.trackPageView();            // Track current page
  */
  trackPageView(path) {
    /* istanbul ignore next */
    cov_6i76auso8().f[13]++;
    cov_6i76auso8().s[52]++;
    if (this.initialized) {
      /* istanbul ignore next */
      cov_6i76auso8().b[11][0]++;
      const pageUrl =
      /* istanbul ignore next */
      (cov_6i76auso8().s[53]++,
      /* istanbul ignore next */
      (cov_6i76auso8().b[12][0]++, path) ||
      /* istanbul ignore next */
      (cov_6i76auso8().b[12][1]++, window.location.href));
      /* istanbul ignore next */
      cov_6i76auso8().s[54]++;
      console.log("[PostHog] Tracking page view:", pageUrl);
      /* istanbul ignore next */
      cov_6i76auso8().s[55]++;
      _posthogjs.default.capture("$pageview", {
        $current_url: pageUrl,
        page_title: document.title,
        referrer: document.referrer
      });
    } else
    /* istanbul ignore next */
    {
      cov_6i76auso8().b[11][1]++;
    }
  }
  /**
  * Reset user session for logout and privacy compliance.
  * 
  * Clears all user identification and session data for:
  *   - User logout and session termination
  *   - Privacy compliance and data protection
  *   - Shared device usage scenarios
  *   - Testing and development environments
  * 
  * Reset Actions:
  *   - Clears user identification and properties
  *   - Resets feature flag cache
  *   - Generates new anonymous session ID
  *   - Maintains analytics functionality for anonymous tracking
  * 
  * Privacy Compliance:
  *   - Ensures no personal data persists after logout
  *   - Supports "right to be forgotten" requirements
  *   - Clears all locally stored user data
  * 
  * Example:
  *   // On user logout
  *   analytics.reset();
  */
  reset() {
    /* istanbul ignore next */
    cov_6i76auso8().f[14]++;
    cov_6i76auso8().s[56]++;
    if (this.initialized) {
      /* istanbul ignore next */
      cov_6i76auso8().b[13][0]++;
      cov_6i76auso8().s[57]++;
      console.log("[PostHog] Resetting user session");
      /* istanbul ignore next */
      cov_6i76auso8().s[58]++;
      _posthogjs.default.reset();
    } else
    /* istanbul ignore next */
    {
      cov_6i76auso8().b[13][1]++;
    }
  }
  /**
  * Associate user with groups for organizational analytics.
  * 
  * Groups users by organization, team, or other entities for:
  *   - B2B analytics and enterprise insights
  *   - Team collaboration feature usage
  *   - Organization-level reporting and billing
  *   - Multi-tenant application analytics
  * 
  * Group Types:
  *   - organization: Company or business entity
  *   - team: Department or project team
  *   - subscription: Shared subscription account
  *   - family: Family gift-giving groups
  * 
  * Parameters:
  *   groupType: Type of group (organization, team, etc.)
  *   groupKey: Unique identifier for the group
  *   properties: Group-specific attributes
  * 
  * Example:
  *   analytics.group('organization', 'acme-corp', {
  *     name: 'Acme Corporation',
  *     plan: 'enterprise',
  *     employees: 500
  *   });
  */
  group(groupType, groupKey, properties) {
    /* istanbul ignore next */
    cov_6i76auso8().f[15]++;
    cov_6i76auso8().s[59]++;
    if (this.initialized) {
      /* istanbul ignore next */
      cov_6i76auso8().b[14][0]++;
      cov_6i76auso8().s[60]++;
      console.log("[PostHog] Setting group:", groupType, groupKey, properties);
      /* istanbul ignore next */
      cov_6i76auso8().s[61]++;
      _posthogjs.default.group(groupType, groupKey, properties);
    } else
    /* istanbul ignore next */
    {
      cov_6i76auso8().b[14][1]++;
    }
  }
  /**
  * Check if a feature flag is enabled for the current user.
  * 
  * Enables controlled feature rollouts and A/B testing for:
  *   - Gradual feature releases to user segments
  *   - A/B testing of new functionality
  *   - Kill switches for problematic features
  *   - Personalized user experiences
  * 
  * Feature Flag Categories:
  *   - UI features: new_swipe_interface, dark_mode
  *   - Business logic: premium_recommendations, affiliate_tracking
  *   - Experiments: recommendation_algorithm_v2
  *   - Rollouts: mobile_app_promotion
  * 
  * Parameters:
  *   flag: Feature flag name (snake_case convention)
  * 
  * Returns:
  *   boolean: True if feature is enabled for current user
  * 
  * Example:
  *   if (analytics.isFeatureEnabled('new_recommendation_engine')) {
  *     // Show new recommendation UI
  *   }
  */
  isFeatureEnabled(flag) {
    /* istanbul ignore next */
    cov_6i76auso8().f[16]++;
    cov_6i76auso8().s[62]++;
    if (this.initialized) {
      /* istanbul ignore next */
      cov_6i76auso8().b[15][0]++;
      const enabled =
      /* istanbul ignore next */
      (cov_6i76auso8().s[63]++, _posthogjs.default.isFeatureEnabled(flag) === true);
      /* istanbul ignore next */
      cov_6i76auso8().s[64]++;
      console.log(`[PostHog] Feature flag '${flag}':`, enabled);
      /* istanbul ignore next */
      cov_6i76auso8().s[65]++;
      return enabled;
    } else
    /* istanbul ignore next */
    {
      cov_6i76auso8().b[15][1]++;
    }
    cov_6i76auso8().s[66]++;
    return false; // Default to disabled if analytics not available
  }
  /**
  * Get feature flag value for advanced flag configurations.
  * 
  * Retrieves feature flag values that can be:
  *   - Boolean: true/false for simple on/off features
  *   - String: variant names for multivariate tests
  *   - Number: configuration values or percentages
  * 
  * Advanced Use Cases:
  *   - Multivariate testing with multiple variants
  *   - Configuration flags with specific values
  *   - Percentage-based rollouts
  *   - String-based feature variants
  * 
  * Parameters:
  *   flag: Feature flag name
  * 
  * Returns:
  *   string | boolean | undefined: Flag value or undefined if not set
  * 
  * Example:
  *   const variant = analytics.getFeatureFlag('recommendation_algorithm');
  *   if (variant === 'collaborative_filtering') {
  *     // Use collaborative filtering algorithm
  *   } else if (variant === 'content_based') {
  *     // Use content-based algorithm
  *   }
  */
  getFeatureFlag(flag) {
    /* istanbul ignore next */
    cov_6i76auso8().f[17]++;
    cov_6i76auso8().s[67]++;
    if (this.initialized) {
      /* istanbul ignore next */
      cov_6i76auso8().b[16][0]++;
      const value =
      /* istanbul ignore next */
      (cov_6i76auso8().s[68]++, _posthogjs.default.getFeatureFlag(flag));
      /* istanbul ignore next */
      cov_6i76auso8().s[69]++;
      console.log(`[PostHog] Feature flag '${flag}' value:`, value);
      /* istanbul ignore next */
      cov_6i76auso8().s[70]++;
      return value;
    } else
    /* istanbul ignore next */
    {
      cov_6i76auso8().b[16][1]++;
    }
    cov_6i76auso8().s[71]++;
    return undefined;
  }
  /**
  * Opt user out of analytics tracking for privacy compliance.
  * 
  * Provides user control over data collection for:
  *   - GDPR and privacy regulation compliance
  *   - User preference and consent management
  *   - Cookie banner and privacy controls
  *   - Data minimization principles
  * 
  * Opt-Out Effects:
  *   - Stops all event tracking and data collection
  *   - Disables feature flags and personalization
  *   - Maintains basic functionality without analytics
  *   - Sets persistent opt-out preference
  * 
  * Privacy Compliance:
  *   - Respects user privacy choices
  *   - Provides clear opt-out mechanism
  *   - Maintains opt-out status across sessions
  * 
  * Example:
  *   // User clicks "Opt out of analytics"
  *   analytics.optOut();
  */
  optOut() {
    /* istanbul ignore next */
    cov_6i76auso8().f[18]++;
    cov_6i76auso8().s[72]++;
    if (this.initialized) {
      /* istanbul ignore next */
      cov_6i76auso8().b[17][0]++;
      cov_6i76auso8().s[73]++;
      console.log("[PostHog] User opted out of analytics tracking");
      /* istanbul ignore next */
      cov_6i76auso8().s[74]++;
      _posthogjs.default.opt_out_capturing();
    } else
    /* istanbul ignore next */
    {
      cov_6i76auso8().b[17][1]++;
    }
  }
  /**
  * Opt user into analytics tracking after previous opt-out.
  * 
  * Re-enables analytics for users who previously opted out:
  *   - Restores full analytics functionality
  *   - Re-enables feature flags and personalization
  *   - Resumes event tracking and data collection
  *   - Updates user consent preferences
  * 
  * Use Cases:
  *   - User changes privacy preferences
  *   - Premium users enabling advanced features
  *   - Onboarding flow consent updates
  *   - Settings page privacy controls
  * 
  * Example:
  *   // User clicks "Enable analytics"
  *   analytics.optIn();
  */
  optIn() {
    /* istanbul ignore next */
    cov_6i76auso8().f[19]++;
    cov_6i76auso8().s[75]++;
    if (this.initialized) {
      /* istanbul ignore next */
      cov_6i76auso8().b[18][0]++;
      cov_6i76auso8().s[76]++;
      console.log("[PostHog] User opted into analytics tracking");
      /* istanbul ignore next */
      cov_6i76auso8().s[77]++;
      _posthogjs.default.opt_in_capturing();
    } else
    /* istanbul ignore next */
    {
      cov_6i76auso8().b[18][1]++;
    }
  }
  /**
  * Check if user has opted out of analytics tracking.
  * 
  * Determines user's current privacy preference for:
  *   - Conditional UI rendering based on consent
  *   - Privacy settings page status display
  *   - Feature availability and functionality
  *   - Compliance with privacy regulations
  * 
  * Returns:
  *   boolean: True if user has opted out, false otherwise
  * 
  * Example:
  *   if (!analytics.hasOptedOut()) {
  *     // Show analytics-dependent features
  *     renderPersonalizedRecommendations();
  *   }
  */
  hasOptedOut() {
    /* istanbul ignore next */
    cov_6i76auso8().f[20]++;
    cov_6i76auso8().s[78]++;
    if (this.initialized) {
      /* istanbul ignore next */
      cov_6i76auso8().b[19][0]++;
      cov_6i76auso8().s[79]++;
      return _posthogjs.default.has_opted_out_capturing();
    } else
    /* istanbul ignore next */
    {
      cov_6i76auso8().b[19][1]++;
    }
    cov_6i76auso8().s[80]++;
    return false; // Default to opted-in if analytics not available
  }
  constructor() {
    /* istanbul ignore next */
    cov_6i76auso8().f[21]++;
    cov_6i76auso8().s[81]++;
    /**
    * Service state management for reliable analytics operation.
    */
    this.initialized = false // Analytics initialization status
    ;
    /* istanbul ignore next */
    cov_6i76auso8().s[82]++;
    this.retryCount = 0 // Current retry attempt counter
    ;
    /* istanbul ignore next */
    cov_6i76auso8().s[83]++;
    this.maxRetries = 3 // Maximum initialization retry attempts
    ;
  }
}
const analytics =
/* istanbul ignore next */
(cov_6i76auso8().s[84]++, new AnalyticsService());
/* istanbul ignore next */
cov_6i76auso8().s[85]++;
const trackEvent = (eventName, properties) => {
  /* istanbul ignore next */
  cov_6i76auso8().f[22]++;
  cov_6i76auso8().s[86]++;
  analytics.track(eventName, properties);
};
/* istanbul ignore next */
cov_6i76auso8().s[87]++;
const identifyUser = (userId, properties) => {
  /* istanbul ignore next */
  cov_6i76auso8().f[23]++;
  cov_6i76auso8().s[88]++;
  analytics.identify(userId, properties);
};
/* istanbul ignore next */
cov_6i76auso8().s[89]++;
const trackPageView = path => {
  /* istanbul ignore next */
  cov_6i76auso8().f[24]++;
  cov_6i76auso8().s[90]++;
  analytics.trackPageView(path);
};
const _default =
/* istanbul ignore next */
(cov_6i76auso8().s[91]++, analytics);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,