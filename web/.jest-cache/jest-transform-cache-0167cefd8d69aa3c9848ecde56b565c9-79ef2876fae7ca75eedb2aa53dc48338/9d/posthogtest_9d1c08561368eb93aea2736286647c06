a6f10479e3a312ace0984095d8c4dbbe
"use strict";

/* istanbul ignore next */
function cov_2nj2rbch87() {
  var path = "/home/jack/Documents/aclue-preprod/web/src/pages/posthog-test.tsx";
  var hash = "491a200585ce4bad32067b3fdc70d6487092ee0b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/jack/Documents/aclue-preprod/web/src/pages/posthog-test.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 27
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 29
        },
        end: {
          line: 12,
          column: 72
        }
      },
      "5": {
        start: {
          line: 13,
          column: 19
        },
        end: {
          line: 13,
          column: 46
        }
      },
      "6": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 36
        }
      },
      "7": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 51
        }
      },
      "8": {
        start: {
          line: 16,
          column: 39
        },
        end: {
          line: 16,
          column: 51
        }
      },
      "9": {
        start: {
          line: 17,
          column: 28
        },
        end: {
          line: 17,
          column: 41
        }
      },
      "10": {
        start: {
          line: 18,
          column: 27
        },
        end: {
          line: 18,
          column: 40
        }
      },
      "11": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 21,
          column: 20
        }
      },
      "12": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 66
        }
      },
      "13": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "14": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 19
        }
      },
      "15": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "16": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 30,
          column: 10
        }
      },
      "17": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 53
        }
      },
      "18": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "19": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 30
        }
      },
      "20": {
        start: {
          line: 36,
          column: 17
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "21": {
        start: {
          line: 39,
          column: 32
        },
        end: {
          line: 39,
          column: 88
        }
      },
      "22": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "23": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "24": {
        start: {
          line: 42,
          column: 23
        },
        end: {
          line: 42,
          column: 95
        }
      },
      "25": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 47,
          column: 13
        }
      },
      "26": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 57
        }
      },
      "27": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 39
        }
      },
      "28": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 25
        }
      },
      "29": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "30": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 31
        }
      },
      "31": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 18
        }
      },
      "32": {
        start: {
          line: 57,
          column: 32
        },
        end: {
          line: 57,
          column: 63
        }
      },
      "33": {
        start: {
          line: 58,
          column: 28
        },
        end: {
          line: 58,
          column: 52
        }
      },
      "34": {
        start: {
          line: 59,
          column: 19
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "35": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 63,
          column: 15
        }
      },
      "36": {
        start: {
          line: 60,
          column: 24
        },
        end: {
          line: 63,
          column: 13
        }
      },
      "37": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 95,
          column: 11
        }
      },
      "38": {
        start: {
          line: 66,
          column: 28
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "39": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 92,
          column: 13
        }
      },
      "40": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 51
        }
      },
      "41": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 92
        }
      },
      "42": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 71,
          column: 89
        }
      },
      "43": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 73,
          column: 44
        }
      },
      "44": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 74,
          column: 48
        }
      },
      "45": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 79,
          column: 19
        }
      },
      "46": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 45
        }
      },
      "47": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 85,
          column: 19
        }
      },
      "48": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 42
        }
      },
      "49": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 37
        }
      },
      "50": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 63
        }
      },
      "51": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 90,
          column: 93
        }
      },
      "52": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 35
        }
      },
      "53": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 22
        }
      },
      "54": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 219,
          column: 7
        }
      },
      "55": {
        start: {
          line: 147,
          column: 32
        },
        end: {
          line: 150,
          column: 35
        }
      },
      "56": {
        start: {
          line: 151,
          column: 32
        },
        end: {
          line: 151,
          column: 68
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 33
          }
        },
        loc: {
          start: {
            line: 15,
            column: 47
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 39
          },
          end: {
            line: 19,
            column: 40
          }
        },
        loc: {
          start: {
            line: 19,
            column: 61
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 34
          }
        },
        loc: {
          start: {
            line: 23,
            column: 53
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "PostHogTest",
        decl: {
          start: {
            line: 56,
            column: 9
          },
          end: {
            line: 56,
            column: 20
          }
        },
        loc: {
          start: {
            line: 56,
            column: 23
          },
          end: {
            line: 220,
            column: 1
          }
        },
        line: 56
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 59,
            column: 19
          },
          end: {
            line: 59,
            column: 20
          }
        },
        loc: {
          start: {
            line: 59,
            column: 30
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 59
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 60,
            column: 17
          }
        },
        loc: {
          start: {
            line: 60,
            column: 24
          },
          end: {
            line: 63,
            column: 13
          }
        },
        line: 60
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 65,
            column: 26
          },
          end: {
            line: 65,
            column: 27
          }
        },
        loc: {
          start: {
            line: 65,
            column: 30
          },
          end: {
            line: 95,
            column: 5
          }
        },
        line: 65
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 66,
            column: 28
          },
          end: {
            line: 66,
            column: 29
          }
        },
        loc: {
          start: {
            line: 66,
            column: 38
          },
          end: {
            line: 93,
            column: 9
          }
        },
        line: 66
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 146,
            column: 37
          },
          end: {
            line: 146,
            column: 38
          }
        },
        loc: {
          start: {
            line: 146,
            column: 41
          },
          end: {
            line: 152,
            column: 29
          }
        },
        line: 146
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 15
          },
          end: {
            line: 20,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 29
          },
          end: {
            line: 20,
            column: 45
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 65
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 20
          }
        }, {
          start: {
            line: 24,
            column: 24
          },
          end: {
            line: 24,
            column: 27
          }
        }, {
          start: {
            line: 24,
            column: 31
          },
          end: {
            line: 24,
            column: 45
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "5": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 20
          }
        }, {
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 27,
            column: 47
          }
        }, {
          start: {
            line: 27,
            column: 51
          },
          end: {
            line: 27,
            column: 76
          }
        }],
        line: 27
      },
      "6": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "7": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 13
          }
        }, {
          start: {
            line: 33,
            column: 17
          },
          end: {
            line: 33,
            column: 31
          }
        }],
        line: 33
      },
      "8": {
        loc: {
          start: {
            line: 39,
            column: 32
          },
          end: {
            line: 39,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 32
          },
          end: {
            line: 39,
            column: 53
          }
        }, {
          start: {
            line: 39,
            column: 57
          },
          end: {
            line: 39,
            column: 88
          }
        }],
        line: 39
      },
      "9": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "10": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 29
          }
        }, {
          start: {
            line: 41,
            column: 33
          },
          end: {
            line: 41,
            column: 79
          }
        }],
        line: 41
      },
      "11": {
        loc: {
          start: {
            line: 42,
            column: 23
          },
          end: {
            line: 42,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 42,
            column: 47
          },
          end: {
            line: 42,
            column: 88
          }
        }, {
          start: {
            line: 42,
            column: 91
          },
          end: {
            line: 42,
            column: 95
          }
        }],
        line: 42
      },
      "12": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 47,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 47,
            column: 13
          }
        }, {
          start: {
            line: 45,
            column: 19
          },
          end: {
            line: 47,
            column: 13
          }
        }],
        line: 43
      },
      "13": {
        loc: {
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 43,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 43,
            column: 20
          }
        }, {
          start: {
            line: 43,
            column: 25
          },
          end: {
            line: 43,
            column: 33
          }
        }, {
          start: {
            line: 43,
            column: 37
          },
          end: {
            line: 43,
            column: 45
          }
        }],
        line: 43
      },
      "14": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "15": {
        loc: {
          start: {
            line: 70,
            column: 39
          },
          end: {
            line: 70,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 70,
            column: 67
          },
          end: {
            line: 70,
            column: 76
          }
        }, {
          start: {
            line: 70,
            column: 79
          },
          end: {
            line: 70,
            column: 88
          }
        }],
        line: 70
      },
      "16": {
        loc: {
          start: {
            line: 71,
            column: 40
          },
          end: {
            line: 71,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 40
          },
          end: {
            line: 71,
            column: 66
          }
        }, {
          start: {
            line: 71,
            column: 70
          },
          end: {
            line: 71,
            column: 85
          }
        }],
        line: 71
      },
      "17": {
        loc: {
          start: {
            line: 90,
            column: 33
          },
          end: {
            line: 90,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 90,
            column: 58
          },
          end: {
            line: 90,
            column: 71
          }
        }, {
          start: {
            line: 90,
            column: 74
          },
          end: {
            line: 90,
            column: 89
          }
        }],
        line: 90
      },
      "18": {
        loc: {
          start: {
            line: 113,
            column: 110
          },
          end: {
            line: 113,
            column: 247
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 113,
            column: 133
          },
          end: {
            line: 113,
            column: 164
          }
        }, {
          start: {
            line: 113,
            column: 167
          },
          end: {
            line: 113,
            column: 247
          }
        }],
        line: 113
      },
      "19": {
        loc: {
          start: {
            line: 113,
            column: 167
          },
          end: {
            line: 113,
            column: 247
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 113,
            column: 190
          },
          end: {
            line: 113,
            column: 219
          }
        }, {
          start: {
            line: 113,
            column: 222
          },
          end: {
            line: 113,
            column: 247
          }
        }],
        line: 113
      },
      "20": {
        loc: {
          start: {
            line: 114,
            column: 38
          },
          end: {
            line: 114,
            column: 141
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 114,
            column: 61
          },
          end: {
            line: 114,
            column: 73
          }
        }, {
          start: {
            line: 114,
            column: 76
          },
          end: {
            line: 114,
            column: 141
          }
        }],
        line: 114
      },
      "21": {
        loc: {
          start: {
            line: 114,
            column: 76
          },
          end: {
            line: 114,
            column: 141
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 114,
            column: 99
          },
          end: {
            line: 114,
            column: 117
          }
        }, {
          start: {
            line: 114,
            column: 120
          },
          end: {
            line: 114,
            column: 141
          }
        }],
        line: 114
      },
      "22": {
        loc: {
          start: {
            line: 174,
            column: 40
          },
          end: {
            line: 174,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 174,
            column: 68
          },
          end: {
            line: 174,
            column: 75
          }
        }, {
          start: {
            line: 174,
            column: 78
          },
          end: {
            line: 174,
            column: 89
          }
        }],
        line: 174
      },
      "23": {
        loc: {
          start: {
            line: 183,
            column: 40
          },
          end: {
            line: 183,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 40
          },
          end: {
            line: 183,
            column: 66
          }
        }, {
          start: {
            line: 183,
            column: 70
          },
          end: {
            line: 183,
            column: 85
          }
        }],
        line: 183
      },
      "24": {
        loc: {
          start: {
            line: 201,
            column: 40
          },
          end: {
            line: 201,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 201,
            column: 71
          },
          end: {
            line: 201,
            column: 76
          }
        }, {
          start: {
            line: 201,
            column: 79
          },
          end: {
            line: 201,
            column: 83
          }
        }],
        line: 201
      },
      "25": {
        loc: {
          start: {
            line: 210,
            column: 40
          },
          end: {
            line: 210,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 210,
            column: 70
          },
          end: {
            line: 210,
            column: 75
          }
        }, {
          start: {
            line: 210,
            column: 78
          },
          end: {
            line: 210,
            column: 82
          }
        }],
        line: 210
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/jack/Documents/aclue-preprod/web/src/pages/posthog-test.tsx"],
      sourcesContent: ["import React, { useEffect, useState } from 'react';\nimport { analytics } from '@/lib/analytics';\nimport { config } from '@/config';\n\nexport default function PostHogTest() {\n  const [status, setStatus] = useState<'loading' | 'success' | 'error'>('loading');\n  const [logs, setLogs] = useState<string[]>([]);\n\n  const addLog = (message: string) => {\n    setLogs(prev => [...prev, `${new Date().toISOString()}: ${message}`]);\n  };\n\n  useEffect(() => {\n    const testPostHog = async () => {\n      try {\n        addLog('Starting PostHog test...');\n        \n        // Check environment variables\n        addLog(`PostHog Key: ${config.posthogKey ? 'Present' : 'Missing'}`);\n        addLog(`PostHog Host: ${config.posthogHost || 'Using default'}`);\n        \n        // Initialize analytics\n        analytics.init();\n        addLog('Analytics initialized');\n        \n        // Test tracking\n        analytics.track('test_event', {\n          test_property: 'test_value',\n          timestamp: new Date().toISOString(),\n        });\n        addLog('Test event tracked');\n        \n        // Test identification\n        analytics.identify('test_user_123', {\n          email: 'test@example.com',\n          name: 'Test User',\n        });\n        addLog('User identified');\n        \n        setStatus('success');\n        addLog('PostHog test completed successfully!');\n      } catch (error) {\n        addLog(`Error: ${error instanceof Error ? error.message : 'Unknown error'}`);\n        setStatus('error');\n      }\n    };\n\n    testPostHog();\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-8\">\n      <div className=\"max-w-4xl mx-auto\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-8\">PostHog Configuration Test</h1>\n        \n        <div className=\"bg-white rounded-lg shadow p-6 mb-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">Configuration Status</h2>\n          <div className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${\n            status === 'loading' ? 'bg-yellow-100 text-yellow-800' :\n            status === 'success' ? 'bg-green-100 text-green-800' :\n            'bg-red-100 text-red-800'\n          }`}>\n            {status === 'loading' ? 'Testing...' :\n             status === 'success' ? 'Configuration OK' :\n             'Configuration Error'}\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">Test Logs</h2>\n          <div className=\"bg-gray-50 rounded p-4 max-h-96 overflow-y-auto\">\n            <pre className=\"text-sm text-gray-700 whitespace-pre-wrap\">\n              {logs.join('\\n')}\n            </pre>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow p-6 mt-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">Manual Test</h2>\n          <p className=\"text-gray-600 mb-4\">\n            Click the button below to manually test PostHog tracking:\n          </p>\n          <button\n            onClick={() => {\n              analytics.track('manual_test_click', {\n                button: 'Manual Test Button',\n                timestamp: new Date().toISOString(),\n              });\n              addLog('Manual test event tracked');\n            }}\n            className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n          >\n            Send Test Event\n          </button>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow p-6 mt-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">Environment Variables</h2>\n          <div className=\"space-y-2 text-sm\">\n            <div><strong>NEXT_PUBLIC_POSTHOG_KEY:</strong> {config.posthogKey ? '\u2713 Set' : '\u2717 Missing'}</div>\n            <div><strong>NEXT_PUBLIC_POSTHOG_HOST:</strong> {config.posthogHost || 'Using default'}</div>\n            <div><strong>NODE_ENV:</strong> {process.env.NODE_ENV}</div>\n            <div><strong>Development Mode:</strong> {config.isDevelopment ? 'Yes' : 'No'}</div>\n            <div><strong>Production Mode:</strong> {config.isProduction ? 'Yes' : 'No'}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],
      names: ["PostHogTest", "status", "setStatus", "useState", "logs", "setLogs", "addLog", "message", "prev", "Date", "toISOString", "useEffect", "testPostHog", "config", "posthogKey", "posthogHost", "analytics", "init", "track", "test_property", "timestamp", "identify", "email", "name", "error", "Error", "div", "className", "h1", "h2", "pre", "join", "p", "button", "onClick", "strong", "process", "env", "NODE_ENV", "isDevelopment", "isProduction"],
      mappings: ";;;;+BAIA;;;eAAwBA;;;;+DAJmB;2BACjB;wBACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAER,SAASA;IACtB,MAAM,CAACC,QAAQC,UAAU,GAAGC,IAAAA,eAAQ,EAAkC;IACtE,MAAM,CAACC,MAAMC,QAAQ,GAAGF,IAAAA,eAAQ,EAAW,EAAE;IAE7C,MAAMG,SAAS,CAACC;QACdF,QAAQG,CAAAA,OAAQ;mBAAIA;gBAAM,CAAC,EAAE,IAAIC,OAAOC,WAAW,GAAG,EAAE,EAAEH,QAAQ,CAAC;aAAC;IACtE;IAEAI,IAAAA,gBAAS,EAAC;QACR,MAAMC,cAAc;YAClB,IAAI;gBACFN,OAAO;gBAEP,8BAA8B;gBAC9BA,OAAO,CAAC,aAAa,EAAEO,cAAM,CAACC,UAAU,GAAG,YAAY,UAAU,CAAC;gBAClER,OAAO,CAAC,cAAc,EAAEO,cAAM,CAACE,WAAW,IAAI,gBAAgB,CAAC;gBAE/D,uBAAuB;gBACvBC,oBAAS,CAACC,IAAI;gBACdX,OAAO;gBAEP,gBAAgB;gBAChBU,oBAAS,CAACE,KAAK,CAAC,cAAc;oBAC5BC,eAAe;oBACfC,WAAW,IAAIX,OAAOC,WAAW;gBACnC;gBACAJ,OAAO;gBAEP,sBAAsB;gBACtBU,oBAAS,CAACK,QAAQ,CAAC,iBAAiB;oBAClCC,OAAO;oBACPC,MAAM;gBACR;gBACAjB,OAAO;gBAEPJ,UAAU;gBACVI,OAAO;YACT,EAAE,OAAOkB,OAAO;gBACdlB,OAAO,CAAC,OAAO,EAAEkB,iBAAiBC,QAAQD,MAAMjB,OAAO,GAAG,gBAAgB,CAAC;gBAC3EL,UAAU;YACZ;QACF;QAEAU;IACF,GAAG,EAAE;IAEL,qBACE,qBAACc;QAAIC,WAAU;kBACb,cAAA,sBAACD;YAAIC,WAAU;;8BACb,qBAACC;oBAAGD,WAAU;8BAAwC;;8BAEtD,sBAACD;oBAAIC,WAAU;;sCACb,qBAACE;4BAAGF,WAAU;sCAA6B;;sCAC3C,qBAACD;4BAAIC,WAAW,CAAC,oEAAoE,EACnF1B,WAAW,YAAY,kCACvBA,WAAW,YAAY,gCACvB,0BACD,CAAC;sCACCA,WAAW,YAAY,eACvBA,WAAW,YAAY,qBACvB;;;;8BAIL,sBAACyB;oBAAIC,WAAU;;sCACb,qBAACE;4BAAGF,WAAU;sCAA6B;;sCAC3C,qBAACD;4BAAIC,WAAU;sCACb,cAAA,qBAACG;gCAAIH,WAAU;0CACZvB,KAAK2B,IAAI,CAAC;;;;;8BAKjB,sBAACL;oBAAIC,WAAU;;sCACb,qBAACE;4BAAGF,WAAU;sCAA6B;;sCAC3C,qBAACK;4BAAEL,WAAU;sCAAqB;;sCAGlC,qBAACM;4BACCC,SAAS;gCACPlB,oBAAS,CAACE,KAAK,CAAC,qBAAqB;oCACnCe,QAAQ;oCACRb,WAAW,IAAIX,OAAOC,WAAW;gCACnC;gCACAJ,OAAO;4BACT;4BACAqB,WAAU;sCACX;;;;8BAKH,sBAACD;oBAAIC,WAAU;;sCACb,qBAACE;4BAAGF,WAAU;sCAA6B;;sCAC3C,sBAACD;4BAAIC,WAAU;;8CACb,sBAACD;;sDAAI,qBAACS;sDAAO;;wCAAiC;wCAAEtB,cAAM,CAACC,UAAU,GAAG,UAAU;;;8CAC9E,sBAACY;;sDAAI,qBAACS;sDAAO;;wCAAkC;wCAAEtB,cAAM,CAACE,WAAW,IAAI;;;8CACvE,sBAACW;;sDAAI,qBAACS;sDAAO;;wCAAkB;wCAAEC,QAAQC,GAAG,CAACC,QAAQ;;;8CACrD,sBAACZ;;sDAAI,qBAACS;sDAAO;;wCAA0B;wCAAEtB,cAAM,CAAC0B,aAAa,GAAG,QAAQ;;;8CACxE,sBAACb;;sDAAI,qBAACS;sDAAO;;wCAAyB;wCAAEtB,cAAM,CAAC2B,YAAY,GAAG,QAAQ;;;;;;;;;;AAMlF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "491a200585ce4bad32067b3fdc70d6487092ee0b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2nj2rbch87 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2nj2rbch87();
cov_2nj2rbch87().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2nj2rbch87().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2nj2rbch87().f[0]++;
    cov_2nj2rbch87().s[2]++;
    return PostHogTest;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2nj2rbch87().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_2nj2rbch87().s[4]++, _interop_require_wildcard(require("react")));
const _analytics =
/* istanbul ignore next */
(cov_2nj2rbch87().s[5]++, require("../lib/analytics"));
const _config =
/* istanbul ignore next */
(cov_2nj2rbch87().s[6]++, require("../config"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_2nj2rbch87().f[1]++;
  cov_2nj2rbch87().s[7]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_2nj2rbch87().b[0][0]++;
    cov_2nj2rbch87().s[8]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2nj2rbch87().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_2nj2rbch87().s[9]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_2nj2rbch87().s[10]++, new WeakMap());
  /* istanbul ignore next */
  cov_2nj2rbch87().s[11]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_2nj2rbch87().f[2]++;
    cov_2nj2rbch87().s[12]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_2nj2rbch87().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_2nj2rbch87().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_2nj2rbch87().f[3]++;
  cov_2nj2rbch87().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_2nj2rbch87().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_2nj2rbch87().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_2nj2rbch87().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_2nj2rbch87().b[2][0]++;
    cov_2nj2rbch87().s[14]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_2nj2rbch87().b[2][1]++;
  }
  cov_2nj2rbch87().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_2nj2rbch87().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_2nj2rbch87().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_2nj2rbch87().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_2nj2rbch87().b[4][0]++;
    cov_2nj2rbch87().s[16]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_2nj2rbch87().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_2nj2rbch87().s[17]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_2nj2rbch87().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_2nj2rbch87().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_2nj2rbch87().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_2nj2rbch87().b[6][0]++;
    cov_2nj2rbch87().s[19]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_2nj2rbch87().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_2nj2rbch87().s[20]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_2nj2rbch87().s[21]++,
  /* istanbul ignore next */
  (cov_2nj2rbch87().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_2nj2rbch87().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_2nj2rbch87().s[22]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_2nj2rbch87().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_2nj2rbch87().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_2nj2rbch87().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_2nj2rbch87().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_2nj2rbch87().s[24]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_2nj2rbch87().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_2nj2rbch87().b[11][1]++, null));
      /* istanbul ignore next */
      cov_2nj2rbch87().s[25]++;
      if (
      /* istanbul ignore next */
      (cov_2nj2rbch87().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_2nj2rbch87().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_2nj2rbch87().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_2nj2rbch87().b[12][0]++;
        cov_2nj2rbch87().s[26]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_2nj2rbch87().b[12][1]++;
        cov_2nj2rbch87().s[27]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_2nj2rbch87().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2nj2rbch87().s[28]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_2nj2rbch87().s[29]++;
  if (cache) {
    /* istanbul ignore next */
    cov_2nj2rbch87().b[14][0]++;
    cov_2nj2rbch87().s[30]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_2nj2rbch87().b[14][1]++;
  }
  cov_2nj2rbch87().s[31]++;
  return newObj;
}
function PostHogTest() {
  /* istanbul ignore next */
  cov_2nj2rbch87().f[4]++;
  const [status, setStatus] =
  /* istanbul ignore next */
  (cov_2nj2rbch87().s[32]++, (0, _react.useState)("loading"));
  const [logs, setLogs] =
  /* istanbul ignore next */
  (cov_2nj2rbch87().s[33]++, (0, _react.useState)([]));
  /* istanbul ignore next */
  cov_2nj2rbch87().s[34]++;
  const addLog = message => {
    /* istanbul ignore next */
    cov_2nj2rbch87().f[5]++;
    cov_2nj2rbch87().s[35]++;
    setLogs(prev => {
      /* istanbul ignore next */
      cov_2nj2rbch87().f[6]++;
      cov_2nj2rbch87().s[36]++;
      return [...prev, `${new Date().toISOString()}: ${message}`];
    });
  };
  /* istanbul ignore next */
  cov_2nj2rbch87().s[37]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2nj2rbch87().f[7]++;
    cov_2nj2rbch87().s[38]++;
    const testPostHog = async () => {
      /* istanbul ignore next */
      cov_2nj2rbch87().f[8]++;
      cov_2nj2rbch87().s[39]++;
      try {
        /* istanbul ignore next */
        cov_2nj2rbch87().s[40]++;
        addLog("Starting PostHog test...");
        // Check environment variables
        /* istanbul ignore next */
        cov_2nj2rbch87().s[41]++;
        addLog(`PostHog Key: ${_config.config.posthogKey ?
        /* istanbul ignore next */
        (cov_2nj2rbch87().b[15][0]++, "Present") :
        /* istanbul ignore next */
        (cov_2nj2rbch87().b[15][1]++, "Missing")}`);
        /* istanbul ignore next */
        cov_2nj2rbch87().s[42]++;
        addLog(`PostHog Host: ${
        /* istanbul ignore next */
        (cov_2nj2rbch87().b[16][0]++, _config.config.posthogHost) ||
        /* istanbul ignore next */
        (cov_2nj2rbch87().b[16][1]++, "Using default")}`);
        // Initialize analytics
        /* istanbul ignore next */
        cov_2nj2rbch87().s[43]++;
        _analytics.analytics.init();
        /* istanbul ignore next */
        cov_2nj2rbch87().s[44]++;
        addLog("Analytics initialized");
        // Test tracking
        /* istanbul ignore next */
        cov_2nj2rbch87().s[45]++;
        _analytics.analytics.track("test_event", {
          test_property: "test_value",
          timestamp: new Date().toISOString()
        });
        /* istanbul ignore next */
        cov_2nj2rbch87().s[46]++;
        addLog("Test event tracked");
        // Test identification
        /* istanbul ignore next */
        cov_2nj2rbch87().s[47]++;
        _analytics.analytics.identify("test_user_123", {
          email: "test@example.com",
          name: "Test User"
        });
        /* istanbul ignore next */
        cov_2nj2rbch87().s[48]++;
        addLog("User identified");
        /* istanbul ignore next */
        cov_2nj2rbch87().s[49]++;
        setStatus("success");
        /* istanbul ignore next */
        cov_2nj2rbch87().s[50]++;
        addLog("PostHog test completed successfully!");
      } catch (error) {
        /* istanbul ignore next */
        cov_2nj2rbch87().s[51]++;
        addLog(`Error: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_2nj2rbch87().b[17][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2nj2rbch87().b[17][1]++, "Unknown error")}`);
        /* istanbul ignore next */
        cov_2nj2rbch87().s[52]++;
        setStatus("error");
      }
    };
    /* istanbul ignore next */
    cov_2nj2rbch87().s[53]++;
    testPostHog();
  }, []);
  /* istanbul ignore next */
  cov_2nj2rbch87().s[54]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: "min-h-screen bg-gray-50 p-8",
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "max-w-4xl mx-auto",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
        className: "text-3xl font-bold text-gray-900 mb-8",
        children: "PostHog Configuration Test"
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-white rounded-lg shadow p-6 mb-6",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-xl font-semibold mb-4",
          children: "Configuration Status"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: `inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${status === "loading" ?
          /* istanbul ignore next */
          (cov_2nj2rbch87().b[18][0]++, "bg-yellow-100 text-yellow-800") :
          /* istanbul ignore next */
          (cov_2nj2rbch87().b[18][1]++, status === "success" ?
          /* istanbul ignore next */
          (cov_2nj2rbch87().b[19][0]++, "bg-green-100 text-green-800") :
          /* istanbul ignore next */
          (cov_2nj2rbch87().b[19][1]++, "bg-red-100 text-red-800"))}`,
          children: status === "loading" ?
          /* istanbul ignore next */
          (cov_2nj2rbch87().b[20][0]++, "Testing...") :
          /* istanbul ignore next */
          (cov_2nj2rbch87().b[20][1]++, status === "success" ?
          /* istanbul ignore next */
          (cov_2nj2rbch87().b[21][0]++, "Configuration OK") :
          /* istanbul ignore next */
          (cov_2nj2rbch87().b[21][1]++, "Configuration Error"))
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-white rounded-lg shadow p-6",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-xl font-semibold mb-4",
          children: "Test Logs"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "bg-gray-50 rounded p-4 max-h-96 overflow-y-auto",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("pre", {
            className: "text-sm text-gray-700 whitespace-pre-wrap",
            children: logs.join("\n")
          })
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-white rounded-lg shadow p-6 mt-6",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-xl font-semibold mb-4",
          children: "Manual Test"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-gray-600 mb-4",
          children: "Click the button below to manually test PostHog tracking:"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          onClick: () => {
            /* istanbul ignore next */
            cov_2nj2rbch87().f[9]++;
            cov_2nj2rbch87().s[55]++;
            _analytics.analytics.track("manual_test_click", {
              button: "Manual Test Button",
              timestamp: new Date().toISOString()
            });
            /* istanbul ignore next */
            cov_2nj2rbch87().s[56]++;
            addLog("Manual test event tracked");
          },
          className: "bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700",
          children: "Send Test Event"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-white rounded-lg shadow p-6 mt-6",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-xl font-semibold mb-4",
          children: "Environment Variables"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-2 text-sm",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
              children: "NEXT_PUBLIC_POSTHOG_KEY:"
            }), " ", _config.config.posthogKey ?
            /* istanbul ignore next */
            (cov_2nj2rbch87().b[22][0]++, "✓ Set") :
            /* istanbul ignore next */
            (cov_2nj2rbch87().b[22][1]++, "✗ Missing")]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
              children: "NEXT_PUBLIC_POSTHOG_HOST:"
            }), " ",
            /* istanbul ignore next */
            (cov_2nj2rbch87().b[23][0]++, _config.config.posthogHost) ||
            /* istanbul ignore next */
            (cov_2nj2rbch87().b[23][1]++, "Using default")]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
              children: "NODE_ENV:"
            }), " ", process.env.NODE_ENV]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
              children: "Development Mode:"
            }), " ", _config.config.isDevelopment ?
            /* istanbul ignore next */
            (cov_2nj2rbch87().b[24][0]++, "Yes") :
            /* istanbul ignore next */
            (cov_2nj2rbch87().b[24][1]++, "No")]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
              children: "Production Mode:"
            }), " ", _config.config.isProduction ?
            /* istanbul ignore next */
            (cov_2nj2rbch87().b[25][0]++, "Yes") :
            /* istanbul ignore next */
            (cov_2nj2rbch87().b[25][1]++, "No")]
          })]
        })]
      })]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,