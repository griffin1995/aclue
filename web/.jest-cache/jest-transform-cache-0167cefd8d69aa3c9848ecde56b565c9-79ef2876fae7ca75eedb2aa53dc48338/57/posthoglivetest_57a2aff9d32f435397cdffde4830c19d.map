{"version":3,"names":["PostHogLiveTest","cov_18n85mw78d","f","events","setEvents","s","_react","useState","isInitialized","setIsInitialized","useEffect","_analytics","analytics","init","addEvent","eventName","displayName","eventId","Math","random","toString","substr","track","test_session","timestamp","Date","toISOString","event_id","page","user_agent","navigator","userAgent","prev","id","name","toLocaleTimeString","status","error","testEvents","display","description","identifyTestUser","userId","now","identify","email","created_at","subscription_tier","clearEvents","_jsxruntime","jsx","className","jsxs","_config","config","posthogKey","b","posthogHost","isDevelopment","href","target","rel","onClick","map","event","index","batchId","i","setTimeout","length","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d"],"sources":["/home/jack/Documents/aclue-preprod/web/src/pages/posthog-live-test.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { analytics } from '@/lib/analytics';\nimport { config } from '@/config';\n\nexport default function PostHogLiveTest() {\n  const [events, setEvents] = useState<Array<{id: string, name: string, timestamp: string, status: 'sent' | 'error'}>>([]);\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  useEffect(() => {\n    // Initialize PostHog\n    analytics.init();\n    setIsInitialized(true);\n    \n    // Send an automatic page view event\n    addEvent('page_view_test', 'Page Load Event');\n  }, []);\n\n  const addEvent = (eventName: string, displayName: string) => {\n    const eventId = Math.random().toString(36).substr(2, 9);\n    \n    try {\n      analytics.track(eventName, {\n        test_session: 'posthog_live_test',\n        timestamp: new Date().toISOString(),\n        event_id: eventId,\n        page: 'PostHog Live Test',\n        user_agent: navigator.userAgent,\n      });\n      \n      setEvents(prev => [...prev, {\n        id: eventId,\n        name: displayName,\n        timestamp: new Date().toLocaleTimeString(),\n        status: 'sent'\n      }]);\n    } catch (error) {\n      setEvents(prev => [...prev, {\n        id: eventId,\n        name: displayName,\n        timestamp: new Date().toLocaleTimeString(),\n        status: 'error'\n      }]);\n    }\n  };\n\n  const testEvents = [\n    {\n      name: 'button_click_test',\n      display: 'Button Click Test',\n      description: 'Tests basic button click tracking'\n    },\n    {\n      name: 'form_submit_test',\n      display: 'Form Submit Test',\n      description: 'Tests form submission tracking'\n    },\n    {\n      name: 'user_action_test',\n      display: 'User Action Test',\n      description: 'Tests custom user action tracking'\n    },\n    {\n      name: 'feature_usage_test',\n      display: 'Feature Usage Test',\n      description: 'Tests feature usage tracking'\n    },\n    {\n      name: 'error_simulation_test',\n      display: 'Error Simulation Test',\n      description: 'Tests error event tracking'\n    }\n  ];\n\n  const identifyTestUser = () => {\n    const userId = `test_user_${Date.now()}`;\n    analytics.identify(userId, {\n      email: 'test@aclue.app',\n      name: 'PostHog Test User',\n      test_session: true,\n      created_at: new Date().toISOString(),\n      subscription_tier: 'free'\n    });\n    \n    addEvent('user_identify_test', 'User Identification Test');\n  };\n\n  const clearEvents = () => {\n    setEvents([]);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-8\">\n      <div className=\"max-w-4xl mx-auto\">\n        <div className=\"bg-white rounded-lg shadow-lg p-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-6\">PostHog Live Test Dashboard</h1>\n          \n          {/* Status */}\n          <div className=\"mb-8 p-4 rounded-lg bg-blue-50 border border-blue-200\">\n            <h2 className=\"text-lg font-semibold text-blue-900 mb-2\">Configuration Status</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n              <div>\n                <span className=\"font-medium\">PostHog Key:</span> \n                <span className={config.posthogKey ? 'text-green-600 ml-2' : 'text-red-600 ml-2'}>\n                  {config.posthogKey ? '‚úì Configured' : '‚úó Missing'}\n                </span>\n              </div>\n              <div>\n                <span className=\"font-medium\">PostHog Host:</span> \n                <span className=\"text-gray-600 ml-2\">{config.posthogHost}</span>\n              </div>\n              <div>\n                <span className=\"font-medium\">Environment:</span> \n                <span className=\"text-gray-600 ml-2\">{config.isDevelopment ? 'Development' : 'Production'}</span>\n              </div>\n              <div>\n                <span className=\"font-medium\">Analytics Initialized:</span> \n                <span className={isInitialized ? 'text-green-600 ml-2' : 'text-yellow-600 ml-2'}>\n                  {isInitialized ? '‚úì Ready' : '‚è≥ Initializing...'}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          {/* Instructions */}\n          <div className=\"mb-8 p-4 rounded-lg bg-yellow-50 border border-yellow-200\">\n            <h2 className=\"text-lg font-semibold text-yellow-900 mb-2\">üìù Instructions</h2>\n            <p className=\"text-yellow-800 mb-2\">\n              1. Click the buttons below to send test events to PostHog\n            </p>\n            <p className=\"text-yellow-800 mb-2\">\n              2. Go to your PostHog dashboard: <a href=\"https://eu.i.posthog.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"underline\">https://eu.i.posthog.com</a>\n            </p>\n            <p className=\"text-yellow-800 mb-2\">\n              3. Navigate to \"Live events\" or \"Activity\" tab to see events in real-time\n            </p>\n            <p className=\"text-yellow-800\">\n              4. Look for events starting with \"test_\" to identify your test events\n            </p>\n          </div>\n\n          {/* User Identification */}\n          <div className=\"mb-8\">\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">User Identification</h2>\n            <p className=\"text-gray-600 mb-4\">Identify yourself to PostHog for better event tracking:</p>\n            <button\n              onClick={identifyTestUser}\n              className=\"bg-purple-600 text-white px-6 py-3 rounded-lg hover:bg-purple-700 transition-colors font-medium\"\n            >\n              üîç Identify Test User\n            </button>\n          </div>\n\n          {/* Test Events */}\n          <div className=\"mb-8\">\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Send Test Events</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {testEvents.map((event, index) => (\n                <div key={event.name} className=\"p-4 border border-gray-200 rounded-lg\">\n                  <h3 className=\"font-medium text-gray-900 mb-1\">{event.display}</h3>\n                  <p className=\"text-sm text-gray-600 mb-3\">{event.description}</p>\n                  <button\n                    onClick={() => addEvent(event.name, event.display)}\n                    className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition-colors text-sm font-medium\"\n                  >\n                    Send Event #{index + 1}\n                  </button>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Special Test: Batch Events */}\n          <div className=\"mb-8\">\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Batch Test</h2>\n            <button\n              onClick={() => {\n                // Send multiple events in succession\n                const batchId = Date.now();\n                for (let i = 1; i <= 5; i++) {\n                  setTimeout(() => {\n                    addEvent(`batch_event_${i}`, `Batch Event ${i}/5`);\n                  }, i * 200);\n                }\n              }}\n              className=\"bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition-colors font-medium\"\n            >\n              üöÄ Send Batch of 5 Events\n            </button>\n          </div>\n\n          {/* Event Log */}\n          <div className=\"mb-6\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h2 className=\"text-xl font-semibold text-gray-900\">Event Log</h2>\n              <button\n                onClick={clearEvents}\n                className=\"bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600 transition-colors text-sm\"\n              >\n                Clear Log\n              </button>\n            </div>\n            \n            {events.length === 0 ? (\n              <div className=\"p-4 text-center text-gray-500 bg-gray-50 rounded-lg\">\n                No events sent yet. Click a button above to send test events.\n              </div>\n            ) : (\n              <div className=\"bg-gray-50 rounded-lg p-4 max-h-96 overflow-y-auto\">\n                <div className=\"space-y-2\">\n                  {events.map((event) => (\n                    <div key={event.id} className=\"flex items-center justify-between p-2 bg-white rounded border\">\n                      <div>\n                        <span className=\"font-medium text-gray-900\">{event.name}</span>\n                        <span className=\"text-sm text-gray-500 ml-2\">({event.timestamp})</span>\n                      </div>\n                      <span className={`px-2 py-1 rounded text-xs font-medium ${\n                        event.status === 'sent' \n                          ? 'bg-green-100 text-green-800' \n                          : 'bg-red-100 text-red-800'\n                      }`}>\n                        {event.status === 'sent' ? '‚úì Sent' : '‚úó Error'}\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Dashboard Link */}\n          <div className=\"p-4 rounded-lg bg-green-50 border border-green-200\">\n            <h2 className=\"text-lg font-semibold text-green-900 mb-2\">üéØ Check Your PostHog Dashboard</h2>\n            <p className=\"text-green-800 mb-3\">\n              After sending events above, check your PostHog dashboard to see them appear in real-time:\n            </p>\n            <a\n              href=\"https://eu.i.posthog.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"inline-flex items-center bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors font-medium\"\n            >\n              üîó Open PostHog Dashboard\n              <svg className=\"w-4 h-4 ml-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" />\n              </svg>\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"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","ignoreList":[]}