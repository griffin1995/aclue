{"version":3,"sources":["/home/jack/Documents/aclue-preprod/web/src/utils/__tests__/formatting.test.ts"],"sourcesContent":["import { formatPrice, formatCurrency, formatRelativeTime, formatNumber } from '../formatting';\n\ndescribe('Formatting Utilities', () => {\n  describe('formatPrice', () => {\n    it('formats USD prices correctly', () => {\n      expect(formatPrice(29.99, 'USD')).toBe('$29.99');\n      expect(formatPrice(100, 'USD')).toBe('$100.00');\n      expect(formatPrice(0, 'USD')).toBe('$0.00');\n    });\n\n    it('formats EUR prices correctly', () => {\n      expect(formatPrice(29.99, 'EUR')).toBe('€29.99');\n      expect(formatPrice(100, 'EUR')).toBe('€100.00');\n    });\n\n    it('formats GBP prices correctly', () => {\n      expect(formatPrice(29.99, 'GBP')).toBe('£29.99');\n      expect(formatPrice(100, 'GBP')).toBe('£100.00');\n    });\n\n    it('handles large numbers correctly', () => {\n      expect(formatPrice(1234.56, 'USD')).toBe('$1,234.56');\n      expect(formatPrice(1000000, 'USD')).toBe('$1,000,000.00');\n    });\n\n    it('handles negative prices', () => {\n      expect(formatPrice(-29.99, 'USD')).toBe('-$29.99');\n    });\n\n    it('rounds to 2 decimal places', () => {\n      expect(formatPrice(29.999, 'USD')).toBe('$30.00');\n      expect(formatPrice(29.991, 'USD')).toBe('$29.99');\n    });\n  });\n\n  describe('formatCurrency', () => {\n    it('returns correct currency symbol for known currencies', () => {\n      expect(formatCurrency('USD')).toBe('$');\n      expect(formatCurrency('EUR')).toBe('€');\n      expect(formatCurrency('GBP')).toBe('£');\n      expect(formatCurrency('JPY')).toBe('¥');\n      expect(formatCurrency('CAD')).toBe('C$');\n      expect(formatCurrency('AUD')).toBe('A$');\n    });\n\n    it('returns currency code for unknown currencies', () => {\n      expect(formatCurrency('XYZ')).toBe('XYZ');\n      expect(formatCurrency('UNKNOWN')).toBe('UNKNOWN');\n    });\n\n    it('handles lowercase currency codes', () => {\n      expect(formatCurrency('usd')).toBe('$');\n      expect(formatCurrency('eur')).toBe('€');\n    });\n  });\n\n  describe('formatRelativeTime', () => {\n    const now = new Date('2024-01-01T12:00:00Z');\n\n    beforeEach(() => {\n      jest.useFakeTimers();\n      jest.setSystemTime(now);\n    });\n\n    afterEach(() => {\n      jest.useRealTimers();\n    });\n\n    it('formats times from the past correctly', () => {\n      expect(formatRelativeTime(new Date('2024-01-01T11:59:30Z'))).toBe('30 seconds ago');\n      expect(formatRelativeTime(new Date('2024-01-01T11:55:00Z'))).toBe('5 minutes ago');\n      expect(formatRelativeTime(new Date('2024-01-01T10:00:00Z'))).toBe('2 hours ago');\n      expect(formatRelativeTime(new Date('2023-12-31T12:00:00Z'))).toBe('1 day ago');\n      expect(formatRelativeTime(new Date('2023-12-25T12:00:00Z'))).toBe('1 week ago');\n      expect(formatRelativeTime(new Date('2023-11-01T12:00:00Z'))).toBe('2 months ago');\n      expect(formatRelativeTime(new Date('2023-01-01T12:00:00Z'))).toBe('1 year ago');\n    });\n\n    it('formats times in the future correctly', () => {\n      expect(formatRelativeTime(new Date('2024-01-01T12:00:30Z'))).toBe('in 30 seconds');\n      expect(formatRelativeTime(new Date('2024-01-01T12:05:00Z'))).toBe('in 5 minutes');\n      expect(formatRelativeTime(new Date('2024-01-01T14:00:00Z'))).toBe('in 2 hours');\n      expect(formatRelativeTime(new Date('2024-01-02T12:00:00Z'))).toBe('in 1 day');\n    });\n\n    it('handles string dates', () => {\n      expect(formatRelativeTime('2024-01-01T11:55:00Z')).toBe('5 minutes ago');\n    });\n\n    it('handles \"just now\" for very recent times', () => {\n      expect(formatRelativeTime(new Date('2024-01-01T11:59:59Z'))).toBe('1 second ago');\n      expect(formatRelativeTime(new Date('2024-01-01T12:00:01Z'))).toBe('in 1 second');\n    });\n  });\n\n  describe('formatNumber', () => {\n    it('formats numbers with default options', () => {\n      expect(formatNumber(1234)).toBe('1,234');\n      expect(formatNumber(1234567)).toBe('1,234,567');\n      expect(formatNumber(0)).toBe('0');\n    });\n\n    it('formats numbers with decimal places', () => {\n      expect(formatNumber(1234.56, { minimumFractionDigits: 2 })).toBe('1,234.56');\n      expect(formatNumber(1234, { minimumFractionDigits: 2 })).toBe('1,234.00');\n    });\n\n    it('formats percentages', () => {\n      expect(formatNumber(0.1234, { style: 'percent' })).toBe('12%');\n      expect(formatNumber(0.1234, { style: 'percent', minimumFractionDigits: 1 })).toBe('12.3%');\n    });\n\n    it('formats with custom notation', () => {\n      expect(formatNumber(1234567, { notation: 'compact' })).toBe('1.2M');\n      expect(formatNumber(1234, { notation: 'compact' })).toBe('1.2K');\n    });\n\n    it('handles negative numbers', () => {\n      expect(formatNumber(-1234)).toBe('-1,234');\n      expect(formatNumber(-0.1234, { style: 'percent' })).toBe('-12%');\n    });\n\n    it('formats very large numbers', () => {\n      expect(formatNumber(1000000000)).toBe('1,000,000,000');\n      expect(formatNumber(1000000000, { notation: 'compact' })).toBe('1B');\n    });\n\n    it('formats very small numbers', () => {\n      expect(formatNumber(0.001, { minimumFractionDigits: 3 })).toBe('0.001');\n      expect(formatNumber(0.0001, { minimumFractionDigits: 4 })).toBe('0.0001');\n    });\n  });\n});"],"names":["describe","it","expect","formatPrice","toBe","formatCurrency","now","Date","beforeEach","jest","useFakeTimers","setSystemTime","afterEach","useRealTimers","formatRelativeTime","formatNumber","minimumFractionDigits","style","notation"],"mappings":"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"}