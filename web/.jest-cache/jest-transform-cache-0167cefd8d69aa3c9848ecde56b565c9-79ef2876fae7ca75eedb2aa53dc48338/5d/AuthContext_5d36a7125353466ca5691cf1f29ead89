070b14c28ee9391982a855a14a47d43f
/**
 * aclue Authentication Context
 * 
 * Centralised authentication state management for the entire application.
 * Provides secure user session handling, JWT token management, and
 * authentication flows for login, registration, and logout.
 * 
 * Key Features:
 *   - Automatic token refresh and session persistence
 *   - Protected route authentication guards
 *   - Real-time user state synchronisation
 *   - PostHog analytics integration for user events
 *   - Comprehensive error handling and user feedback
 * 
 * State Management:
 *   - Uses useReducer for predictable state updates
 *   - Persists user data to localStorage for session continuity
 *   - Handles loading states during authentication operations
 * 
 * Usage:
 *   // In _app.tsx
 *   <AuthProvider>
 *     <Component {...pageProps} />
 *   </AuthProvider>
 * 
 *   // In components
 *   const { user, login, logout, isAuthenticated } = useAuth();
 */"use strict";

/* istanbul ignore next */
function cov_cg4vn9uzo() {
  var path = "/home/jack/Documents/aclue-preprod/web/src/context/AuthContext.tsx";
  var hash = "232f36e7f9b29c8d98decc54217d2117beb5cc38";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/jack/Documents/aclue-preprod/web/src/context/AuthContext.tsx",
    statementMap: {
      "0": {
        start: {
          line: 29,
          column: 0
        },
        end: {
          line: 31,
          column: 3
        }
      },
      "1": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 36,
          column: 7
        }
      },
      "2": {
        start: {
          line: 33,
          column: 24
        },
        end: {
          line: 36,
          column: 7
        }
      },
      "3": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 51,
          column: 3
        }
      },
      "4": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 28
        }
      },
      "5": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 24
        }
      },
      "6": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 23
        }
      },
      "7": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 30
        }
      },
      "8": {
        start: {
          line: 52,
          column: 20
        },
        end: {
          line: 52,
          column: 48
        }
      },
      "9": {
        start: {
          line: 53,
          column: 29
        },
        end: {
          line: 53,
          column: 72
        }
      },
      "10": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 38
        }
      },
      "11": {
        start: {
          line: 55,
          column: 13
        },
        end: {
          line: 55,
          column: 34
        }
      },
      "12": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 36
        }
      },
      "13": {
        start: {
          line: 57,
          column: 37
        },
        end: {
          line: 57,
          column: 89
        }
      },
      "14": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 61,
          column: 6
        }
      },
      "15": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 51
        }
      },
      "16": {
        start: {
          line: 64,
          column: 39
        },
        end: {
          line: 64,
          column: 51
        }
      },
      "17": {
        start: {
          line: 65,
          column: 28
        },
        end: {
          line: 65,
          column: 41
        }
      },
      "18": {
        start: {
          line: 66,
          column: 27
        },
        end: {
          line: 66,
          column: 40
        }
      },
      "19": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 69,
          column: 20
        }
      },
      "20": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 66
        }
      },
      "21": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "22": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 19
        }
      },
      "23": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "24": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 78,
          column: 10
        }
      },
      "25": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 53
        }
      },
      "26": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 83,
          column: 5
        }
      },
      "27": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 30
        }
      },
      "28": {
        start: {
          line: 84,
          column: 17
        },
        end: {
          line: 86,
          column: 5
        }
      },
      "29": {
        start: {
          line: 87,
          column: 32
        },
        end: {
          line: 87,
          column: 88
        }
      },
      "30": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "31": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "32": {
        start: {
          line: 90,
          column: 23
        },
        end: {
          line: 90,
          column: 95
        }
      },
      "33": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 95,
          column: 13
        }
      },
      "34": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 57
        }
      },
      "35": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 39
        }
      },
      "36": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 98,
          column: 25
        }
      },
      "37": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 101,
          column: 5
        }
      },
      "38": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 31
        }
      },
      "39": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 102,
          column: 18
        }
      },
      "40": {
        start: {
          line: 109,
          column: 25
        },
        end: {
          line: 116,
          column: 1
        }
      },
      "41": {
        start: {
          line: 132,
          column: 24
        },
        end: {
          line: 182,
          column: 1
        }
      },
      "42": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 181,
          column: 5
        }
      },
      "43": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 138,
          column: 14
        }
      },
      "44": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 146,
          column: 14
        }
      },
      "45": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 152,
          column: 14
        }
      },
      "46": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 158,
          column: 14
        }
      },
      "47": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 163,
          column: 14
        }
      },
      "48": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 170,
          column: 14
        }
      },
      "49": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 178,
          column: 14
        }
      },
      "50": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 25
        }
      },
      "51": {
        start: {
          line: 191,
          column: 38
        },
        end: {
          line: 191,
          column: 74
        }
      },
      "52": {
        start: {
          line: 192,
          column: 21
        },
        end: {
          line: 521,
          column: 1
        }
      },
      "53": {
        start: {
          line: 193,
          column: 30
        },
        end: {
          line: 193,
          column: 79
        }
      },
      "54": {
        start: {
          line: 194,
          column: 19
        },
        end: {
          line: 194,
          column: 43
        }
      },
      "55": {
        start: {
          line: 207,
          column: 6
        },
        end: {
          line: 277,
          column: 11
        }
      },
      "56": {
        start: {
          line: 208,
          column: 31
        },
        end: {
          line: 275,
          column: 9
        }
      },
      "57": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 274,
          column: 13
        }
      },
      "58": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 213,
          column: 19
        }
      },
      "59": {
        start: {
          line: 215,
          column: 30
        },
        end: {
          line: 215,
          column: 64
        }
      },
      "60": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 223,
          column: 17
        }
      },
      "61": {
        start: {
          line: 218,
          column: 20
        },
        end: {
          line: 221,
          column: 23
        }
      },
      "62": {
        start: {
          line: 222,
          column: 20
        },
        end: {
          line: 222,
          column: 27
        }
      },
      "63": {
        start: {
          line: 225,
          column: 35
        },
        end: {
          line: 225,
          column: 87
        }
      },
      "64": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 238,
          column: 17
        }
      },
      "65": {
        start: {
          line: 227,
          column: 20
        },
        end: {
          line: 237,
          column: 21
        }
      },
      "66": {
        start: {
          line: 228,
          column: 37
        },
        end: {
          line: 228,
          column: 59
        }
      },
      "67": {
        start: {
          line: 229,
          column: 24
        },
        end: {
          line: 232,
          column: 27
        }
      },
      "68": {
        start: {
          line: 234,
          column: 24
        },
        end: {
          line: 234,
          column: 101
        }
      },
      "69": {
        start: {
          line: 236,
          column: 24
        },
        end: {
          line: 236,
          column: 80
        }
      },
      "70": {
        start: {
          line: 240,
          column: 16
        },
        end: {
          line: 265,
          column: 17
        }
      },
      "71": {
        start: {
          line: 241,
          column: 37
        },
        end: {
          line: 241,
          column: 68
        }
      },
      "72": {
        start: {
          line: 243,
          column: 37
        },
        end: {
          line: 243,
          column: 62
        }
      },
      "73": {
        start: {
          line: 244,
          column: 20
        },
        end: {
          line: 247,
          column: 23
        }
      },
      "74": {
        start: {
          line: 249,
          column: 20
        },
        end: {
          line: 249,
          column: 99
        }
      },
      "75": {
        start: {
          line: 251,
          column: 20
        },
        end: {
          line: 251,
          column: 71
        }
      },
      "76": {
        start: {
          line: 253,
          column: 41
        },
        end: {
          line: 253,
          column: 76
        }
      },
      "77": {
        start: {
          line: 254,
          column: 20
        },
        end: {
          line: 264,
          column: 21
        }
      },
      "78": {
        start: {
          line: 255,
          column: 24
        },
        end: {
          line: 260,
          column: 25
        }
      },
      "79": {
        start: {
          line: 256,
          column: 28
        },
        end: {
          line: 256,
          column: 57
        }
      },
      "80": {
        start: {
          line: 258,
          column: 28
        },
        end: {
          line: 258,
          column: 81
        }
      },
      "81": {
        start: {
          line: 259,
          column: 28
        },
        end: {
          line: 259,
          column: 51
        }
      },
      "82": {
        start: {
          line: 262,
          column: 24
        },
        end: {
          line: 262,
          column: 85
        }
      },
      "83": {
        start: {
          line: 263,
          column: 24
        },
        end: {
          line: 263,
          column: 47
        }
      },
      "84": {
        start: {
          line: 267,
          column: 16
        },
        end: {
          line: 267,
          column: 68
        }
      },
      "85": {
        start: {
          line: 268,
          column: 16
        },
        end: {
          line: 268,
          column: 39
        }
      },
      "86": {
        start: {
          line: 270,
          column: 16
        },
        end: {
          line: 273,
          column: 19
        }
      },
      "87": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 25
        }
      },
      "88": {
        start: {
          line: 286,
          column: 29
        },
        end: {
          line: 301,
          column: 5
        }
      },
      "89": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 300,
          column: 9
        }
      },
      "90": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 44
        }
      },
      "91": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 293,
          column: 15
        }
      },
      "92": {
        start: {
          line: 292,
          column: 16
        },
        end: {
          line: 292,
          column: 45
        }
      },
      "93": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 297,
          column: 15
        }
      },
      "94": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 50
        }
      },
      "95": {
        start: {
          line: 307,
          column: 35
        },
        end: {
          line: 319,
          column: 5
        }
      },
      "96": {
        start: {
          line: 308,
          column: 29
        },
        end: {
          line: 308,
          column: 64
        }
      },
      "97": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 311,
          column: 9
        }
      },
      "98": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 310,
          column: 58
        }
      },
      "99": {
        start: {
          line: 313,
          column: 25
        },
        end: {
          line: 315,
          column: 10
        }
      },
      "100": {
        start: {
          line: 316,
          column: 65
        },
        end: {
          line: 316,
          column: 78
        }
      },
      "101": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 318,
          column: 67
        }
      },
      "102": {
        start: {
          line: 321,
          column: 18
        },
        end: {
          line: 372,
          column: 5
        }
      },
      "103": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 371,
          column: 9
        }
      },
      "104": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 326,
          column: 15
        }
      },
      "105": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 330,
          column: 15
        }
      },
      "106": {
        start: {
          line: 331,
          column: 29
        },
        end: {
          line: 331,
          column: 62
        }
      },
      "107": {
        start: {
          line: 332,
          column: 58
        },
        end: {
          line: 332,
          column: 71
        }
      },
      "108": {
        start: {
          line: 334,
          column: 12
        },
        end: {
          line: 334,
          column: 69
        }
      },
      "109": {
        start: {
          line: 336,
          column: 12
        },
        end: {
          line: 336,
          column: 87
        }
      },
      "110": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 341,
          column: 15
        }
      },
      "111": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 360,
          column: 13
        }
      },
      "112": {
        start: {
          line: 344,
          column: 53
        },
        end: {
          line: 344,
          column: 155
        }
      },
      "113": {
        start: {
          line: 344,
          column: 100
        },
        end: {
          line: 344,
          column: 154
        }
      },
      "114": {
        start: {
          line: 346,
          column: 16
        },
        end: {
          line: 351,
          column: 19
        }
      },
      "115": {
        start: {
          line: 353,
          column: 16
        },
        end: {
          line: 357,
          column: 19
        }
      },
      "116": {
        start: {
          line: 359,
          column: 16
        },
        end: {
          line: 359,
          column: 76
        }
      },
      "117": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 361,
          column: 76
        }
      },
      "118": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 363,
          column: 49
        }
      },
      "119": {
        start: {
          line: 364,
          column: 33
        },
        end: {
          line: 364,
          column: 82
        }
      },
      "120": {
        start: {
          line: 365,
          column: 12
        },
        end: {
          line: 368,
          column: 15
        }
      },
      "121": {
        start: {
          line: 369,
          column: 12
        },
        end: {
          line: 369,
          column: 55
        }
      },
      "122": {
        start: {
          line: 370,
          column: 12
        },
        end: {
          line: 370,
          column: 24
        }
      },
      "123": {
        start: {
          line: 374,
          column: 21
        },
        end: {
          line: 428,
          column: 5
        }
      },
      "124": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 427,
          column: 9
        }
      },
      "125": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 379,
          column: 15
        }
      },
      "126": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 383,
          column: 15
        }
      },
      "127": {
        start: {
          line: 384,
          column: 29
        },
        end: {
          line: 384,
          column: 62
        }
      },
      "128": {
        start: {
          line: 385,
          column: 58
        },
        end: {
          line: 385,
          column: 71
        }
      },
      "129": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 387,
          column: 69
        }
      },
      "130": {
        start: {
          line: 389,
          column: 12
        },
        end: {
          line: 389,
          column: 87
        }
      },
      "131": {
        start: {
          line: 391,
          column: 12
        },
        end: {
          line: 394,
          column: 15
        }
      },
      "132": {
        start: {
          line: 396,
          column: 12
        },
        end: {
          line: 416,
          column: 13
        }
      },
      "133": {
        start: {
          line: 397,
          column: 53
        },
        end: {
          line: 397,
          column: 155
        }
      },
      "134": {
        start: {
          line: 397,
          column: 100
        },
        end: {
          line: 397,
          column: 154
        }
      },
      "135": {
        start: {
          line: 399,
          column: 16
        },
        end: {
          line: 405,
          column: 19
        }
      },
      "136": {
        start: {
          line: 407,
          column: 16
        },
        end: {
          line: 413,
          column: 19
        }
      },
      "137": {
        start: {
          line: 415,
          column: 16
        },
        end: {
          line: 415,
          column: 83
        }
      },
      "138": {
        start: {
          line: 417,
          column: 12
        },
        end: {
          line: 417,
          column: 79
        }
      },
      "139": {
        start: {
          line: 419,
          column: 12
        },
        end: {
          line: 419,
          column: 56
        }
      },
      "140": {
        start: {
          line: 420,
          column: 33
        },
        end: {
          line: 420,
          column: 82
        }
      },
      "141": {
        start: {
          line: 421,
          column: 12
        },
        end: {
          line: 424,
          column: 15
        }
      },
      "142": {
        start: {
          line: 425,
          column: 12
        },
        end: {
          line: 425,
          column: 55
        }
      },
      "143": {
        start: {
          line: 426,
          column: 12
        },
        end: {
          line: 426,
          column: 24
        }
      },
      "144": {
        start: {
          line: 430,
          column: 19
        },
        end: {
          line: 476,
          column: 5
        }
      },
      "145": {
        start: {
          line: 431,
          column: 8
        },
        end: {
          line: 475,
          column: 9
        }
      },
      "146": {
        start: {
          line: 432,
          column: 12
        },
        end: {
          line: 435,
          column: 15
        }
      },
      "147": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 439,
          column: 15
        }
      },
      "148": {
        start: {
          line: 441,
          column: 12
        },
        end: {
          line: 445,
          column: 13
        }
      },
      "149": {
        start: {
          line: 442,
          column: 16
        },
        end: {
          line: 442,
          column: 40
        }
      },
      "150": {
        start: {
          line: 444,
          column: 16
        },
        end: {
          line: 444,
          column: 63
        }
      },
      "151": {
        start: {
          line: 447,
          column: 12
        },
        end: {
          line: 459,
          column: 13
        }
      },
      "152": {
        start: {
          line: 448,
          column: 16
        },
        end: {
          line: 458,
          column: 17
        }
      },
      "153": {
        start: {
          line: 449,
          column: 54
        },
        end: {
          line: 449,
          column: 156
        }
      },
      "154": {
        start: {
          line: 449,
          column: 101
        },
        end: {
          line: 449,
          column: 155
        }
      },
      "155": {
        start: {
          line: 450,
          column: 20
        },
        end: {
          line: 453,
          column: 23
        }
      },
      "156": {
        start: {
          line: 455,
          column: 20
        },
        end: {
          line: 455,
          column: 38
        }
      },
      "157": {
        start: {
          line: 457,
          column: 20
        },
        end: {
          line: 457,
          column: 81
        }
      },
      "158": {
        start: {
          line: 460,
          column: 12
        },
        end: {
          line: 460,
          column: 35
        }
      },
      "159": {
        start: {
          line: 461,
          column: 12
        },
        end: {
          line: 461,
          column: 85
        }
      },
      "160": {
        start: {
          line: 462,
          column: 12
        },
        end: {
          line: 462,
          column: 77
        }
      },
      "161": {
        start: {
          line: 464,
          column: 12
        },
        end: {
          line: 467,
          column: 20
        }
      },
      "162": {
        start: {
          line: 465,
          column: 16
        },
        end: {
          line: 465,
          column: 75
        }
      },
      "163": {
        start: {
          line: 466,
          column: 16
        },
        end: {
          line: 466,
          column: 36
        }
      },
      "164": {
        start: {
          line: 469,
          column: 12
        },
        end: {
          line: 469,
          column: 50
        }
      },
      "165": {
        start: {
          line: 471,
          column: 12
        },
        end: {
          line: 471,
          column: 35
        }
      },
      "166": {
        start: {
          line: 472,
          column: 12
        },
        end: {
          line: 474,
          column: 20
        }
      },
      "167": {
        start: {
          line: 473,
          column: 16
        },
        end: {
          line: 473,
          column: 36
        }
      },
      "168": {
        start: {
          line: 478,
          column: 25
        },
        end: {
          line: 486,
          column: 5
        }
      },
      "169": {
        start: {
          line: 479,
          column: 8
        },
        end: {
          line: 485,
          column: 9
        }
      },
      "170": {
        start: {
          line: 480,
          column: 12
        },
        end: {
          line: 480,
          column: 41
        }
      },
      "171": {
        start: {
          line: 482,
          column: 12
        },
        end: {
          line: 482,
          column: 58
        }
      },
      "172": {
        start: {
          line: 483,
          column: 12
        },
        end: {
          line: 483,
          column: 35
        }
      },
      "173": {
        start: {
          line: 484,
          column: 12
        },
        end: {
          line: 484,
          column: 24
        }
      },
      "174": {
        start: {
          line: 488,
          column: 23
        },
        end: {
          line: 493,
          column: 5
        }
      },
      "175": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 492,
          column: 11
        }
      },
      "176": {
        start: {
          line: 495,
          column: 23
        },
        end: {
          line: 507,
          column: 5
        }
      },
      "177": {
        start: {
          line: 496,
          column: 8
        },
        end: {
          line: 506,
          column: 9
        }
      },
      "178": {
        start: {
          line: 497,
          column: 32
        },
        end: {
          line: 500,
          column: 13
        }
      },
      "179": {
        start: {
          line: 501,
          column: 12
        },
        end: {
          line: 501,
          column: 94
        }
      },
      "180": {
        start: {
          line: 502,
          column: 12
        },
        end: {
          line: 505,
          column: 15
        }
      },
      "181": {
        start: {
          line: 508,
          column: 18
        },
        end: {
          line: 516,
          column: 5
        }
      },
      "182": {
        start: {
          line: 517,
          column: 4
        },
        end: {
          line: 520,
          column: 7
        }
      },
      "183": {
        start: {
          line: 522,
          column: 16
        },
        end: {
          line: 528,
          column: 1
        }
      },
      "184": {
        start: {
          line: 523,
          column: 20
        },
        end: {
          line: 523,
          column: 55
        }
      },
      "185": {
        start: {
          line: 524,
          column: 4
        },
        end: {
          line: 526,
          column: 5
        }
      },
      "186": {
        start: {
          line: 525,
          column: 8
        },
        end: {
          line: 525,
          column: 71
        }
      },
      "187": {
        start: {
          line: 527,
          column: 4
        },
        end: {
          line: 527,
          column: 19
        }
      },
      "188": {
        start: {
          line: 529,
          column: 23
        },
        end: {
          line: 548,
          column: 1
        }
      },
      "189": {
        start: {
          line: 530,
          column: 47
        },
        end: {
          line: 530,
          column: 56
        }
      },
      "190": {
        start: {
          line: 531,
          column: 19
        },
        end: {
          line: 531,
          column: 43
        }
      },
      "191": {
        start: {
          line: 532,
          column: 4
        },
        end: {
          line: 543,
          column: 7
        }
      },
      "192": {
        start: {
          line: 533,
          column: 8
        },
        end: {
          line: 537,
          column: 9
        }
      },
      "193": {
        start: {
          line: 534,
          column: 32
        },
        end: {
          line: 534,
          column: 45
        }
      },
      "194": {
        start: {
          line: 535,
          column: 32
        },
        end: {
          line: 535,
          column: 91
        }
      },
      "195": {
        start: {
          line: 536,
          column: 12
        },
        end: {
          line: 536,
          column: 40
        }
      },
      "196": {
        start: {
          line: 544,
          column: 4
        },
        end: {
          line: 547,
          column: 6
        }
      },
      "197": {
        start: {
          line: 549,
          column: 17
        },
        end: {
          line: 549,
          column: 28
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 16
          }
        },
        loc: {
          start: {
            line: 32,
            column: 30
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 32
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 39,
            column: 18
          },
          end: {
            line: 39,
            column: 19
          }
        },
        loc: {
          start: {
            line: 39,
            column: 29
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 42,
            column: 13
          },
          end: {
            line: 42,
            column: 14
          }
        },
        loc: {
          start: {
            line: 42,
            column: 24
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 45,
            column: 13
          },
          end: {
            line: 45,
            column: 14
          }
        },
        loc: {
          start: {
            line: 45,
            column: 24
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 45
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 48,
            column: 20
          },
          end: {
            line: 48,
            column: 21
          }
        },
        loc: {
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 48
      },
      "5": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 58,
            column: 9
          },
          end: {
            line: 58,
            column: 33
          }
        },
        loc: {
          start: {
            line: 58,
            column: 39
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 58
      },
      "6": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 63,
            column: 9
          },
          end: {
            line: 63,
            column: 33
          }
        },
        loc: {
          start: {
            line: 63,
            column: 47
          },
          end: {
            line: 70,
            column: 1
          }
        },
        line: 63
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 67,
            column: 39
          },
          end: {
            line: 67,
            column: 40
          }
        },
        loc: {
          start: {
            line: 67,
            column: 61
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 67
      },
      "8": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 71,
            column: 9
          },
          end: {
            line: 71,
            column: 34
          }
        },
        loc: {
          start: {
            line: 71,
            column: 53
          },
          end: {
            line: 103,
            column: 1
          }
        },
        line: 71
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 132,
            column: 24
          },
          end: {
            line: 132,
            column: 25
          }
        },
        loc: {
          start: {
            line: 132,
            column: 41
          },
          end: {
            line: 182,
            column: 1
          }
        },
        line: 132
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 192,
            column: 21
          },
          end: {
            line: 192,
            column: 22
          }
        },
        loc: {
          start: {
            line: 192,
            column: 37
          },
          end: {
            line: 521,
            column: 1
          }
        },
        line: 192
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 207,
            column: 28
          },
          end: {
            line: 207,
            column: 29
          }
        },
        loc: {
          start: {
            line: 207,
            column: 32
          },
          end: {
            line: 277,
            column: 5
          }
        },
        line: 207
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 208,
            column: 31
          },
          end: {
            line: 208,
            column: 32
          }
        },
        loc: {
          start: {
            line: 208,
            column: 41
          },
          end: {
            line: 275,
            column: 9
          }
        },
        line: 208
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 286,
            column: 29
          },
          end: {
            line: 286,
            column: 30
          }
        },
        loc: {
          start: {
            line: 286,
            column: 39
          },
          end: {
            line: 301,
            column: 5
          }
        },
        line: 286
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 291,
            column: 61
          },
          end: {
            line: 291,
            column: 62
          }
        },
        loc: {
          start: {
            line: 291,
            column: 68
          },
          end: {
            line: 293,
            column: 13
          }
        },
        line: 291
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 307,
            column: 35
          },
          end: {
            line: 307,
            column: 36
          }
        },
        loc: {
          start: {
            line: 307,
            column: 45
          },
          end: {
            line: 319,
            column: 5
          }
        },
        line: 307
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 321,
            column: 18
          },
          end: {
            line: 321,
            column: 19
          }
        },
        loc: {
          start: {
            line: 321,
            column: 39
          },
          end: {
            line: 372,
            column: 5
          }
        },
        line: 321
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 344,
            column: 82
          },
          end: {
            line: 344,
            column: 83
          }
        },
        loc: {
          start: {
            line: 344,
            column: 100
          },
          end: {
            line: 344,
            column: 154
          }
        },
        line: 344
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 374,
            column: 21
          },
          end: {
            line: 374,
            column: 22
          }
        },
        loc: {
          start: {
            line: 374,
            column: 39
          },
          end: {
            line: 428,
            column: 5
          }
        },
        line: 374
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 397,
            column: 82
          },
          end: {
            line: 397,
            column: 83
          }
        },
        loc: {
          start: {
            line: 397,
            column: 100
          },
          end: {
            line: 397,
            column: 154
          }
        },
        line: 397
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 430,
            column: 19
          },
          end: {
            line: 430,
            column: 20
          }
        },
        loc: {
          start: {
            line: 430,
            column: 29
          },
          end: {
            line: 476,
            column: 5
          }
        },
        line: 430
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 449,
            column: 83
          },
          end: {
            line: 449,
            column: 84
          }
        },
        loc: {
          start: {
            line: 449,
            column: 101
          },
          end: {
            line: 449,
            column: 155
          }
        },
        line: 449
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 464,
            column: 23
          },
          end: {
            line: 464,
            column: 24
          }
        },
        loc: {
          start: {
            line: 464,
            column: 27
          },
          end: {
            line: 467,
            column: 13
          }
        },
        line: 464
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 472,
            column: 23
          },
          end: {
            line: 472,
            column: 24
          }
        },
        loc: {
          start: {
            line: 472,
            column: 27
          },
          end: {
            line: 474,
            column: 13
          }
        },
        line: 472
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 478,
            column: 25
          },
          end: {
            line: 478,
            column: 26
          }
        },
        loc: {
          start: {
            line: 478,
            column: 35
          },
          end: {
            line: 486,
            column: 5
          }
        },
        line: 478
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 488,
            column: 23
          },
          end: {
            line: 488,
            column: 24
          }
        },
        loc: {
          start: {
            line: 488,
            column: 27
          },
          end: {
            line: 493,
            column: 5
          }
        },
        line: 488
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 495,
            column: 23
          },
          end: {
            line: 495,
            column: 24
          }
        },
        loc: {
          start: {
            line: 495,
            column: 35
          },
          end: {
            line: 507,
            column: 5
          }
        },
        line: 495
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 522,
            column: 16
          },
          end: {
            line: 522,
            column: 17
          }
        },
        loc: {
          start: {
            line: 522,
            column: 20
          },
          end: {
            line: 528,
            column: 1
          }
        },
        line: 522
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 529,
            column: 23
          },
          end: {
            line: 529,
            column: 24
          }
        },
        loc: {
          start: {
            line: 529,
            column: 53
          },
          end: {
            line: 548,
            column: 1
          }
        },
        line: 529
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 532,
            column: 26
          },
          end: {
            line: 532,
            column: 27
          }
        },
        loc: {
          start: {
            line: 532,
            column: 30
          },
          end: {
            line: 538,
            column: 5
          }
        },
        line: 532
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 59,
            column: 11
          },
          end: {
            line: 61,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 59,
            column: 35
          },
          end: {
            line: 59,
            column: 38
          }
        }, {
          start: {
            line: 59,
            column: 41
          },
          end: {
            line: 61,
            column: 5
          }
        }],
        line: 59
      },
      "1": {
        loc: {
          start: {
            line: 59,
            column: 11
          },
          end: {
            line: 59,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 11
          },
          end: {
            line: 59,
            column: 14
          }
        }, {
          start: {
            line: 59,
            column: 18
          },
          end: {
            line: 59,
            column: 32
          }
        }],
        line: 59
      },
      "2": {
        loc: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 64,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 64,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "3": {
        loc: {
          start: {
            line: 68,
            column: 15
          },
          end: {
            line: 68,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 68,
            column: 29
          },
          end: {
            line: 68,
            column: 45
          }
        }, {
          start: {
            line: 68,
            column: 48
          },
          end: {
            line: 68,
            column: 65
          }
        }],
        line: 68
      },
      "4": {
        loc: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "5": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 72,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 72,
            column: 20
          }
        }, {
          start: {
            line: 72,
            column: 24
          },
          end: {
            line: 72,
            column: 27
          }
        }, {
          start: {
            line: 72,
            column: 31
          },
          end: {
            line: 72,
            column: 45
          }
        }],
        line: 72
      },
      "6": {
        loc: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "7": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 75,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 75,
            column: 20
          }
        }, {
          start: {
            line: 75,
            column: 24
          },
          end: {
            line: 75,
            column: 47
          }
        }, {
          start: {
            line: 75,
            column: 51
          },
          end: {
            line: 75,
            column: 76
          }
        }],
        line: 75
      },
      "8": {
        loc: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "9": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 81,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 81,
            column: 13
          }
        }, {
          start: {
            line: 81,
            column: 17
          },
          end: {
            line: 81,
            column: 31
          }
        }],
        line: 81
      },
      "10": {
        loc: {
          start: {
            line: 87,
            column: 32
          },
          end: {
            line: 87,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 32
          },
          end: {
            line: 87,
            column: 53
          }
        }, {
          start: {
            line: 87,
            column: 57
          },
          end: {
            line: 87,
            column: 88
          }
        }],
        line: 87
      },
      "11": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "12": {
        loc: {
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 89,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 89,
            column: 29
          }
        }, {
          start: {
            line: 89,
            column: 33
          },
          end: {
            line: 89,
            column: 79
          }
        }],
        line: 89
      },
      "13": {
        loc: {
          start: {
            line: 90,
            column: 23
          },
          end: {
            line: 90,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 90,
            column: 47
          },
          end: {
            line: 90,
            column: 88
          }
        }, {
          start: {
            line: 90,
            column: 91
          },
          end: {
            line: 90,
            column: 95
          }
        }],
        line: 90
      },
      "14": {
        loc: {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 95,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 95,
            column: 13
          }
        }, {
          start: {
            line: 93,
            column: 19
          },
          end: {
            line: 95,
            column: 13
          }
        }],
        line: 91
      },
      "15": {
        loc: {
          start: {
            line: 91,
            column: 16
          },
          end: {
            line: 91,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 16
          },
          end: {
            line: 91,
            column: 20
          }
        }, {
          start: {
            line: 91,
            column: 25
          },
          end: {
            line: 91,
            column: 33
          }
        }, {
          start: {
            line: 91,
            column: 37
          },
          end: {
            line: 91,
            column: 45
          }
        }],
        line: 91
      },
      "16": {
        loc: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "17": {
        loc: {
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 138,
            column: 14
          }
        }, {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 146,
            column: 14
          }
        }, {
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 152,
            column: 14
          }
        }, {
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 158,
            column: 14
          }
        }, {
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 163,
            column: 14
          }
        }, {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 170,
            column: 14
          }
        }, {
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 178,
            column: 14
          }
        }, {
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 180,
            column: 25
          }
        }],
        line: 133
      },
      "18": {
        loc: {
          start: {
            line: 174,
            column: 22
          },
          end: {
            line: 177,
            column: 24
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 174,
            column: 35
          },
          end: {
            line: 177,
            column: 17
          }
        }, {
          start: {
            line: 177,
            column: 20
          },
          end: {
            line: 177,
            column: 24
          }
        }],
        line: 174
      },
      "19": {
        loc: {
          start: {
            line: 216,
            column: 16
          },
          end: {
            line: 223,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 16
          },
          end: {
            line: 223,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "20": {
        loc: {
          start: {
            line: 226,
            column: 16
          },
          end: {
            line: 238,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 16
          },
          end: {
            line: 238,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "21": {
        loc: {
          start: {
            line: 243,
            column: 37
          },
          end: {
            line: 243,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 243,
            column: 37
          },
          end: {
            line: 243,
            column: 50
          }
        }, {
          start: {
            line: 243,
            column: 54
          },
          end: {
            line: 243,
            column: 62
          }
        }],
        line: 243
      },
      "22": {
        loc: {
          start: {
            line: 254,
            column: 20
          },
          end: {
            line: 264,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 254,
            column: 20
          },
          end: {
            line: 264,
            column: 21
          }
        }, {
          start: {
            line: 261,
            column: 27
          },
          end: {
            line: 264,
            column: 21
          }
        }],
        line: 254
      },
      "23": {
        loc: {
          start: {
            line: 309,
            column: 8
          },
          end: {
            line: 311,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 309,
            column: 8
          },
          end: {
            line: 311,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 309
      },
      "24": {
        loc: {
          start: {
            line: 364,
            column: 33
          },
          end: {
            line: 364,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 364,
            column: 33
          },
          end: {
            line: 364,
            column: 46
          }
        }, {
          start: {
            line: 364,
            column: 50
          },
          end: {
            line: 364,
            column: 82
          }
        }],
        line: 364
      },
      "25": {
        loc: {
          start: {
            line: 420,
            column: 33
          },
          end: {
            line: 420,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 420,
            column: 33
          },
          end: {
            line: 420,
            column: 46
          }
        }, {
          start: {
            line: 420,
            column: 50
          },
          end: {
            line: 420,
            column: 82
          }
        }],
        line: 420
      },
      "26": {
        loc: {
          start: {
            line: 447,
            column: 12
          },
          end: {
            line: 459,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 447,
            column: 12
          },
          end: {
            line: 459,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 447
      },
      "27": {
        loc: {
          start: {
            line: 496,
            column: 8
          },
          end: {
            line: 506,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 496,
            column: 8
          },
          end: {
            line: 506,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 496
      },
      "28": {
        loc: {
          start: {
            line: 524,
            column: 4
          },
          end: {
            line: 526,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 524,
            column: 4
          },
          end: {
            line: 526,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 524
      },
      "29": {
        loc: {
          start: {
            line: 529,
            column: 24
          },
          end: {
            line: 529,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 529,
            column: 37
          },
          end: {
            line: 529,
            column: 50
          }
        }],
        line: 529
      },
      "30": {
        loc: {
          start: {
            line: 533,
            column: 8
          },
          end: {
            line: 537,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 533,
            column: 8
          },
          end: {
            line: 537,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 533
      },
      "31": {
        loc: {
          start: {
            line: 533,
            column: 12
          },
          end: {
            line: 533,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 533,
            column: 12
          },
          end: {
            line: 533,
            column: 25
          }
        }, {
          start: {
            line: 533,
            column: 29
          },
          end: {
            line: 533,
            column: 45
          }
        }],
        line: 533
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0, 0, 0, 0, 0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0],
      "30": [0, 0],
      "31": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/jack/Documents/aclue-preprod/web/src/context/AuthContext.tsx"],
      sourcesContent: ["/**\n * aclue Authentication Context\n * \n * Centralised authentication state management for the entire application.\n * Provides secure user session handling, JWT token management, and\n * authentication flows for login, registration, and logout.\n * \n * Key Features:\n *   - Automatic token refresh and session persistence\n *   - Protected route authentication guards\n *   - Real-time user state synchronisation\n *   - PostHog analytics integration for user events\n *   - Comprehensive error handling and user feedback\n * \n * State Management:\n *   - Uses useReducer for predictable state updates\n *   - Persists user data to localStorage for session continuity\n *   - Handles loading states during authentication operations\n * \n * Usage:\n *   // In _app.tsx\n *   <AuthProvider>\n *     <Component {...pageProps} />\n *   </AuthProvider>\n * \n *   // In components\n *   const { user, login, logout, isAuthenticated } = useAuth();\n */\n\nimport React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\nimport { useRouter } from 'next/router';\nimport { api, tokenManager } from '@/lib/api';\nimport { appConfig } from '@/config';\nimport { User, LoginRequest, RegisterRequest } from '@/types';\nimport toast from 'react-hot-toast';\n\n// ==============================================================================\n// TYPE DEFINITIONS\n// ==============================================================================\n\n/**\n * Authentication state interface defining the current auth status.\n * \n * Tracks user session, loading states, and error conditions to\n * provide comprehensive authentication state to the application.\n */\ninterface AuthState {\n  user: User | null;        // Current authenticated user (null if not logged in)\n  isAuthenticated: boolean; // Authentication status (true if user logged in)\n  isLoading: boolean;       // Loading state during auth operations\n  isInitialized: boolean;   // Whether auth state has been initialized from storage\n  isLoggingOut: boolean;    // Logout in progress flag\n  error: string | null;     // Current error message (null if no error)\n}\n\n/**\n * Authentication context interface providing auth methods and state.\n * \n * Extends AuthState with methods for authentication operations.\n * All methods are async and handle loading states automatically.\n */\ninterface AuthContextType extends AuthState {\n  login: (credentials: LoginRequest) => Promise<void>;      // Authenticate user with email/password\n  register: (userData: RegisterRequest) => Promise<void>;   // Create new user account\n  logout: () => Promise<void>;                              // End user session and clear tokens\n  refreshToken: () => Promise<void>;                        // Refresh expired access token\n  clearError: () => void;                                   // Clear current error state\n  updateUser: (userData: Partial<User>) => void;            // Update user profile data\n}\n\n/**\n * Authentication action types for state management.\n * \n * Defines all possible state changes that can occur during\n * authentication flows. Used with useReducer for predictable\n * state updates.\n */\ntype AuthAction =\n  | { type: 'SET_LOADING'; payload: boolean }           // Update loading state\n  | { type: 'SET_USER'; payload: User | null }          // Set authenticated user\n  | { type: 'SET_ERROR'; payload: string | null }       // Set error message\n  | { type: 'SET_INITIALIZED'; payload: boolean }       // Mark auth as initialized\n  | { type: 'SET_LOGGING_OUT'; payload: boolean }       // Set logout in progress\n  | { type: 'LOGOUT' }                                  // Clear user and reset state\n  | { type: 'UPDATE_USER'; payload: Partial<User> };    // Update user profile data\n\n/**\n * Initial authentication state on application load.\n * \n * Sets default values for all auth state properties.\n * isLoading starts as true to prevent flash of unauthenticated content.\n */\nconst initialState: AuthState = {\n  user: null,             // No user authenticated initially\n  isAuthenticated: false, // Not authenticated until proven otherwise\n  isLoading: true,        // Loading while checking stored tokens\n  isInitialized: false,   // Not initialized until storage check complete\n  isLoggingOut: false,    // No logout in progress\n  error: null,            // No error initially\n};\n\n// ==============================================================================\n// STATE REDUCER\n// ==============================================================================\n\n/**\n * Authentication state reducer for predictable state management.\n * \n * Handles all authentication state changes through well-defined actions.\n * Ensures immutable state updates and consistent state transitions.\n * \n * Parameters:\n *   state: Current authentication state\n *   action: Action to perform with optional payload\n * \n * Returns:\n *   AuthState: New state after applying action\n */\nconst authReducer = (state: AuthState, action: AuthAction): AuthState => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return { ...state, isLoading: action.payload };\n    \n    case 'SET_USER':\n      return {\n        ...state,\n        user: action.payload,                    // Set user data\n        isAuthenticated: !!action.payload,       // Authenticated if user exists\n        isLoading: false,                        // No longer loading\n        error: null,                             // Clear any errors\n      };\n    \n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,                   // Set error message\n        isLoading: false,                        // Stop loading on error\n      };\n    \n    case 'SET_INITIALIZED':\n      return {\n        ...state,\n        isInitialized: action.payload,           // Mark as initialized\n        isLoading: !action.payload,              // Stop loading when initialized\n      };\n    \n    case 'SET_LOGGING_OUT':\n      return {\n        ...state,\n        isLoggingOut: action.payload,            // Set logout in progress flag\n      };\n    \n    case 'LOGOUT':\n      return {\n        ...initialState,                         // Reset to initial state\n        isInitialized: true,                     // Keep initialized flag\n        isLoading: false,                        // Not loading after logout\n        isLoggingOut: false,                     // Logout complete\n      };\n    \n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: state.user ? { ...state.user, ...action.payload } : null, // Merge user updates\n      };\n    \n    default:\n      return state;                              // No change for unknown actions\n  }\n};\n\n// ==============================================================================\n// CONTEXT CREATION\n// ==============================================================================\n\n/**\n * Authentication context for sharing auth state across the application.\n * \n * Created with undefined default to force proper provider usage.\n * Components must be wrapped in AuthProvider to access context.\n */\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// ==============================================================================\n// PROVIDER COMPONENT\n// ==============================================================================\n\n/**\n * Props for AuthProvider component.\n */\ninterface AuthProviderProps {\n  children: ReactNode; // Child components that need access to auth context\n}\n\n/**\n * Authentication Provider component.\n * \n * Provides authentication state and methods to all child components.\n * Handles session initialization, token refresh, and user state persistence.\n * \n * Initialization Flow:\n *   1. Check for stored tokens in localStorage\n *   2. Validate tokens with backend\n *   3. Restore user session or clear invalid tokens\n *   4. Mark authentication as initialized\n * \n * Props:\n *   children: React components that need auth context\n */\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  const router = useRouter();\n\n  // ===========================================================================\n  // AUTHENTICATION INITIALIZATION\n  // ===========================================================================\n  \n  /**\n   * Initialize authentication state on component mount.\n   * \n   * Runs once when the app loads to:\n   *   - Check for stored authentication tokens\n   *   - Restore user session from localStorage\n   *   - Verify tokens with backend\n   *   - Handle token refresh if needed\n   *   - Clear invalid sessions\n   */\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        dispatch({ type: 'SET_LOADING', payload: true });\n\n        // Check for stored access token\n        const token = tokenManager.getAccessToken();\n        \n        if (!token) {\n          // No token found - user not logged in\n          dispatch({ type: 'SET_INITIALIZED', payload: true });\n          return;\n        }\n\n        // Restore user data from localStorage for immediate UI update\n        const storedUser = localStorage.getItem(appConfig.storage.user);\n        \n        if (storedUser) {\n          try {\n            const user = JSON.parse(storedUser) as User;\n            dispatch({ type: 'SET_USER', payload: user });\n          } catch (parseError) {\n            console.warn('Invalid stored user data, clearing localStorage:', parseError);\n            // Clear corrupted data\n            localStorage.removeItem(appConfig.storage.user);\n          }\n        }\n\n        // Verify token with backend and get fresh user data\n        try {\n          const response = await api.getCurrentUser();\n          // Handle different response formats - sometimes data is wrapped, sometimes direct\n          const userData = response.data || response;\n          dispatch({ type: 'SET_USER', payload: userData });\n          \n          // Update stored user data with fresh backend data\n          localStorage.setItem(appConfig.storage.user, JSON.stringify(userData));\n        } catch (error: any) {\n          console.error('Token verification failed:', error);\n          \n          // Only try to refresh if we have a refresh token\n          const refreshToken = tokenManager.getRefreshToken();\n          if (refreshToken) {\n            try {\n              await refreshTokenInternal();\n            } catch (refreshError) {\n              console.error('Token refresh failed:', refreshError);\n              await logoutInternal();\n            }\n          } else {\n            console.warn('No refresh token available, clearing session');\n            await logoutInternal();\n          }\n        }\n      } catch (error) {\n        console.error('Auth initialization failed:', error);\n        await logoutInternal();\n      } finally {\n        dispatch({ type: 'SET_INITIALIZED', payload: true });\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n  // ===========================================================================\n  // INTERNAL HELPER FUNCTIONS\n  // ===========================================================================\n  \n  /**\n   * Internal logout function for cleanup without API calls.\n   * \n   * Used during error recovery and session cleanup.\n   * Clears all stored data and resets auth state.\n   */\n  const logoutInternal = async () => {\n    try {\n      // Clear tokens from memory and localStorage\n      tokenManager.clearTokens();\n      \n      // Clear all stored authentication data\n      Object.values(appConfig.storage).forEach(key => {\n        localStorage.removeItem(key);\n      });\n      \n      // Reset auth state\n      dispatch({ type: 'LOGOUT' });\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n\n  /**\n   * Internal token refresh function for session renewal.\n   * \n   * Uses stored refresh token to obtain new access token.\n   * Updates stored tokens with new values.\n   */\n  const refreshTokenInternal = async () => {\n    const refreshToken = tokenManager.getRefreshToken();\n    if (!refreshToken) {\n      throw new Error('No refresh token available');\n    }\n\n    // Call refresh endpoint\n    const response = await api.refreshAccessToken({ refresh_token: refreshToken });\n    const { access_token, refresh_token: newRefreshToken } = response.data;\n    \n    // Store new tokens\n    tokenManager.setTokens(access_token, newRefreshToken);\n  };\n\n  // Login function\n  const login = async (credentials: LoginRequest) => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      dispatch({ type: 'SET_ERROR', payload: null });\n\n      const response = await api.login(credentials);\n      const { access_token, refresh_token, user } = response.data;\n\n      // Store tokens\n      tokenManager.setTokens(access_token, refresh_token);\n\n      // Store user data\n      localStorage.setItem(appConfig.storage.user, JSON.stringify(user));\n\n      // Update state\n      dispatch({ type: 'SET_USER', payload: user });\n\n      // Track login event with PostHog\n      try {\n        const { trackEvent, identifyUser } = await import('@/lib/analytics');\n        \n        // Identify the user\n        identifyUser(user.id, {\n          email: user.email,\n          first_name: user.first_name,\n          last_name: user.last_name,\n          subscription_tier: user.subscription_tier,\n        });\n\n        // Track login event\n        trackEvent('user_login', {\n          method: 'email',\n          user_id: user.id,\n          timestamp: new Date().toISOString(),\n        });\n      } catch (trackingError) {\n        console.warn('Failed to track login event:', trackingError);\n      }\n\n      toast.success(appConfig.success.login);\n    } catch (error: any) {\n      console.error('Login error:', error);\n      const errorMessage = error.message || appConfig.errors.unknown;\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      toast.error(errorMessage);\n      throw error;\n    }\n  };\n\n  // Register function\n  const register = async (userData: RegisterRequest) => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      dispatch({ type: 'SET_ERROR', payload: null });\n\n      const response = await api.register(userData);\n      const { access_token, refresh_token, user } = response.data;\n\n      // Store tokens\n      tokenManager.setTokens(access_token, refresh_token);\n\n      // Store user data\n      localStorage.setItem(appConfig.storage.user, JSON.stringify(user));\n\n      // Update state\n      dispatch({ type: 'SET_USER', payload: user });\n\n      // Track registration event with PostHog\n      try {\n        const { trackEvent, identifyUser } = await import('@/lib/analytics');\n        \n        // Identify the user\n        identifyUser(user.id, {\n          email: user.email,\n          first_name: user.first_name,\n          last_name: user.last_name,\n          created_at: user.created_at,\n          subscription_tier: user.subscription_tier,\n        });\n\n        // Track registration event\n        trackEvent('user_register', {\n          method: 'email',\n          marketing_consent: userData.marketing_consent,\n          user_id: user.id,\n          source: 'web',\n          timestamp: new Date().toISOString(),\n        });\n      } catch (trackingError) {\n        console.warn('Failed to track registration event:', trackingError);\n      }\n\n      toast.success(appConfig.success.register);\n    } catch (error: any) {\n      console.error('Registration error:', error);\n      const errorMessage = error.message || appConfig.errors.unknown;\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      toast.error(errorMessage);\n      throw error;\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      dispatch({ type: 'SET_LOGGING_OUT', payload: true });\n      dispatch({ type: 'SET_LOADING', payload: true });\n\n      // Call logout API\n      try {\n        await api.logout();\n      } catch (error) {\n        console.warn('Logout API call failed:', error);\n      }\n\n      // Track logout event with PostHog\n      if (state.user) {\n        try {\n          const { trackEvent, analytics } = await import('@/lib/analytics');\n          \n          trackEvent('user_logout', {\n            user_id: state.user.id,\n            timestamp: new Date().toISOString(),\n          });\n\n          // Reset PostHog user session\n          analytics.reset();\n        } catch (trackingError) {\n          console.warn('Failed to track logout event:', trackingError);\n        }\n      }\n\n      await logoutInternal();\n      \n      console.log('\uD83D\uDEAA Logout completed, redirecting to homepage...');\n      toast.success(appConfig.success.logout);\n\n      // Small delay to ensure state update completes before redirect\n      setTimeout(() => {\n        console.log('\uD83D\uDEAA Executing redirect to homepage');\n        router.replace('/');\n      }, 100);\n    } catch (error: any) {\n      console.error('Logout error:', error);\n      // Force logout even if API call fails\n      await logoutInternal();\n      setTimeout(() => {\n        router.replace('/');\n      }, 100);\n    }\n  };\n\n  // Refresh token function\n  const refreshToken = async () => {\n    try {\n      await refreshTokenInternal();\n    } catch (error: any) {\n      console.error('Token refresh failed:', error);\n      await logoutInternal();\n      throw error;\n    }\n  };\n\n  // Clear error function\n  const clearError = () => {\n    dispatch({ type: 'SET_ERROR', payload: null });\n  };\n\n  // Update user function\n  const updateUser = (userData: Partial<User>) => {\n    if (state.user) {\n      const updatedUser = { ...state.user, ...userData };\n      localStorage.setItem(appConfig.storage.user, JSON.stringify(updatedUser));\n      dispatch({ type: 'UPDATE_USER', payload: userData });\n    }\n  };\n\n  const value: AuthContextType = {\n    ...state,\n    login,\n    register,\n    logout,\n    refreshToken,\n    clearError,\n    updateUser,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Hook to use auth context\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Hook for protected routes\nexport const useRequireAuth = (redirectTo: string = '/auth/login') => {\n  const { isAuthenticated, isInitialized } = useAuth();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (isInitialized && !isAuthenticated) {\n      const currentPath = router.asPath;\n      const redirectUrl = `${redirectTo}?redirect=${encodeURIComponent(currentPath)}`;\n      router.replace(redirectUrl);\n    }\n  }, [isAuthenticated, isInitialized, router, redirectTo]);\n\n  return { isAuthenticated, isInitialized };\n};\n\nexport default AuthContext;"],
      names: ["AuthProvider", "useAuth", "useRequireAuth", "initialState", "user", "isAuthenticated", "isLoading", "isInitialized", "isLoggingOut", "error", "authReducer", "state", "action", "type", "payload", "AuthContext", "createContext", "undefined", "children", "dispatch", "useReducer", "router", "useRouter", "useEffect", "initializeAuth", "token", "tokenManager", "getAccessToken", "storedUser", "localStorage", "getItem", "appConfig", "storage", "JSON", "parse", "parseError", "console", "warn", "removeItem", "response", "api", "getCurrentUser", "userData", "data", "setItem", "stringify", "refreshToken", "getRefreshToken", "refreshTokenInternal", "refreshError", "logoutInternal", "clearTokens", "Object", "values", "forEach", "key", "Error", "refreshAccessToken", "refresh_token", "access_token", "newRefreshToken", "setTokens", "login", "credentials", "trackEvent", "identifyUser", "id", "email", "first_name", "last_name", "subscription_tier", "method", "user_id", "timestamp", "Date", "toISOString", "trackingError", "toast", "success", "errorMessage", "message", "errors", "unknown", "register", "created_at", "marketing_consent", "source", "logout", "analytics", "reset", "log", "setTimeout", "replace", "clearError", "updateUser", "updatedUser", "value", "Provider", "context", "useContext", "redirectTo", "currentPath", "asPath", "redirectUrl", "encodeURIComponent"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "232f36e7f9b29c8d98decc54217d2117beb5cc38"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_cg4vn9uzo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_cg4vn9uzo();
cov_cg4vn9uzo().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_cg4vn9uzo().f[0]++;
  cov_cg4vn9uzo().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_cg4vn9uzo().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_cg4vn9uzo().s[3]++;
_export(exports, {
  AuthProvider: function () {
    /* istanbul ignore next */
    cov_cg4vn9uzo().f[1]++;
    cov_cg4vn9uzo().s[4]++;
    return AuthProvider;
  },
  default: function () {
    /* istanbul ignore next */
    cov_cg4vn9uzo().f[2]++;
    cov_cg4vn9uzo().s[5]++;
    return _default;
  },
  useAuth: function () {
    /* istanbul ignore next */
    cov_cg4vn9uzo().f[3]++;
    cov_cg4vn9uzo().s[6]++;
    return useAuth;
  },
  useRequireAuth: function () {
    /* istanbul ignore next */
    cov_cg4vn9uzo().f[4]++;
    cov_cg4vn9uzo().s[7]++;
    return useRequireAuth;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_cg4vn9uzo().s[8]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_cg4vn9uzo().s[9]++, _interop_require_wildcard(require("react")));
const _router =
/* istanbul ignore next */
(cov_cg4vn9uzo().s[10]++, require("next/router"));
const _api =
/* istanbul ignore next */
(cov_cg4vn9uzo().s[11]++, require("../lib/api"));
const _config =
/* istanbul ignore next */
(cov_cg4vn9uzo().s[12]++, require("../config"));
const _reacthottoast =
/* istanbul ignore next */
(/*#__PURE__*/cov_cg4vn9uzo().s[13]++, _interop_require_default(require("react-hot-toast")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_cg4vn9uzo().f[5]++;
  cov_cg4vn9uzo().s[14]++;
  return /* istanbul ignore next */(cov_cg4vn9uzo().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_cg4vn9uzo().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_cg4vn9uzo().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_cg4vn9uzo().b[0][1]++, {
    default: obj
  });
}
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_cg4vn9uzo().f[6]++;
  cov_cg4vn9uzo().s[15]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_cg4vn9uzo().b[2][0]++;
    cov_cg4vn9uzo().s[16]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_cg4vn9uzo().b[2][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_cg4vn9uzo().s[17]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_cg4vn9uzo().s[18]++, new WeakMap());
  /* istanbul ignore next */
  cov_cg4vn9uzo().s[19]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_cg4vn9uzo().f[7]++;
    cov_cg4vn9uzo().s[20]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_cg4vn9uzo().b[3][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_cg4vn9uzo().b[3][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_cg4vn9uzo().f[8]++;
  cov_cg4vn9uzo().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_cg4vn9uzo().b[5][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_cg4vn9uzo().b[5][1]++, obj) &&
  /* istanbul ignore next */
  (cov_cg4vn9uzo().b[5][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_cg4vn9uzo().b[4][0]++;
    cov_cg4vn9uzo().s[22]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_cg4vn9uzo().b[4][1]++;
  }
  cov_cg4vn9uzo().s[23]++;
  if (
  /* istanbul ignore next */
  (cov_cg4vn9uzo().b[7][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_cg4vn9uzo().b[7][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_cg4vn9uzo().b[7][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_cg4vn9uzo().b[6][0]++;
    cov_cg4vn9uzo().s[24]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_cg4vn9uzo().b[6][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_cg4vn9uzo().s[25]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_cg4vn9uzo().s[26]++;
  if (
  /* istanbul ignore next */
  (cov_cg4vn9uzo().b[9][0]++, cache) &&
  /* istanbul ignore next */
  (cov_cg4vn9uzo().b[9][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_cg4vn9uzo().b[8][0]++;
    cov_cg4vn9uzo().s[27]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_cg4vn9uzo().b[8][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_cg4vn9uzo().s[28]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_cg4vn9uzo().s[29]++,
  /* istanbul ignore next */
  (cov_cg4vn9uzo().b[10][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_cg4vn9uzo().b[10][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_cg4vn9uzo().s[30]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_cg4vn9uzo().s[31]++;
    if (
    /* istanbul ignore next */
    (cov_cg4vn9uzo().b[12][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_cg4vn9uzo().b[12][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_cg4vn9uzo().b[11][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_cg4vn9uzo().s[32]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_cg4vn9uzo().b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_cg4vn9uzo().b[13][1]++, null));
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[33]++;
      if (
      /* istanbul ignore next */
      (cov_cg4vn9uzo().b[15][0]++, desc) && (
      /* istanbul ignore next */
      (cov_cg4vn9uzo().b[15][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_cg4vn9uzo().b[15][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_cg4vn9uzo().b[14][0]++;
        cov_cg4vn9uzo().s[34]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_cg4vn9uzo().b[14][1]++;
        cov_cg4vn9uzo().s[35]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_cg4vn9uzo().b[11][1]++;
    }
  }
  /* istanbul ignore next */
  cov_cg4vn9uzo().s[36]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_cg4vn9uzo().s[37]++;
  if (cache) {
    /* istanbul ignore next */
    cov_cg4vn9uzo().b[16][0]++;
    cov_cg4vn9uzo().s[38]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_cg4vn9uzo().b[16][1]++;
  }
  cov_cg4vn9uzo().s[39]++;
  return newObj;
}
/**
 * Initial authentication state on application load.
 * 
 * Sets default values for all auth state properties.
 * isLoading starts as true to prevent flash of unauthenticated content.
 */
const initialState =
/* istanbul ignore next */
(cov_cg4vn9uzo().s[40]++, {
  user: null,
  isAuthenticated: false,
  isLoading: true,
  isInitialized: false,
  isLoggingOut: false,
  error: null
});
// ==============================================================================
// STATE REDUCER
// ==============================================================================
/**
 * Authentication state reducer for predictable state management.
 * 
 * Handles all authentication state changes through well-defined actions.
 * Ensures immutable state updates and consistent state transitions.
 * 
 * Parameters:
 *   state: Current authentication state
 *   action: Action to perform with optional payload
 * 
 * Returns:
 *   AuthState: New state after applying action
 */
/* istanbul ignore next */
cov_cg4vn9uzo().s[41]++;
const authReducer = (state, action) => {
  /* istanbul ignore next */
  cov_cg4vn9uzo().f[9]++;
  cov_cg4vn9uzo().s[42]++;
  switch (action.type) {
    case "SET_LOADING":
      /* istanbul ignore next */
      cov_cg4vn9uzo().b[17][0]++;
      cov_cg4vn9uzo().s[43]++;
      return {
        ...state,
        isLoading: action.payload
      };
    case "SET_USER":
      /* istanbul ignore next */
      cov_cg4vn9uzo().b[17][1]++;
      cov_cg4vn9uzo().s[44]++;
      return {
        ...state,
        user: action.payload,
        isAuthenticated: !!action.payload,
        isLoading: false,
        error: null
      };
    case "SET_ERROR":
      /* istanbul ignore next */
      cov_cg4vn9uzo().b[17][2]++;
      cov_cg4vn9uzo().s[45]++;
      return {
        ...state,
        error: action.payload,
        isLoading: false
      };
    case "SET_INITIALIZED":
      /* istanbul ignore next */
      cov_cg4vn9uzo().b[17][3]++;
      cov_cg4vn9uzo().s[46]++;
      return {
        ...state,
        isInitialized: action.payload,
        isLoading: !action.payload
      };
    case "SET_LOGGING_OUT":
      /* istanbul ignore next */
      cov_cg4vn9uzo().b[17][4]++;
      cov_cg4vn9uzo().s[47]++;
      return {
        ...state,
        isLoggingOut: action.payload
      };
    case "LOGOUT":
      /* istanbul ignore next */
      cov_cg4vn9uzo().b[17][5]++;
      cov_cg4vn9uzo().s[48]++;
      return {
        ...initialState,
        isInitialized: true,
        isLoading: false,
        isLoggingOut: false
      };
    case "UPDATE_USER":
      /* istanbul ignore next */
      cov_cg4vn9uzo().b[17][6]++;
      cov_cg4vn9uzo().s[49]++;
      return {
        ...state,
        user: state.user ?
        /* istanbul ignore next */
        (cov_cg4vn9uzo().b[18][0]++, {
          ...state.user,
          ...action.payload
        }) :
        /* istanbul ignore next */
        (cov_cg4vn9uzo().b[18][1]++, null)
      };
    default:
      /* istanbul ignore next */
      cov_cg4vn9uzo().b[17][7]++;
      cov_cg4vn9uzo().s[50]++;
      return state;
    // No change for unknown actions
  }
};
// ==============================================================================
// CONTEXT CREATION
// ==============================================================================
/**
 * Authentication context for sharing auth state across the application.
 * 
 * Created with undefined default to force proper provider usage.
 * Components must be wrapped in AuthProvider to access context.
 */
const AuthContext =
/* istanbul ignore next */
(/*#__PURE__*/cov_cg4vn9uzo().s[51]++, (0, _react.createContext)(undefined));
/* istanbul ignore next */
cov_cg4vn9uzo().s[52]++;
const AuthProvider = ({
  children
}) => {
  /* istanbul ignore next */
  cov_cg4vn9uzo().f[10]++;
  const [state, dispatch] =
  /* istanbul ignore next */
  (cov_cg4vn9uzo().s[53]++, (0, _react.useReducer)(authReducer, initialState));
  const router =
  /* istanbul ignore next */
  (cov_cg4vn9uzo().s[54]++, (0, _router.useRouter)());
  // ===========================================================================
  // AUTHENTICATION INITIALIZATION
  // ===========================================================================
  /**
  * Initialize authentication state on component mount.
  * 
  * Runs once when the app loads to:
  *   - Check for stored authentication tokens
  *   - Restore user session from localStorage
  *   - Verify tokens with backend
  *   - Handle token refresh if needed
  *   - Clear invalid sessions
  */
  /* istanbul ignore next */
  cov_cg4vn9uzo().s[55]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_cg4vn9uzo().f[11]++;
    cov_cg4vn9uzo().s[56]++;
    const initializeAuth = async () => {
      /* istanbul ignore next */
      cov_cg4vn9uzo().f[12]++;
      cov_cg4vn9uzo().s[57]++;
      try {
        /* istanbul ignore next */
        cov_cg4vn9uzo().s[58]++;
        dispatch({
          type: "SET_LOADING",
          payload: true
        });
        // Check for stored access token
        const token =
        /* istanbul ignore next */
        (cov_cg4vn9uzo().s[59]++, _api.tokenManager.getAccessToken());
        /* istanbul ignore next */
        cov_cg4vn9uzo().s[60]++;
        if (!token) {
          /* istanbul ignore next */
          cov_cg4vn9uzo().b[19][0]++;
          cov_cg4vn9uzo().s[61]++;
          // No token found - user not logged in
          dispatch({
            type: "SET_INITIALIZED",
            payload: true
          });
          /* istanbul ignore next */
          cov_cg4vn9uzo().s[62]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_cg4vn9uzo().b[19][1]++;
        }
        // Restore user data from localStorage for immediate UI update
        const storedUser =
        /* istanbul ignore next */
        (cov_cg4vn9uzo().s[63]++, localStorage.getItem(_config.appConfig.storage.user));
        /* istanbul ignore next */
        cov_cg4vn9uzo().s[64]++;
        if (storedUser) {
          /* istanbul ignore next */
          cov_cg4vn9uzo().b[20][0]++;
          cov_cg4vn9uzo().s[65]++;
          try {
            const user =
            /* istanbul ignore next */
            (cov_cg4vn9uzo().s[66]++, JSON.parse(storedUser));
            /* istanbul ignore next */
            cov_cg4vn9uzo().s[67]++;
            dispatch({
              type: "SET_USER",
              payload: user
            });
          } catch (parseError) {
            /* istanbul ignore next */
            cov_cg4vn9uzo().s[68]++;
            console.warn("Invalid stored user data, clearing localStorage:", parseError);
            // Clear corrupted data
            /* istanbul ignore next */
            cov_cg4vn9uzo().s[69]++;
            localStorage.removeItem(_config.appConfig.storage.user);
          }
        } else
        /* istanbul ignore next */
        {
          cov_cg4vn9uzo().b[20][1]++;
        }
        // Verify token with backend and get fresh user data
        cov_cg4vn9uzo().s[70]++;
        try {
          const response =
          /* istanbul ignore next */
          (cov_cg4vn9uzo().s[71]++, await _api.api.getCurrentUser());
          // Handle different response formats - sometimes data is wrapped, sometimes direct
          const userData =
          /* istanbul ignore next */
          (cov_cg4vn9uzo().s[72]++,
          /* istanbul ignore next */
          (cov_cg4vn9uzo().b[21][0]++, response.data) ||
          /* istanbul ignore next */
          (cov_cg4vn9uzo().b[21][1]++, response));
          /* istanbul ignore next */
          cov_cg4vn9uzo().s[73]++;
          dispatch({
            type: "SET_USER",
            payload: userData
          });
          // Update stored user data with fresh backend data
          /* istanbul ignore next */
          cov_cg4vn9uzo().s[74]++;
          localStorage.setItem(_config.appConfig.storage.user, JSON.stringify(userData));
        } catch (error) {
          /* istanbul ignore next */
          cov_cg4vn9uzo().s[75]++;
          console.error("Token verification failed:", error);
          // Only try to refresh if we have a refresh token
          const refreshToken =
          /* istanbul ignore next */
          (cov_cg4vn9uzo().s[76]++, _api.tokenManager.getRefreshToken());
          /* istanbul ignore next */
          cov_cg4vn9uzo().s[77]++;
          if (refreshToken) {
            /* istanbul ignore next */
            cov_cg4vn9uzo().b[22][0]++;
            cov_cg4vn9uzo().s[78]++;
            try {
              /* istanbul ignore next */
              cov_cg4vn9uzo().s[79]++;
              await refreshTokenInternal();
            } catch (refreshError) {
              /* istanbul ignore next */
              cov_cg4vn9uzo().s[80]++;
              console.error("Token refresh failed:", refreshError);
              /* istanbul ignore next */
              cov_cg4vn9uzo().s[81]++;
              await logoutInternal();
            }
          } else {
            /* istanbul ignore next */
            cov_cg4vn9uzo().b[22][1]++;
            cov_cg4vn9uzo().s[82]++;
            console.warn("No refresh token available, clearing session");
            /* istanbul ignore next */
            cov_cg4vn9uzo().s[83]++;
            await logoutInternal();
          }
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_cg4vn9uzo().s[84]++;
        console.error("Auth initialization failed:", error);
        /* istanbul ignore next */
        cov_cg4vn9uzo().s[85]++;
        await logoutInternal();
      } finally {
        /* istanbul ignore next */
        cov_cg4vn9uzo().s[86]++;
        dispatch({
          type: "SET_INITIALIZED",
          payload: true
        });
      }
    };
    /* istanbul ignore next */
    cov_cg4vn9uzo().s[87]++;
    initializeAuth();
  }, []);
  // ===========================================================================
  // INTERNAL HELPER FUNCTIONS
  // ===========================================================================
  /**
  * Internal logout function for cleanup without API calls.
  * 
  * Used during error recovery and session cleanup.
  * Clears all stored data and resets auth state.
  */
  /* istanbul ignore next */
  cov_cg4vn9uzo().s[88]++;
  const logoutInternal = async () => {
    /* istanbul ignore next */
    cov_cg4vn9uzo().f[13]++;
    cov_cg4vn9uzo().s[89]++;
    try {
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[90]++;
      // Clear tokens from memory and localStorage
      _api.tokenManager.clearTokens();
      // Clear all stored authentication data
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[91]++;
      Object.values(_config.appConfig.storage).forEach(key => {
        /* istanbul ignore next */
        cov_cg4vn9uzo().f[14]++;
        cov_cg4vn9uzo().s[92]++;
        localStorage.removeItem(key);
      });
      // Reset auth state
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[93]++;
      dispatch({
        type: "LOGOUT"
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[94]++;
      console.error("Logout error:", error);
    }
  };
  /**
  * Internal token refresh function for session renewal.
  * 
  * Uses stored refresh token to obtain new access token.
  * Updates stored tokens with new values.
  */
  /* istanbul ignore next */
  cov_cg4vn9uzo().s[95]++;
  const refreshTokenInternal = async () => {
    /* istanbul ignore next */
    cov_cg4vn9uzo().f[15]++;
    const refreshToken =
    /* istanbul ignore next */
    (cov_cg4vn9uzo().s[96]++, _api.tokenManager.getRefreshToken());
    /* istanbul ignore next */
    cov_cg4vn9uzo().s[97]++;
    if (!refreshToken) {
      /* istanbul ignore next */
      cov_cg4vn9uzo().b[23][0]++;
      cov_cg4vn9uzo().s[98]++;
      throw new Error("No refresh token available");
    } else
    /* istanbul ignore next */
    {
      cov_cg4vn9uzo().b[23][1]++;
    }
    // Call refresh endpoint
    const response =
    /* istanbul ignore next */
    (cov_cg4vn9uzo().s[99]++, await _api.api.refreshAccessToken({
      refresh_token: refreshToken
    }));
    const {
      access_token,
      refresh_token: newRefreshToken
    } =
    /* istanbul ignore next */
    (cov_cg4vn9uzo().s[100]++, response.data);
    // Store new tokens
    /* istanbul ignore next */
    cov_cg4vn9uzo().s[101]++;
    _api.tokenManager.setTokens(access_token, newRefreshToken);
  };
  // Login function
  /* istanbul ignore next */
  cov_cg4vn9uzo().s[102]++;
  const login = async credentials => {
    /* istanbul ignore next */
    cov_cg4vn9uzo().f[16]++;
    cov_cg4vn9uzo().s[103]++;
    try {
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[104]++;
      dispatch({
        type: "SET_LOADING",
        payload: true
      });
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[105]++;
      dispatch({
        type: "SET_ERROR",
        payload: null
      });
      const response =
      /* istanbul ignore next */
      (cov_cg4vn9uzo().s[106]++, await _api.api.login(credentials));
      const {
        access_token,
        refresh_token,
        user
      } =
      /* istanbul ignore next */
      (cov_cg4vn9uzo().s[107]++, response.data);
      // Store tokens
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[108]++;
      _api.tokenManager.setTokens(access_token, refresh_token);
      // Store user data
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[109]++;
      localStorage.setItem(_config.appConfig.storage.user, JSON.stringify(user));
      // Update state
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[110]++;
      dispatch({
        type: "SET_USER",
        payload: user
      });
      // Track login event with PostHog
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[111]++;
      try {
        const {
          trackEvent,
          identifyUser
        } =
        /* istanbul ignore next */
        (cov_cg4vn9uzo().s[112]++, await Promise.resolve().then(() => {
          /* istanbul ignore next */
          cov_cg4vn9uzo().f[17]++;
          cov_cg4vn9uzo().s[113]++;
          return /*#__PURE__*/_interop_require_wildcard(require("../lib/analytics"));
        }));
        // Identify the user
        /* istanbul ignore next */
        cov_cg4vn9uzo().s[114]++;
        identifyUser(user.id, {
          email: user.email,
          first_name: user.first_name,
          last_name: user.last_name,
          subscription_tier: user.subscription_tier
        });
        // Track login event
        /* istanbul ignore next */
        cov_cg4vn9uzo().s[115]++;
        trackEvent("user_login", {
          method: "email",
          user_id: user.id,
          timestamp: new Date().toISOString()
        });
      } catch (trackingError) {
        /* istanbul ignore next */
        cov_cg4vn9uzo().s[116]++;
        console.warn("Failed to track login event:", trackingError);
      }
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[117]++;
      _reacthottoast.default.success(_config.appConfig.success.login);
    } catch (error) {
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[118]++;
      console.error("Login error:", error);
      const errorMessage =
      /* istanbul ignore next */
      (cov_cg4vn9uzo().s[119]++,
      /* istanbul ignore next */
      (cov_cg4vn9uzo().b[24][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_cg4vn9uzo().b[24][1]++, _config.appConfig.errors.unknown));
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[120]++;
      dispatch({
        type: "SET_ERROR",
        payload: errorMessage
      });
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[121]++;
      _reacthottoast.default.error(errorMessage);
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[122]++;
      throw error;
    }
  };
  // Register function
  /* istanbul ignore next */
  cov_cg4vn9uzo().s[123]++;
  const register = async userData => {
    /* istanbul ignore next */
    cov_cg4vn9uzo().f[18]++;
    cov_cg4vn9uzo().s[124]++;
    try {
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[125]++;
      dispatch({
        type: "SET_LOADING",
        payload: true
      });
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[126]++;
      dispatch({
        type: "SET_ERROR",
        payload: null
      });
      const response =
      /* istanbul ignore next */
      (cov_cg4vn9uzo().s[127]++, await _api.api.register(userData));
      const {
        access_token,
        refresh_token,
        user
      } =
      /* istanbul ignore next */
      (cov_cg4vn9uzo().s[128]++, response.data);
      // Store tokens
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[129]++;
      _api.tokenManager.setTokens(access_token, refresh_token);
      // Store user data
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[130]++;
      localStorage.setItem(_config.appConfig.storage.user, JSON.stringify(user));
      // Update state
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[131]++;
      dispatch({
        type: "SET_USER",
        payload: user
      });
      // Track registration event with PostHog
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[132]++;
      try {
        const {
          trackEvent,
          identifyUser
        } =
        /* istanbul ignore next */
        (cov_cg4vn9uzo().s[133]++, await Promise.resolve().then(() => {
          /* istanbul ignore next */
          cov_cg4vn9uzo().f[19]++;
          cov_cg4vn9uzo().s[134]++;
          return /*#__PURE__*/_interop_require_wildcard(require("../lib/analytics"));
        }));
        // Identify the user
        /* istanbul ignore next */
        cov_cg4vn9uzo().s[135]++;
        identifyUser(user.id, {
          email: user.email,
          first_name: user.first_name,
          last_name: user.last_name,
          created_at: user.created_at,
          subscription_tier: user.subscription_tier
        });
        // Track registration event
        /* istanbul ignore next */
        cov_cg4vn9uzo().s[136]++;
        trackEvent("user_register", {
          method: "email",
          marketing_consent: userData.marketing_consent,
          user_id: user.id,
          source: "web",
          timestamp: new Date().toISOString()
        });
      } catch (trackingError) {
        /* istanbul ignore next */
        cov_cg4vn9uzo().s[137]++;
        console.warn("Failed to track registration event:", trackingError);
      }
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[138]++;
      _reacthottoast.default.success(_config.appConfig.success.register);
    } catch (error) {
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[139]++;
      console.error("Registration error:", error);
      const errorMessage =
      /* istanbul ignore next */
      (cov_cg4vn9uzo().s[140]++,
      /* istanbul ignore next */
      (cov_cg4vn9uzo().b[25][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_cg4vn9uzo().b[25][1]++, _config.appConfig.errors.unknown));
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[141]++;
      dispatch({
        type: "SET_ERROR",
        payload: errorMessage
      });
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[142]++;
      _reacthottoast.default.error(errorMessage);
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[143]++;
      throw error;
    }
  };
  // Logout function
  /* istanbul ignore next */
  cov_cg4vn9uzo().s[144]++;
  const logout = async () => {
    /* istanbul ignore next */
    cov_cg4vn9uzo().f[20]++;
    cov_cg4vn9uzo().s[145]++;
    try {
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[146]++;
      dispatch({
        type: "SET_LOGGING_OUT",
        payload: true
      });
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[147]++;
      dispatch({
        type: "SET_LOADING",
        payload: true
      });
      // Call logout API
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[148]++;
      try {
        /* istanbul ignore next */
        cov_cg4vn9uzo().s[149]++;
        await _api.api.logout();
      } catch (error) {
        /* istanbul ignore next */
        cov_cg4vn9uzo().s[150]++;
        console.warn("Logout API call failed:", error);
      }
      // Track logout event with PostHog
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[151]++;
      if (state.user) {
        /* istanbul ignore next */
        cov_cg4vn9uzo().b[26][0]++;
        cov_cg4vn9uzo().s[152]++;
        try {
          const {
            trackEvent,
            analytics
          } =
          /* istanbul ignore next */
          (cov_cg4vn9uzo().s[153]++, await Promise.resolve().then(() => {
            /* istanbul ignore next */
            cov_cg4vn9uzo().f[21]++;
            cov_cg4vn9uzo().s[154]++;
            return /*#__PURE__*/_interop_require_wildcard(require("../lib/analytics"));
          }));
          /* istanbul ignore next */
          cov_cg4vn9uzo().s[155]++;
          trackEvent("user_logout", {
            user_id: state.user.id,
            timestamp: new Date().toISOString()
          });
          // Reset PostHog user session
          /* istanbul ignore next */
          cov_cg4vn9uzo().s[156]++;
          analytics.reset();
        } catch (trackingError) {
          /* istanbul ignore next */
          cov_cg4vn9uzo().s[157]++;
          console.warn("Failed to track logout event:", trackingError);
        }
      } else
      /* istanbul ignore next */
      {
        cov_cg4vn9uzo().b[26][1]++;
      }
      cov_cg4vn9uzo().s[158]++;
      await logoutInternal();
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[159]++;
      console.log("\uD83D\uDEAA Logout completed, redirecting to homepage...");
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[160]++;
      _reacthottoast.default.success(_config.appConfig.success.logout);
      // Small delay to ensure state update completes before redirect
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[161]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_cg4vn9uzo().f[22]++;
        cov_cg4vn9uzo().s[162]++;
        console.log("\uD83D\uDEAA Executing redirect to homepage");
        /* istanbul ignore next */
        cov_cg4vn9uzo().s[163]++;
        router.replace("/");
      }, 100);
    } catch (error) {
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[164]++;
      console.error("Logout error:", error);
      // Force logout even if API call fails
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[165]++;
      await logoutInternal();
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[166]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_cg4vn9uzo().f[23]++;
        cov_cg4vn9uzo().s[167]++;
        router.replace("/");
      }, 100);
    }
  };
  // Refresh token function
  /* istanbul ignore next */
  cov_cg4vn9uzo().s[168]++;
  const refreshToken = async () => {
    /* istanbul ignore next */
    cov_cg4vn9uzo().f[24]++;
    cov_cg4vn9uzo().s[169]++;
    try {
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[170]++;
      await refreshTokenInternal();
    } catch (error) {
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[171]++;
      console.error("Token refresh failed:", error);
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[172]++;
      await logoutInternal();
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[173]++;
      throw error;
    }
  };
  // Clear error function
  /* istanbul ignore next */
  cov_cg4vn9uzo().s[174]++;
  const clearError = () => {
    /* istanbul ignore next */
    cov_cg4vn9uzo().f[25]++;
    cov_cg4vn9uzo().s[175]++;
    dispatch({
      type: "SET_ERROR",
      payload: null
    });
  };
  // Update user function
  /* istanbul ignore next */
  cov_cg4vn9uzo().s[176]++;
  const updateUser = userData => {
    /* istanbul ignore next */
    cov_cg4vn9uzo().f[26]++;
    cov_cg4vn9uzo().s[177]++;
    if (state.user) {
      /* istanbul ignore next */
      cov_cg4vn9uzo().b[27][0]++;
      const updatedUser =
      /* istanbul ignore next */
      (cov_cg4vn9uzo().s[178]++, {
        ...state.user,
        ...userData
      });
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[179]++;
      localStorage.setItem(_config.appConfig.storage.user, JSON.stringify(updatedUser));
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[180]++;
      dispatch({
        type: "UPDATE_USER",
        payload: userData
      });
    } else
    /* istanbul ignore next */
    {
      cov_cg4vn9uzo().b[27][1]++;
    }
  };
  const value =
  /* istanbul ignore next */
  (cov_cg4vn9uzo().s[181]++, {
    ...state,
    login,
    register,
    logout,
    refreshToken,
    clearError,
    updateUser
  });
  /* istanbul ignore next */
  cov_cg4vn9uzo().s[182]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(AuthContext.Provider, {
    value: value,
    children: children
  });
};
/* istanbul ignore next */
cov_cg4vn9uzo().s[183]++;
const useAuth = () => {
  /* istanbul ignore next */
  cov_cg4vn9uzo().f[27]++;
  const context =
  /* istanbul ignore next */
  (cov_cg4vn9uzo().s[184]++, (0, _react.useContext)(AuthContext));
  /* istanbul ignore next */
  cov_cg4vn9uzo().s[185]++;
  if (context === undefined) {
    /* istanbul ignore next */
    cov_cg4vn9uzo().b[28][0]++;
    cov_cg4vn9uzo().s[186]++;
    throw new Error("useAuth must be used within an AuthProvider");
  } else
  /* istanbul ignore next */
  {
    cov_cg4vn9uzo().b[28][1]++;
  }
  cov_cg4vn9uzo().s[187]++;
  return context;
};
/* istanbul ignore next */
cov_cg4vn9uzo().s[188]++;
const useRequireAuth = (redirectTo =
/* istanbul ignore next */
(cov_cg4vn9uzo().b[29][0]++, "/auth/login")) => {
  /* istanbul ignore next */
  cov_cg4vn9uzo().f[28]++;
  const {
    isAuthenticated,
    isInitialized
  } =
  /* istanbul ignore next */
  (cov_cg4vn9uzo().s[189]++, useAuth());
  const router =
  /* istanbul ignore next */
  (cov_cg4vn9uzo().s[190]++, (0, _router.useRouter)());
  /* istanbul ignore next */
  cov_cg4vn9uzo().s[191]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_cg4vn9uzo().f[29]++;
    cov_cg4vn9uzo().s[192]++;
    if (
    /* istanbul ignore next */
    (cov_cg4vn9uzo().b[31][0]++, isInitialized) &&
    /* istanbul ignore next */
    (cov_cg4vn9uzo().b[31][1]++, !isAuthenticated)) {
      /* istanbul ignore next */
      cov_cg4vn9uzo().b[30][0]++;
      const currentPath =
      /* istanbul ignore next */
      (cov_cg4vn9uzo().s[193]++, router.asPath);
      const redirectUrl =
      /* istanbul ignore next */
      (cov_cg4vn9uzo().s[194]++, `${redirectTo}?redirect=${encodeURIComponent(currentPath)}`);
      /* istanbul ignore next */
      cov_cg4vn9uzo().s[195]++;
      router.replace(redirectUrl);
    } else
    /* istanbul ignore next */
    {
      cov_cg4vn9uzo().b[30][1]++;
    }
  }, [isAuthenticated, isInitialized, router, redirectTo]);
  /* istanbul ignore next */
  cov_cg4vn9uzo().s[196]++;
  return {
    isAuthenticated,
    isInitialized
  };
};
const _default =
/* istanbul ignore next */
(cov_cg4vn9uzo().s[197]++, AuthContext);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,